{"version":3,"file":"bundle.5b1c41d72777d94e3493.js","mappings":"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","sources":["webpack://treasures-and-monsters/./src/common/load/ImageLoader/delay.ts","webpack://treasures-and-monsters/./src/common/load/ImageLoader/InlineSvgImageFile.ts","webpack://treasures-and-monsters/./src/common/load/ImageLoader/SuperSvgXHRLoader.ts","webpack://treasures-and-monsters/./src/common/load/ImageLoader/ContentDetector.ts","webpack://treasures-and-monsters/./src/common/load/ImageLoader/SuperSvgImageFile.ts","webpack://treasures-and-monsters/./src/common/load/ImageLoader/registerSuperSvgLoader.ts","webpack://treasures-and-monsters/./src/common/load/PreloadTask/PreloadTask.ts","webpack://treasures-and-monsters/./src/common/load/asyncPhaserLoad/asyncPhaserLoad.ts","webpack://treasures-and-monsters/./src/common/load/fontLoad/fontLoad.ts","webpack://treasures-and-monsters/./node_modules/webfontloader/webfontloader.js","webpack://treasures-and-monsters/webpack/bootstrap","webpack://treasures-and-monsters/webpack/runtime/compat get default export","webpack://treasures-and-monsters/webpack/runtime/define property getters","webpack://treasures-and-monsters/webpack/runtime/hasOwnProperty shorthand","webpack://treasures-and-monsters/./storybook/StoryScene.ts","webpack://treasures-and-monsters/./storybook/interfaces.ts","webpack://treasures-and-monsters/./src/components/Test/TestButton.ts","webpack://treasures-and-monsters/./src/components/Test/TestButton.story.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/data/cards/players/index.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/data/cards/monsters/index.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/data/cards/treasures/index.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/data/locale/types.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/data/locale/index.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/config.ts","webpack://treasures-and-monsters/./src/common/array/getRandomArrayElementWithFilter.ts","webpack://treasures-and-monsters/./src/common/array/shuffle.ts","webpack://treasures-and-monsters/./src/common/array/repeatArray.ts","webpack://treasures-and-monsters/./src/common/Array2D/CellMapCollider/CellMapCollider.ts","webpack://treasures-and-monsters/./src/common/Array2D/SimpleArray2D/forEach2D.ts","webpack://treasures-and-monsters/./src/common/Array2D/SimpleArray2D/getters.ts","webpack://treasures-and-monsters/./src/common/Array2D/SimpleArray2D/makeArray2D.ts","webpack://treasures-and-monsters/./src/common/Array2D/SimpleArray2D/Array2DMarker.ts","webpack://treasures-and-monsters/./src/common/Array2D/HexArray/getters.ts","webpack://treasures-and-monsters/./src/common/Array2D/HexArray/getHexNears.ts","webpack://treasures-and-monsters/./src/common/Array2D/HexArray/axialToCube.ts","webpack://treasures-and-monsters/./src/common/Array2D/HexArray/getHexNearsInRadius.ts","webpack://treasures-and-monsters/./src/common/Array2D/HexArray/HexGridMarker.ts","webpack://treasures-and-monsters/./src/common/Array2D/Path/getSquareGridPath.ts","webpack://treasures-and-monsters/./src/common/Array2D/Path/interfaces.ts","webpack://treasures-and-monsters/./src/common/Array2D/Path/getAbstractGridPath.ts","webpack://treasures-and-monsters/./src/common/Array2D/Path/getHexGridPath.ts","webpack://treasures-and-monsters/./src/common/assets/AssetManager.ts","webpack://treasures-and-monsters/./src/common/color/cssColorToInt.ts","webpack://treasures-and-monsters/./src/common/components/CanvasImage/CanvasImage.ts","webpack://treasures-and-monsters/./src/common/components/NinePatch/config.ts","webpack://treasures-and-monsters/./src/common/components/NinePatch/NinePatch.ts","webpack://treasures-and-monsters/./src/common/components/TextFloater/props.ts","webpack://treasures-and-monsters/./src/common/components/TextFloater/TextFloater.ts","webpack://treasures-and-monsters/./src/common/layout/Align.ts","webpack://treasures-and-monsters/./src/common/components/TextRectangle/TextRectangle.ts","webpack://treasures-and-monsters/./src/common/draw/constants.ts","webpack://treasures-and-monsters/./src/common/draw/PhaserDraw.ts","webpack://treasures-and-monsters/./src/common/objects/index.ts","webpack://treasures-and-monsters/./src/common/phaser-sugar/interfaces.ts","webpack://treasures-and-monsters/./src/common/phaser-sugar/defaults.ts","webpack://treasures-and-monsters/./src/common/phaser-sugar/internals.ts","webpack://treasures-and-monsters/./src/common/phaser-sugar/text.ts","webpack://treasures-and-monsters/./src/common/phaser-sugar/objects.ts","webpack://treasures-and-monsters/./src/common/phaser-sugar/layout.ts","webpack://treasures-and-monsters/./src/common/phaser-sugar/layoutSugar.ts","webpack://treasures-and-monsters/./src/common/phaser-sugar/position/getScreenPosition.ts","webpack://treasures-and-monsters/./src/common/phaser-sugar/keyboard/index.ts","webpack://treasures-and-monsters/./src/common/phaser-sugar/camera/addCameraDraggingToObject.ts","webpack://treasures-and-monsters/./src/common/phaser-sugar/camera/camera.ts","webpack://treasures-and-monsters/./src/common/statevent/StateEvent.ts","webpack://treasures-and-monsters/./src/components/SpriteGrid/path/SimplePathBuilder.ts","webpack://treasures-and-monsters/./src/components/SpriteGrid/path/SimpleGridPathMaker.ts","webpack://treasures-and-monsters/./src/components/SpriteGrid/selectors/SpriteGridHexSelector/index.ts","webpack://treasures-and-monsters/./src/components/SpriteGrid/selectors/SimpleHexSelector.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/components/figures/PlayerFigure/index.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/components/figures/TreasureFigure/index.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/components/figures/MonsterFigure/index.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/logic/mapGenerators/terrains/MonoTerrainGenerator/index.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/logic/mapGenerators/maps/FirstMapGenerator/index.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/logic/mapGenerators/maps/SimpleMonoHexMapGenerator/index.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/logic/utils/getCellFigures.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/logic/utils/isCellPathBlock.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/components/cells/GameCell/index.ts","webpack://treasures-and-monsters/./src/components/SpriteGrid/strategies/HexStrategy.ts","webpack://treasures-and-monsters/./src/components/SpriteGrid/strategies/SquareStrategy.ts","webpack://treasures-and-monsters/./src/components/SpriteGrid/cells/SpriteGridColorCell.ts","webpack://treasures-and-monsters/./src/components/SpriteGrid/cells/SpriteGridColorHexCell.ts","webpack://treasures-and-monsters/./src/components/SpriteGrid/SimpleHexSpriteGrid.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/components/grid/GameGrid.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/adapters.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/components/figures/DungeonFigure/index.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/logic/state/defaultState.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/logic/state/utils/commonUtils.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/logic/state/utils/initGameState.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/TreasuresAndMonsters.ts","webpack://treasures-and-monsters/./src/components/TreasuresAndMonsters/TreasuresAndMonsters.story.ts","webpack://treasures-and-monsters/./storybook/stories.ts","webpack://treasures-and-monsters/./src/scenes/MainScene.ts","webpack://treasures-and-monsters/./src/config.ts","webpack://treasures-and-monsters/./storybook/index.ts"],"sourcesContent":["export async function delay(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","import { delay } from \"./delay\";\n\nexport interface InlineSvgProps {\n  key: string;\n  src: string;\n  scale?: number;\n  width?: number;\n  height?: number;\n}\n\nexport interface InlineSvgLoaderPlugin extends Phaser.Loader.LoaderPlugin {\n  svgInline(props: InlineSvgProps): any;\n}\n\n/**\n * inline Svg file для загрузчика Phaser\n * после загрузки нет разницы межды inline и обычным svg\n */\nexport class InlineSvgImageFile extends Phaser.Loader.File {\n  src: string;\n  cache: Phaser.Textures.TextureManager;\n  private readonly props: InlineSvgProps;\n\n  private static isRegistered = false;\n\n  constructor(loader: Phaser.Loader.LoaderPlugin, props: InlineSvgProps) {\n    const fileConfig = {\n      type: 'image',\n      cache: loader.textureManager,\n      ...props,\n    };\n    super(loader, fileConfig);\n    this.src = fileConfig.src.trim();\n    this.props = props;\n    this.cache = loader.textureManager;\n  }\n\n  /**\n   * Функция добавляет к стандартному Phaser.Loader метод svgInline\n   * чтобы использовать\n   * load.svgInline(props)\n   */\n\n  static registerInPhaserLoader() {\n    if (InlineSvgImageFile.isRegistered) return;\n    Phaser.Loader.FileTypesManager.register(\n      'svgInline',\n      function (this: Phaser.Loader.LoaderPlugin, props: InlineSvgProps) {\n        this.addFile(new InlineSvgImageFile(this, props));\n        return this;\n      },\n    );\n    InlineSvgImageFile.isRegistered = true;\n  }\n\n  /**\n   * Called by the Loader, starts the actual file downloading.\n   * During the load the methods onLoad, onError and onProgress are called, based on the XHR events.\n   */\n  load() {\n    if (this.state === Phaser.Loader.FILE_POPULATED) {\n      //  Can happen for example in a JSONFile if they've provided a JSON object instead of a URL\n      this.loader.nextFile(this, true);\n    } else {\n      this.state = Phaser.Loader.FILE_LOADING;\n      this.loader.nextFile(this, true);\n    }\n  }\n\n  onLoad() {\n    this.loader?.nextFile(this, true);\n  }\n\n  /**\n   * Called automatically by Loader.nextFile.\n   * This method controls what extra work this File does with its loaded data.\n   *\n   * @method Phaser.Loader.FileTypes.SVGFile#onProcess\n   * @since 3.7.0\n   */\n  async onProcess() {\n    this.state = Phaser.Loader.FILE_PROCESSING;\n    try {\n      this.onSvgProcess(this.src);\n    } catch (e) {\n      this.onProcessError();\n    }\n  }\n\n  onSvgProcess(svgSrc: string) {\n    this.state = Phaser.Loader.FILE_PROCESSING;\n\n    let svg = [svgSrc];\n    let { width, height, scale } = this.props;\n\n    resize: if ((width && height) || scale) {\n      let xml = null;\n      let parser = new DOMParser();\n      xml = parser.parseFromString(svgSrc, 'text/xml');\n      let svgXML = xml.getElementsByTagName('svg')[0];\n\n      let viewBox = svgXML.getAttribute('viewBox');\n      let hasViewBox = viewBox != null;\n      let svgWidth = parseFloat(svgXML.getAttribute('width') ?? '100');\n      let svgHeight = parseFloat(svgXML.getAttribute('height') ?? '100');\n\n      if (!hasViewBox && svgWidth && svgHeight) {\n        //  If there's no viewBox attribute, set one\n        svgXML.setAttribute('viewBox', '0  0 ' + svgWidth + ' ' + svgHeight);\n      } else if (hasViewBox && !svgWidth && !svgHeight) {\n        //  Get the w/h from the viewbox\n        let viewBoxParts = viewBox!.split(/\\s+|,/);\n\n        svgWidth = +viewBoxParts[2];\n        svgHeight = +viewBoxParts[3];\n      }\n\n      if (scale) {\n        if (svgWidth && svgHeight) {\n          width = svgWidth * scale;\n          height = svgHeight * scale;\n        } else {\n          break resize;\n        }\n      }\n\n      if (width && height) {\n        svgXML.setAttribute('width', width.toString() + 'px');\n        svgXML.setAttribute('height', height.toString() + 'px');\n      }\n\n      svg = [new XMLSerializer().serializeToString(svgXML)];\n    }\n\n    let blob: Blob;\n    try {\n      blob = new window.Blob(svg, { type: 'image/svg+xml;charset=utf-8' });\n    } catch (e) {\n      this.onProcessError();\n      return;\n    }\n\n    this.data = new Image();\n\n    this.data.crossOrigin = this.crossOrigin;\n\n    let _this = this;\n    let retry = false;\n\n    const isInlineBitmap = svgSrc.indexOf('data:image') > -1;\n    this.data.onload = async () => {\n      const INLINE_BITMAP_DELAY = 300;\n      if (isInlineBitmap) {\n        // иначе iOS не успеет обработать data:image/png;base64\n        await delay(INLINE_BITMAP_DELAY);\n      }\n      if (!retry) {\n        Phaser.Loader.File.revokeObjectURL(this.data);\n      }\n      this.onProcessComplete();\n    };\n\n    this.data.onerror = function () {\n      //  Safari 8+ re-try\n      if (!retry) {\n        retry = true;\n\n        Phaser.Loader.File.revokeObjectURL(_this.data);\n\n        /**\n         *  Повторная загрузка в тот же Image (this.data)\n         *  не срабатывает - вложенные битмапы не показываются при первой загрузке\n         **/\n        const altUrl = 'data:image/svg+xml,' + encodeURIComponent(svg.join(''));\n        const tmpImage = new Image();\n        tmpImage.onload = () => {\n          _this.data.src = altUrl;\n        };\n        tmpImage.src = altUrl;\n      } else {\n        _this.onProcessError();\n      }\n    };\n\n    Phaser.Loader.File.createObjectURL(this.data, blob, 'image/svg+xml');\n  }\n\n  /**\n   * Adds this file to its target cache upon successful loading and processing.\n   *\n   * @method Phaser.Loader.FileTypes.SVGFile#addToCache\n   * @since 3.7.0\n   */\n  addToCache() {\n    this.cache.addImage(this.key, this.data);\n    this.pendingDestroy();\n  }\n}\n","/**\n * если contentType!=responseType - установить наиболее подходящий\n * responseType\n */\nexport class SuperSvgXHRLoaderFabric {\n  static buildXHR(\n    file: Phaser.Loader.File,\n    globalXHRSettings: Phaser.Types.Loader.XHRSettingsObject,\n    responseType: XMLHttpRequestResponseType,\n  ) {\n    const config = MergeXHRSettings(globalXHRSettings, file.xhrSettings);\n    config.async = config.async ?? true;\n\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', file.src, config.async ?? true, config.user, config.password);\n\n    xhr.responseType = responseType;\n    xhr.timeout = config.timeout ?? 100000;\n\n    if (config.headers) {\n      for (const key in config.headers) {\n        xhr.setRequestHeader(key, config.headers[key]);\n      }\n    }\n\n    if (config.header && config.headerValue) {\n      xhr.setRequestHeader(config.header, config.headerValue);\n    }\n\n    if (config.requestedWith) {\n      xhr.setRequestHeader('X-Requested-With', config.requestedWith);\n    }\n\n    if (config.overrideMimeType) {\n      xhr.overrideMimeType(config.overrideMimeType);\n    }\n\n    if (config.withCredentials) {\n      xhr.withCredentials = true;\n    }\n\n    // After a successful request, the xhr.response property will contain the requested data as a DOMString, ArrayBuffer, Blob, or Document (depending on what was set for responseType.)\n\n    xhr.onload = file.onLoad.bind(file, xhr);\n    xhr.onerror = file.onError.bind(file, xhr);\n    xhr.onprogress = file.onProgress.bind(file);\n\n    return xhr;\n  }\n}\n\nfunction MergeXHRSettings(global: XHRSettings, local: XHRSettings): XHRSettings {\n  const output: XHRSettings = global === undefined ? Phaser.Loader.XHRSettings() : { ...global };\n  if (local) {\n    for (let setting in local) {\n      if (local.hasOwnProperty(setting)) {\n        output[setting] = local[setting];\n      }\n    }\n  }\n  return output;\n}\n\ninterface XHRSettings extends Phaser.Types.Loader.XHRSettingsObject {\n  headers?: {\n    [key: string]: any;\n  };\n\n  [key: string]: any;\n}\n","export namespace ContentDetector {\n  export function isSvg(contentType: string | null): boolean {\n    return ContentDetector.isContent(contentType, 'image/svg+xml');\n  }\n\n  export function isPng(contentType: string | null): boolean {\n    return ContentDetector.isContent(contentType, 'image/png');\n  }\n\n  export function isJpeg(contentType: string | null): boolean {\n    return ContentDetector.isContent(contentType, 'image/jpeg');\n  }\n\n  export function isContent(contentType: string | null, typeMarker: string) {\n    if (contentType == null) return false;\n    return contentType.indexOf(typeMarker) > -1;\n  }\n}\n","import { SuperSvgXHRLoaderFabric } from \"./SuperSvgXHRLoader\";\nimport { ContentDetector } from \"./ContentDetector\";\nimport { delay } from \"./delay\";\n\n/**\n * Svg file для загрузчика Phaser\n * который может обрабатывать и url растровых изображений\n *  how to use - instead load.svg -\n *  load.addFile(new SuperSvgImageFile(load, jpgUrl, jpgUrl, { scale: zoom }));\n *  load.addFile(new SuperSvgImageFile(load, svgUrl, svgUrl, { scale: zoom }));\n *  load.addFile(new SuperSvgImageFile(load, pngUrl, pngUrl, { scale: zoom }));\n */\nexport class SuperSvgImageFile extends Phaser.Loader.FileTypes.SVGFile {\n  /**\n   * Called by the Loader, starts the actual file downloading.\n   * During the load the methods onLoad, onError and onProgress are called, based on the XHR events.\n   * You shouldn't normally call this method directly, it's meant to be invoked by the Loader.\n   *\n   * @method Phaser.Loader.File#load\n   * @since 3.0.0\n   */\n  load() {\n    if (this.state === Phaser.Loader.FILE_POPULATED) {\n      //  Can happen for example in a JSONFile if they've provided a JSON object instead of a URL\n      this.loader.nextFile(this, true);\n    } else {\n      this.state = Phaser.Loader.FILE_LOADING;\n\n      this.src = Phaser.Loader.GetURL(this, this.loader.baseURL);\n\n      if (this.src.indexOf(\"data:\") === 0) {\n        console.warn(\"Local data URIs are not supported: \" + this.key);\n        return;\n      }\n\n      /**\n       *   Сначала загружаем как text\n       */\n      this.xhrLoader = SuperSvgXHRLoaderFabric.buildXHR(\n        this,\n        this.loader.xhr,\n        \"text\"\n      );\n      this.xhrLoader.send();\n\n      /**\n       *  2. if got bitmap type - reload as image/png\n       */\n      this.xhrLoader.onreadystatechange = () => {\n        const { xhrLoader } = this;\n        if (xhrLoader == null) {\n          console.warn(\"xhrLoader==null\");\n          return;\n        }\n        const contentType = xhrLoader.getResponseHeader(\"content-type\");\n        if (contentType == null) return;\n        if (!ContentDetector.isSvg(contentType)) {\n          xhrLoader.abort();\n          this.xhrLoader = SuperSvgXHRLoaderFabric.buildXHR(\n            this,\n            this.loader.xhr,\n            \"blob\"\n          );\n          this.xhrLoader.send();\n        }\n      };\n    }\n  }\n\n  onLoad() {\n    this.loader?.nextFile(this, true);\n  }\n\n  /**\n   * Called automatically by Loader.nextFile.\n   * This method controls what extra work this File does with its loaded data.\n   *\n   * @method Phaser.Loader.FileTypes.SVGFile#onProcess\n   * @since 3.7.0\n   */\n  async onProcess() {\n    this.state = Phaser.Loader.FILE_PROCESSING;\n    const { xhrLoader } = this;\n    if (xhrLoader == null) {\n      console.warn(\"xhrLoader==null\");\n      return;\n    }\n    const contentType = xhrLoader.getResponseHeader(\"Content-Type\");\n    if (contentType == null) {\n      this.onProcessComplete();\n      return;\n    }\n\n    const response = xhrLoader.response;\n\n    if (ContentDetector.isSvg(contentType)) {\n      try {\n        this.onSvgProcess(response);\n      } catch (e) {\n        console.warn(e);\n        this.onProcessError();\n      }\n    } else {\n      console.log(\"load non svg\", this.src);\n      this.onNonSvgProcess(response);\n    }\n  }\n\n  onSvgProcess(svgSrc: string) {\n    this.state = Phaser.Loader.FILE_PROCESSING;\n\n    let svg = [svgSrc];\n    let width = this.config.width;\n    let height = this.config.height;\n    let scale = this.config.scale;\n\n    resize: if ((width && height) || scale) {\n      let xml = null;\n      let parser = new DOMParser();\n      xml = parser.parseFromString(svgSrc, \"text/xml\");\n      let svgXML = xml.getElementsByTagName(\"svg\")[0];\n\n      let viewBox = svgXML.getAttribute(\"viewBox\");\n      let hasViewBox = viewBox != null;\n      let svgWidth = parseFloat(svgXML.getAttribute(\"width\") ?? \"100\");\n      let svgHeight = parseFloat(svgXML.getAttribute(\"height\") ?? \"100\");\n\n      if (!hasViewBox && svgWidth && svgHeight) {\n        //  If there's no viewBox attribute, set one\n        svgXML.setAttribute(\"viewBox\", \"0  0 \" + svgWidth + \" \" + svgHeight);\n      } else if (hasViewBox && !svgWidth && !svgHeight) {\n        //  Get the w/h from the viewbox\n        let viewBoxParts = viewBox!.split(/\\s+|,/);\n\n        svgWidth = +viewBoxParts[2];\n        svgHeight = +viewBoxParts[3];\n      }\n\n      if (scale) {\n        if (svgWidth && svgHeight) {\n          width = svgWidth * scale;\n          height = svgHeight * scale;\n        } else {\n          break resize;\n        }\n      }\n\n      svgXML.setAttribute(\"width\", width.toString() + \"px\");\n      svgXML.setAttribute(\"height\", height.toString() + \"px\");\n\n      svg = [new XMLSerializer().serializeToString(svgXML)];\n    }\n\n    let blob: Blob;\n    try {\n      blob = new window.Blob(svg, { type: \"image/svg+xml;charset=utf-8\" });\n    } catch (e) {\n      this.onProcessError();\n      return;\n    }\n\n    this.data = new Image();\n\n    this.data.crossOrigin = this.crossOrigin;\n\n    let _this = this;\n    let retry = false;\n    const isInlineBitmap = svgSrc.indexOf(\"data:image\") > -1;\n\n    this.data.onload = async () => {\n      const INLINE_BITMAP_DELAY = 300;\n      if (isInlineBitmap) {\n        // иначе iOS не успеет обработать data:image/png;base64\n        await delay(INLINE_BITMAP_DELAY);\n      }\n      if (!retry) {\n        Phaser.Loader.File.revokeObjectURL(this.data);\n      }\n      this.onProcessComplete();\n    };\n\n    this.data.onerror = function () {\n      //  Safari 8+ re-try\n      if (!retry) {\n        retry = true;\n\n        Phaser.Loader.File.revokeObjectURL(_this.data);\n\n        /**\n         *  Повторная загрузка в тот же Image (this.data)\n         *  не срабатывает - вложенные битмапы не показываются при первой загрузке\n         **/\n        const altUrl = \"data:image/svg+xml,\" + encodeURIComponent(svg.join(\"\"));\n        const tmpImage = new Image();\n        tmpImage.onload = () => {\n          _this.data.src = altUrl;\n        };\n        tmpImage.src = altUrl;\n      } else {\n        _this.onProcessError();\n      }\n    };\n\n    Phaser.Loader.File.createObjectURL(this.data, blob, \"image/svg+xml\");\n  }\n\n  onNonSvgProcess(blob: Blob) {\n    this.state = Phaser.Loader.FILE_PROCESSING;\n\n    this.data = new Image();\n\n    this.data.crossOrigin = this.crossOrigin;\n\n    this.data.onload = () => {\n      Phaser.Loader.File.revokeObjectURL(this.data);\n      this.onProcessComplete();\n    };\n\n    this.data.onerror = () => {\n      Phaser.Loader.File.revokeObjectURL(this.data);\n\n      this.onProcessError();\n    };\n\n    Phaser.Loader.File.createObjectURL(this.data, blob, \"image/png\");\n  }\n}\n","import { SuperSvgImageFile } from \"./SuperSvgImageFile\";\n\n/**\n * Вызвать эту функцию до создания игры\n * и стандартный load.svg сможет загружать картинки растровые (если те туда случайно попадут)\n *\n * при этом будет создаваться дополнительный сетевой запрос на проверку\n * так что в смысле красивой работы - лучше растровые все же грузить отдельно\n */\nexport function registerSuperSvgLoader() {\n  Phaser.Loader.FileTypesManager.register(\n    'svg',\n    function (\n      this: Phaser.Loader.LoaderPlugin,\n      key:\n        | string\n        | Phaser.Types.Loader.FileTypes.SVGFileConfig\n        | Phaser.Types.Loader.FileTypes.SVGFileConfig[],\n      url?: string,\n      svgConfig?: Phaser.Types.Loader.FileTypes.SVGSizeConfig,\n      xhrSettings?: Phaser.Types.Loader.XHRSettingsObject,\n    ) {\n      if (Array.isArray(key)) {\n        for (let i = 0; i < key.length; i++) {\n          //  If it's an array it has to be an array of Objects, so we get everything out of the 'key' object\n          this.addFile(new SuperSvgImageFile(this, key[i]));\n        }\n      } else {\n        this.addFile(new SuperSvgImageFile(this, key, url, svgConfig, xhrSettings));\n      }\n\n      return this;\n    },\n  );\n}\n","export interface PreloadTaskLoaderPlugin extends Phaser.Loader.LoaderPlugin {\n  asyncTask(task: Promise<void>): any;\n}\n\n/**\n *  файл для исполнения async task в preload\n *  к примеру для обращений к Api\n */\nexport class PreloadTask extends Phaser.Loader.File {\n  static FILE_TYPE = 'asyncTask';\n  static taskCounter = 0;\n\n  private readonly task: Promise<void>;\n\n  constructor(loader: Phaser.Loader.LoaderPlugin, task: Promise<void>) {\n    const fileConfig: Phaser.Types.Loader.FileConfig = {\n      type: PreloadTask.FILE_TYPE,\n      key: `await_${PreloadTask.taskCounter++}`,\n    };\n    super(loader, fileConfig);\n    this.task = task;\n  }\n\n  /**\n   * Called by the Loader, starts the actual file downloading.\n   * During the load the methods onLoad, onError and onProgress are called, based on the XHR events.\n   * You shouldn't normally call this method directly, it's meant to be invoked by the Loader.\n   */\n  async load() {\n    try {\n      await this.task;\n      this.onLoad();\n    } catch (e) {\n      this.onError();\n    }\n  }\n\n  onLoad(xhr?: XMLHttpRequest, event?: ProgressEvent) {\n    this.loader?.nextFile(this, true);\n  }\n\n  onError(xhr?: XMLHttpRequest, event?: ProgressEvent) {\n    this.loader?.nextFile(this, false);\n  }\n\n  /**\n   * use in scene preload only\n   * @param scene\n   * @param task\n   */\n  static add(scene: Phaser.Scene, task: Promise<any>) {\n    scene.load.addFile(new PreloadTask(scene.load, task));\n  }\n\n  static isRegistered = false;\n  /**\n   * Функция добавляет к стандартному Phaser.Loader метод svgInline\n   * чтобы использовать\n   * load.asyncTask(task: Promise<void>)\n   */\n  static registerInPhaserLoader() {\n    if (PreloadTask.isRegistered) return;\n    Phaser.Loader.FileTypesManager.register(\n      PreloadTask.FILE_TYPE,\n      function (this: Phaser.Loader.LoaderPlugin, task: Promise<void>) {\n        this.addFile(new PreloadTask(this, task));\n        return this;\n      },\n    );\n    PreloadTask.isRegistered = true;\n  }\n}\n\nexport class PreloadTaskPlugin extends Phaser.Plugins.BasePlugin {\n  static NAME = 'PreloadTaskPlugin';\n  constructor(pluginManager: Phaser.Plugins.PluginManager) {\n    super(pluginManager);\n    pluginManager.registerFileType(PreloadTask.FILE_TYPE, () => {});\n  }\n}\n","import { IPhaserLoaderConfig } from \"./interfaces\";\nimport { PreloadTask } from \"../PreloadTask\";\nimport { fontLoad } from \"../fontLoad\";\n\n/**\n * Async версия для загрузки ассетов Phaser\n *\n * когда имеет смысл\n * - когда нужно подгрузить ресурсы и дождаться их окончания\n * вне preload метода Phaser сцены\n *\n * поддерживает\n *  - svg\n *  - images\n *  - fonts из Google и своих стилей (через webfontloader)\n *  - sounds\n *\n * @param config {IPhaserLoaderConfig}\n */\nexport function asyncPhaserLoad(config: IPhaserLoaderConfig): Promise<void> {\n  return new Promise((resolve) => {\n    const { onProgress, isLogging } = config;\n    const { load } = config.scene;\n\n    const progressCallback = (progress: number) => {\n      if (onProgress) onProgress(progress);\n      if (isLogging) {\n        console.log('asyncPhaserLoad:: progressCallback', progress);\n      }\n      if (isLogging && progress === 1) {\n        console.log('asyncPhaserLoad:: load resolve: queue', load.queue);\n      }\n    };\n\n    if (onProgress) load.on(Phaser.Loader.Events.PROGRESS, progressCallback);\n\n    load.once(Phaser.Loader.Events.COMPLETE, () => {\n      if (onProgress) load.off(Phaser.Loader.Events.PROGRESS, progressCallback);\n      resolve();\n    });\n\n    load.on(Phaser.Loader.Events.FILE_LOAD_ERROR, (file: Phaser.Loader.File) => {\n      if (config.onError) {\n        config.onError(file);\n      } else {\n        console.warn('PhaserLoader file load error: ', file);\n      }\n    });\n\n    // загружаем ресурсы\n    phaserLoad(config);\n\n    load.start();\n  });\n}\n\n/**\n * Просто загружает ресурсы, стартовать надо самому\n * удобно для встраивания в preload сцены\n * или другие  обычные загрузчики на базе Phaser\n * @param config\n */\nexport function phaserLoad(config: IPhaserLoaderConfig): void {\n  const { scene, zoom, svg, images, fonts, sounds, sprites, promises, jsons } = config;\n  const { load, textures, sound, cache } = scene;\n\n  images\n    ?.filter((url) => url != null && !textures.exists(url))\n    .forEach((url) => load.image(url!, url!));\n\n  svg\n    ?.filter((url) => url != null && !textures.exists(url))\n    .forEach((url) => load.svg(url!, url!, { scale: zoom }));\n\n  sounds\n    ?.filter((url) => url != null && !sound.get(url))\n    .forEach((url) => load.audio(url!, `${url}?ext=.mp3`!));\n\n  jsons\n      ?.filter((url) => url != null && !cache.json.get(url))\n      .forEach((url) => url && load.json(url, url));\n\n  sprites\n    ?.filter(({ url }) => url != null && !textures.exists(url))\n    ?.forEach(({ url, frameConfig }) => load.spritesheet(url, url, frameConfig));\n\n  if (fonts) {\n    PreloadTask.add(scene, fontLoad(fonts));\n  }\n\n  if (promises) {\n    PreloadTask.add(scene, Promise.all(promises));\n  }\n}\n","const WebFont = require('webfontloader');\nimport { WebFontOptions } from \"./interfaces\";\n\n/**\n *   Promise обертка над загрузчиком шрифтов от Google\n *   можно грузить из Google Fonts или локальные шрифты\n *\n *   пример\n *   await loadFont({\n      google: { // грузим из Google\n        families: ['Marmelad', 'Macondo'],\n      },\n      custom: { // грузим из локального style.css, шрифты должны быть описаны и лежать рядом\n        families: ['St Transmission ExtraBold', 'Open Sans ExtraBold', 'Open Sans Regular', 'Lato'],\n        urls: ['./style.css']\n      }\n    });\n *\n *  https://github.com/typekit/webfontloader\n *  \"@types/webfontloader\": \"1.6.34\"\n *  \"webfontloader\": \"1.6.28\",\n */\nexport function fontLoad(config: WebFontOptions): Promise<void> {\n  return new Promise((resolve) => {\n    WebFont.load({\n      ...config,\n      active: resolve,\n    });\n  });\n}\n","/* Web Font Loader v1.6.28 - (c) Adobe Systems, Google. License: Apache 2.0 */(function(){function aa(a,b,c){return a.call.apply(a.bind,arguments)}function ba(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}}function p(a,b,c){p=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?aa:ba;return p.apply(null,arguments)}var q=Date.now||function(){return+new Date};function ca(a,b){this.a=a;this.o=b||a;this.c=this.o.document}var da=!!window.FontFace;function t(a,b,c,d){b=a.c.createElement(b);if(c)for(var e in c)c.hasOwnProperty(e)&&(\"style\"==e?b.style.cssText=c[e]:b.setAttribute(e,c[e]));d&&b.appendChild(a.c.createTextNode(d));return b}function u(a,b,c){a=a.c.getElementsByTagName(b)[0];a||(a=document.documentElement);a.insertBefore(c,a.lastChild)}function v(a){a.parentNode&&a.parentNode.removeChild(a)}\nfunction w(a,b,c){b=b||[];c=c||[];for(var d=a.className.split(/\\s+/),e=0;e<b.length;e+=1){for(var f=!1,g=0;g<d.length;g+=1)if(b[e]===d[g]){f=!0;break}f||d.push(b[e])}b=[];for(e=0;e<d.length;e+=1){f=!1;for(g=0;g<c.length;g+=1)if(d[e]===c[g]){f=!0;break}f||b.push(d[e])}a.className=b.join(\" \").replace(/\\s+/g,\" \").replace(/^\\s+|\\s+$/,\"\")}function y(a,b){for(var c=a.className.split(/\\s+/),d=0,e=c.length;d<e;d++)if(c[d]==b)return!0;return!1}\nfunction ea(a){return a.o.location.hostname||a.a.location.hostname}function z(a,b,c){function d(){m&&e&&f&&(m(g),m=null)}b=t(a,\"link\",{rel:\"stylesheet\",href:b,media:\"all\"});var e=!1,f=!0,g=null,m=c||null;da?(b.onload=function(){e=!0;d()},b.onerror=function(){e=!0;g=Error(\"Stylesheet failed to load\");d()}):setTimeout(function(){e=!0;d()},0);u(a,\"head\",b)}\nfunction A(a,b,c,d){var e=a.c.getElementsByTagName(\"head\")[0];if(e){var f=t(a,\"script\",{src:b}),g=!1;f.onload=f.onreadystatechange=function(){g||this.readyState&&\"loaded\"!=this.readyState&&\"complete\"!=this.readyState||(g=!0,c&&c(null),f.onload=f.onreadystatechange=null,\"HEAD\"==f.parentNode.tagName&&e.removeChild(f))};e.appendChild(f);setTimeout(function(){g||(g=!0,c&&c(Error(\"Script load timeout\")))},d||5E3);return f}return null};function B(){this.a=0;this.c=null}function C(a){a.a++;return function(){a.a--;D(a)}}function E(a,b){a.c=b;D(a)}function D(a){0==a.a&&a.c&&(a.c(),a.c=null)};function F(a){this.a=a||\"-\"}F.prototype.c=function(a){for(var b=[],c=0;c<arguments.length;c++)b.push(arguments[c].replace(/[\\W_]+/g,\"\").toLowerCase());return b.join(this.a)};function G(a,b){this.c=a;this.f=4;this.a=\"n\";var c=(b||\"n4\").match(/^([nio])([1-9])$/i);c&&(this.a=c[1],this.f=parseInt(c[2],10))}function fa(a){return H(a)+\" \"+(a.f+\"00\")+\" 300px \"+I(a.c)}function I(a){var b=[];a=a.split(/,\\s*/);for(var c=0;c<a.length;c++){var d=a[c].replace(/['\"]/g,\"\");-1!=d.indexOf(\" \")||/^\\d/.test(d)?b.push(\"'\"+d+\"'\"):b.push(d)}return b.join(\",\")}function J(a){return a.a+a.f}function H(a){var b=\"normal\";\"o\"===a.a?b=\"oblique\":\"i\"===a.a&&(b=\"italic\");return b}\nfunction ga(a){var b=4,c=\"n\",d=null;a&&((d=a.match(/(normal|oblique|italic)/i))&&d[1]&&(c=d[1].substr(0,1).toLowerCase()),(d=a.match(/([1-9]00|normal|bold)/i))&&d[1]&&(/bold/i.test(d[1])?b=7:/[1-9]00/.test(d[1])&&(b=parseInt(d[1].substr(0,1),10))));return c+b};function ha(a,b){this.c=a;this.f=a.o.document.documentElement;this.h=b;this.a=new F(\"-\");this.j=!1!==b.events;this.g=!1!==b.classes}function ia(a){a.g&&w(a.f,[a.a.c(\"wf\",\"loading\")]);K(a,\"loading\")}function L(a){if(a.g){var b=y(a.f,a.a.c(\"wf\",\"active\")),c=[],d=[a.a.c(\"wf\",\"loading\")];b||c.push(a.a.c(\"wf\",\"inactive\"));w(a.f,c,d)}K(a,\"inactive\")}function K(a,b,c){if(a.j&&a.h[b])if(c)a.h[b](c.c,J(c));else a.h[b]()};function ja(){this.c={}}function ka(a,b,c){var d=[],e;for(e in b)if(b.hasOwnProperty(e)){var f=a.c[e];f&&d.push(f(b[e],c))}return d};function M(a,b){this.c=a;this.f=b;this.a=t(this.c,\"span\",{\"aria-hidden\":\"true\"},this.f)}function N(a){u(a.c,\"body\",a.a)}function O(a){return\"display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:\"+I(a.c)+\";\"+(\"font-style:\"+H(a)+\";font-weight:\"+(a.f+\"00\")+\";\")};function P(a,b,c,d,e,f){this.g=a;this.j=b;this.a=d;this.c=c;this.f=e||3E3;this.h=f||void 0}P.prototype.start=function(){var a=this.c.o.document,b=this,c=q(),d=new Promise(function(d,e){function f(){q()-c>=b.f?e():a.fonts.load(fa(b.a),b.h).then(function(a){1<=a.length?d():setTimeout(f,25)},function(){e()})}f()}),e=null,f=new Promise(function(a,d){e=setTimeout(d,b.f)});Promise.race([f,d]).then(function(){e&&(clearTimeout(e),e=null);b.g(b.a)},function(){b.j(b.a)})};function Q(a,b,c,d,e,f,g){this.v=a;this.B=b;this.c=c;this.a=d;this.s=g||\"BESbswy\";this.f={};this.w=e||3E3;this.u=f||null;this.m=this.j=this.h=this.g=null;this.g=new M(this.c,this.s);this.h=new M(this.c,this.s);this.j=new M(this.c,this.s);this.m=new M(this.c,this.s);a=new G(this.a.c+\",serif\",J(this.a));a=O(a);this.g.a.style.cssText=a;a=new G(this.a.c+\",sans-serif\",J(this.a));a=O(a);this.h.a.style.cssText=a;a=new G(\"serif\",J(this.a));a=O(a);this.j.a.style.cssText=a;a=new G(\"sans-serif\",J(this.a));a=\nO(a);this.m.a.style.cssText=a;N(this.g);N(this.h);N(this.j);N(this.m)}var R={D:\"serif\",C:\"sans-serif\"},S=null;function T(){if(null===S){var a=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent);S=!!a&&(536>parseInt(a[1],10)||536===parseInt(a[1],10)&&11>=parseInt(a[2],10))}return S}Q.prototype.start=function(){this.f.serif=this.j.a.offsetWidth;this.f[\"sans-serif\"]=this.m.a.offsetWidth;this.A=q();U(this)};\nfunction la(a,b,c){for(var d in R)if(R.hasOwnProperty(d)&&b===a.f[R[d]]&&c===a.f[R[d]])return!0;return!1}function U(a){var b=a.g.a.offsetWidth,c=a.h.a.offsetWidth,d;(d=b===a.f.serif&&c===a.f[\"sans-serif\"])||(d=T()&&la(a,b,c));d?q()-a.A>=a.w?T()&&la(a,b,c)&&(null===a.u||a.u.hasOwnProperty(a.a.c))?V(a,a.v):V(a,a.B):ma(a):V(a,a.v)}function ma(a){setTimeout(p(function(){U(this)},a),50)}function V(a,b){setTimeout(p(function(){v(this.g.a);v(this.h.a);v(this.j.a);v(this.m.a);b(this.a)},a),0)};function W(a,b,c){this.c=a;this.a=b;this.f=0;this.m=this.j=!1;this.s=c}var X=null;W.prototype.g=function(a){var b=this.a;b.g&&w(b.f,[b.a.c(\"wf\",a.c,J(a).toString(),\"active\")],[b.a.c(\"wf\",a.c,J(a).toString(),\"loading\"),b.a.c(\"wf\",a.c,J(a).toString(),\"inactive\")]);K(b,\"fontactive\",a);this.m=!0;na(this)};\nW.prototype.h=function(a){var b=this.a;if(b.g){var c=y(b.f,b.a.c(\"wf\",a.c,J(a).toString(),\"active\")),d=[],e=[b.a.c(\"wf\",a.c,J(a).toString(),\"loading\")];c||d.push(b.a.c(\"wf\",a.c,J(a).toString(),\"inactive\"));w(b.f,d,e)}K(b,\"fontinactive\",a);na(this)};function na(a){0==--a.f&&a.j&&(a.m?(a=a.a,a.g&&w(a.f,[a.a.c(\"wf\",\"active\")],[a.a.c(\"wf\",\"loading\"),a.a.c(\"wf\",\"inactive\")]),K(a,\"active\")):L(a.a))};function oa(a){this.j=a;this.a=new ja;this.h=0;this.f=this.g=!0}oa.prototype.load=function(a){this.c=new ca(this.j,a.context||this.j);this.g=!1!==a.events;this.f=!1!==a.classes;pa(this,new ha(this.c,a),a)};\nfunction qa(a,b,c,d,e){var f=0==--a.h;(a.f||a.g)&&setTimeout(function(){var a=e||null,m=d||null||{};if(0===c.length&&f)L(b.a);else{b.f+=c.length;f&&(b.j=f);var h,l=[];for(h=0;h<c.length;h++){var k=c[h],n=m[k.c],r=b.a,x=k;r.g&&w(r.f,[r.a.c(\"wf\",x.c,J(x).toString(),\"loading\")]);K(r,\"fontloading\",x);r=null;if(null===X)if(window.FontFace){var x=/Gecko.*Firefox\\/(\\d+)/.exec(window.navigator.userAgent),xa=/OS X.*Version\\/10\\..*Safari/.exec(window.navigator.userAgent)&&/Apple/.exec(window.navigator.vendor);\nX=x?42<parseInt(x[1],10):xa?!1:!0}else X=!1;X?r=new P(p(b.g,b),p(b.h,b),b.c,k,b.s,n):r=new Q(p(b.g,b),p(b.h,b),b.c,k,b.s,a,n);l.push(r)}for(h=0;h<l.length;h++)l[h].start()}},0)}function pa(a,b,c){var d=[],e=c.timeout;ia(b);var d=ka(a.a,c,a.c),f=new W(a.c,b,e);a.h=d.length;b=0;for(c=d.length;b<c;b++)d[b].load(function(b,d,c){qa(a,f,b,d,c)})};function ra(a,b){this.c=a;this.a=b}\nra.prototype.load=function(a){function b(){if(f[\"__mti_fntLst\"+d]){var c=f[\"__mti_fntLst\"+d](),e=[],h;if(c)for(var l=0;l<c.length;l++){var k=c[l].fontfamily;void 0!=c[l].fontStyle&&void 0!=c[l].fontWeight?(h=c[l].fontStyle+c[l].fontWeight,e.push(new G(k,h))):e.push(new G(k))}a(e)}else setTimeout(function(){b()},50)}var c=this,d=c.a.projectId,e=c.a.version;if(d){var f=c.c.o;A(this.c,(c.a.api||\"https://fast.fonts.net/jsapi\")+\"/\"+d+\".js\"+(e?\"?v=\"+e:\"\"),function(e){e?a([]):(f[\"__MonotypeConfiguration__\"+\nd]=function(){return c.a},b())}).id=\"__MonotypeAPIScript__\"+d}else a([])};function sa(a,b){this.c=a;this.a=b}sa.prototype.load=function(a){var b,c,d=this.a.urls||[],e=this.a.families||[],f=this.a.testStrings||{},g=new B;b=0;for(c=d.length;b<c;b++)z(this.c,d[b],C(g));var m=[];b=0;for(c=e.length;b<c;b++)if(d=e[b].split(\":\"),d[1])for(var h=d[1].split(\",\"),l=0;l<h.length;l+=1)m.push(new G(d[0],h[l]));else m.push(new G(d[0]));E(g,function(){a(m,f)})};function ta(a,b){a?this.c=a:this.c=ua;this.a=[];this.f=[];this.g=b||\"\"}var ua=\"https://fonts.googleapis.com/css\";function va(a,b){for(var c=b.length,d=0;d<c;d++){var e=b[d].split(\":\");3==e.length&&a.f.push(e.pop());var f=\"\";2==e.length&&\"\"!=e[1]&&(f=\":\");a.a.push(e.join(f))}}\nfunction wa(a){if(0==a.a.length)throw Error(\"No fonts to load!\");if(-1!=a.c.indexOf(\"kit=\"))return a.c;for(var b=a.a.length,c=[],d=0;d<b;d++)c.push(a.a[d].replace(/ /g,\"+\"));b=a.c+\"?family=\"+c.join(\"%7C\");0<a.f.length&&(b+=\"&subset=\"+a.f.join(\",\"));0<a.g.length&&(b+=\"&text=\"+encodeURIComponent(a.g));return b};function ya(a){this.f=a;this.a=[];this.c={}}\nvar za={latin:\"BESbswy\",\"latin-ext\":\"\\u00e7\\u00f6\\u00fc\\u011f\\u015f\",cyrillic:\"\\u0439\\u044f\\u0416\",greek:\"\\u03b1\\u03b2\\u03a3\",khmer:\"\\u1780\\u1781\\u1782\",Hanuman:\"\\u1780\\u1781\\u1782\"},Aa={thin:\"1\",extralight:\"2\",\"extra-light\":\"2\",ultralight:\"2\",\"ultra-light\":\"2\",light:\"3\",regular:\"4\",book:\"4\",medium:\"5\",\"semi-bold\":\"6\",semibold:\"6\",\"demi-bold\":\"6\",demibold:\"6\",bold:\"7\",\"extra-bold\":\"8\",extrabold:\"8\",\"ultra-bold\":\"8\",ultrabold:\"8\",black:\"9\",heavy:\"9\",l:\"3\",r:\"4\",b:\"7\"},Ba={i:\"i\",italic:\"i\",n:\"n\",normal:\"n\"},\nCa=/^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/;\nfunction Da(a){for(var b=a.f.length,c=0;c<b;c++){var d=a.f[c].split(\":\"),e=d[0].replace(/\\+/g,\" \"),f=[\"n4\"];if(2<=d.length){var g;var m=d[1];g=[];if(m)for(var m=m.split(\",\"),h=m.length,l=0;l<h;l++){var k;k=m[l];if(k.match(/^[\\w-]+$/)){var n=Ca.exec(k.toLowerCase());if(null==n)k=\"\";else{k=n[2];k=null==k||\"\"==k?\"n\":Ba[k];n=n[1];if(null==n||\"\"==n)n=\"4\";else var r=Aa[n],n=r?r:isNaN(n)?\"4\":n.substr(0,1);k=[k,n].join(\"\")}}else k=\"\";k&&g.push(k)}0<g.length&&(f=g);3==d.length&&(d=d[2],g=[],d=d?d.split(\",\"):\ng,0<d.length&&(d=za[d[0]])&&(a.c[e]=d))}a.c[e]||(d=za[e])&&(a.c[e]=d);for(d=0;d<f.length;d+=1)a.a.push(new G(e,f[d]))}};function Ea(a,b){this.c=a;this.a=b}var Fa={Arimo:!0,Cousine:!0,Tinos:!0};Ea.prototype.load=function(a){var b=new B,c=this.c,d=new ta(this.a.api,this.a.text),e=this.a.families;va(d,e);var f=new ya(e);Da(f);z(c,wa(d),C(b));E(b,function(){a(f.a,f.c,Fa)})};function Ga(a,b){this.c=a;this.a=b}Ga.prototype.load=function(a){var b=this.a.id,c=this.c.o;b?A(this.c,(this.a.api||\"https://use.typekit.net\")+\"/\"+b+\".js\",function(b){if(b)a([]);else if(c.Typekit&&c.Typekit.config&&c.Typekit.config.fn){b=c.Typekit.config.fn;for(var e=[],f=0;f<b.length;f+=2)for(var g=b[f],m=b[f+1],h=0;h<m.length;h++)e.push(new G(g,m[h]));try{c.Typekit.load({events:!1,classes:!1,async:!0})}catch(l){}a(e)}},2E3):a([])};function Ha(a,b){this.c=a;this.f=b;this.a=[]}Ha.prototype.load=function(a){var b=this.f.id,c=this.c.o,d=this;b?(c.__webfontfontdeckmodule__||(c.__webfontfontdeckmodule__={}),c.__webfontfontdeckmodule__[b]=function(b,c){for(var g=0,m=c.fonts.length;g<m;++g){var h=c.fonts[g];d.a.push(new G(h.name,ga(\"font-weight:\"+h.weight+\";font-style:\"+h.style)))}a(d.a)},A(this.c,(this.f.api||\"https://f.fontdeck.com/s/css/js/\")+ea(this.c)+\"/\"+b+\".js\",function(b){b&&a([])})):a([])};var Y=new oa(window);Y.a.c.custom=function(a,b){return new sa(b,a)};Y.a.c.fontdeck=function(a,b){return new Ha(b,a)};Y.a.c.monotype=function(a,b){return new ra(b,a)};Y.a.c.typekit=function(a,b){return new Ga(b,a)};Y.a.c.google=function(a,b){return new Ea(b,a)};var Z={load:p(Y.load,Y)};\"function\"===typeof define&&define.amd?define(function(){return Z}):\"undefined\"!==typeof module&&module.exports?module.exports=Z:(window.WebFont=Z,window.WebFontConfig&&Y.load(window.WebFontConfig));}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export class StoryScene extends Phaser.Scene {\n  preload() {\n    /** включает в себя загрузку текстуры поэтому ставим тут **/\n    // addTestMapBg(this).catch(console.warn);\n  }\n  create() {\n    console.log(\"Story Scene created...\");\n  }\n}\n","export type GameObject =\n  | Phaser.GameObjects.Container\n  | Phaser.GameObjects.Image\n  | Phaser.GameObjects.Text\n  | Phaser.GameObjects.RenderTexture\n  | Phaser.GameObjects.Shape\n  | Phaser.GameObjects.TileSprite;\n\nexport interface IStory {\n  title: string;\n  /**\n   *  run\n   *  - может создавать что угодно на сцене\n   *  - возвращаемая функция должна очищать созданный объект\n   *  - добавление к сцене лежит на его ответственности\n   */\n  run: (scene: Phaser.Scene) => Promise<() => void>;\n}\n\nexport interface IStoryListItem extends Partial<IStory>{\n  title: string;\n  template?: 'titleDelimiter',\n  run?: (scene: Phaser.Scene) => Promise<() => void>;\n}\n\nexport const storyTitle = (title:string):IStoryListItem=>({ title, template: 'titleDelimiter'})\n","interface IProps {\n  scene: Phaser.Scene;\n  text: string;\n}\n\nexport class TestButton extends Phaser.GameObjects.Container {\n  constructor({ scene, text }: IProps) {\n    super(scene);\n    const textObject = scene.add.text(0, 0, text, { fontSize: \"32px\", color: \"#dedede\" });\n\n    this.add([textObject]);\n    scene.add.existing(this as Phaser.GameObjects.Container);\n  }\n}\n","import { IStory } from \"../../../storybook/interfaces\";\nimport { TestButton } from \"./TestButton\";\n\nexport const testButtonStory: IStory = {\n  title: \"TestButton\",\n  run: async (scene) => {\n    const container = new TestButton({ scene, text: \"Hello\" });\n\n    return ()=>{\n      container.destroy();\n    }\n  }\n};\n\nexport const testButtonStory2: IStory = {\n  title: \"TestButton 2\",\n  run: async (scene) => {\n    const container = new TestButton({ scene, text: \"Hello2\" });\n\n    return ()=>{\n      container.destroy();\n    }\n  }\n};\n","import playerCards01 from \"./players_cards_01.json\";\nimport { IPlayerCard } from \"../../../interfaces\";\n\nconst type =  'player' as const;\n\nexport const playerCards = {\n  players_1_fantasy_pack5: playerCards01.map(card => ({...card, type }))\n}\n\n// проверка что все поля правильные\nconst typecheck: Record<string, IPlayerCard[]> = { ...playerCards };\n","import DECK1 from \"./deck_monsters_1.json\";\nimport DECK2 from \"./deck_monsters_2.json\";\nimport { IMonsterCard } from \"../../../interfaces\";\n\n// в json не записываются типы, в будущем возможно будем сразу записывать\nconst type = \"monster\" as const;\n\n// определено как константа чтобы поля подставлялись\nexport const monsterCards = {\n  monsters_1_fantasy_pack8: DECK1.cards.map((card) => ({ ...card, type })),\n  monsters_2_fantasy_pack8: DECK2.cards.map((card) => ({ ...card, type })),\n};\n\n// проверка что все поля правильные\nconst typecheck: Record<string, IMonsterCard[]> = { ...monsterCards };\n","import DECK1 from \"./deck_treasures_1.json\";\nimport { ITreasureCard } from \"../../../interfaces\";\n\nconst type =  'treasure' as const;\n\nexport const treasureCards = {\n  treasures_1_fantasy_pack16: DECK1.cards.map(card => ({...card, type})),\n}\n\n\n// проверка что все поля правильные\nconst typecheck: Record<string, ITreasureCard[]> = { ...treasureCards };\n","import EN_GAME_TEXTS from \"./en/en-game-texts.json\";\n\nexport type LocaleLang = \"en\";\nexport type LocaleGameTexts = typeof EN_GAME_TEXTS;\nexport type GameTextKey = keyof LocaleGameTexts;\n\nexport const GameTexts: Record<LocaleLang, LocaleGameTexts> = {\n  en: EN_GAME_TEXTS\n};\n","import { IBasicCard, ICardTexts } from \"../../interfaces\";\nimport { GameTextKey, GameTexts, LocaleLang } from \"./types\";\n\nexport class Locale {\n  /** set it to change behavior**/\n  static locale: LocaleLang = \"en\";\n\n  static text(key: GameTextKey): string {\n    return GameTexts[this.locale][key] ?? GameTexts.en[key];\n  }\n\n  static getCardTexts(card: IBasicCard): ICardTexts {\n    /** to do - change text to locale text **/\n    return {\n      title: card.title,\n      description: card.description,\n      quote: card.quote\n    };\n  }\n}\n","import { monsterCards, playerCards, treasureCards } from \"./data\";\nimport { IConfig } from \"./interfaces\";\n\nconst basicConfig: Readonly<IConfig> = {\n  cellSize: 72,\n  columns: 18,\n  rows: 14,\n  positions: {\n    player: { column: 1, row: 1 }\n  },\n  path: {\n    pathColor: \"#88e7ac\"\n  },\n  selector: {\n    selectorColor: \"#88e7ac\",\n  },\n  gamePlay: {\n    openedTreasuresProbability: 0.5,\n    openedMonsterProbability: 0.5,\n    monstersTotal: 14,\n    treasuresTotal: 28,\n    portalTreasurePrice: 8\n  },\n  playerCard: playerCards.players_1_fantasy_pack5[0],\n  monsterCards: [...monsterCards.monsters_1_fantasy_pack8],\n  treasureCards: [...treasureCards.treasures_1_fantasy_pack16],\n  terrainRules: [\n    { type: \"mountain\", speedK: 0, probability: 0.05 },\n    { type: \"water\", speedK: 0, probability: 0.2 },\n    { type: \"forest\", speedK: 0.75, probability: 0.2 },\n    { type: \"sand\", speedK: 0.5, probability: 0.2 },\n    { type: \"grass\", speedK: 0.5, probability: 0.2 },\n    { type: \"ground\", speedK: 0.5, probability: 0.2 }\n  ],\n  terrainColors: {\n    \"mountain\": \"#5d1d06\", // Приятный коричневатый цвет для гор\n    \"water\": \"#4682B4\", // Спокойный синий цвет для воды\n    \"forest\": \"#005e00\", // Темно-зеленый цвет для леса\n    \"sand\": \"#fce76c\", // Светло-коричневый цвет для песка\n    \"grass\": \"#477242\", // Яркий зеленый цвет для травы\n    \"ground\": \"#675437\" // Земляной коричневый цвет\n  }\n};\n\n\nexport const treasuresAndMonstersConfig: Readonly<IConfig> = {\n  ...basicConfig\n};\n","/**\n * возвращает случайный элемент из массива\n * не используя создание нового массива\n * максимально экономичным способом\n * если задан filter, то отбор происходит только среди ячеек\n * для которых filter ===  true\n */\nexport function getRandomArrayElementWithFilter<T>(arr: T[], filter?: FilterCallback<T>): T {\n  if (arr.length === 0) {\n    throw new Error(\"Array is empty\"); // Выбрасываем исключение, если массив пуст\n  }\n\n  let candidate: T | undefined = undefined;\n  let count = 0;\n\n  for (let i = 0; i < arr.length; i++) {\n    if (filter === undefined || filter(arr[i])) {\n      count++; // Увеличиваем счетчик найденных элементов\n      // С вероятностью 1/count выбираем текущий элемент как кандидата\n      if (Math.random() < 1 / count) {\n        candidate = arr[i];\n      }\n    }\n  }\n\n  if (candidate == null) {\n    // Это состояние достигается, если ни один элемент не прошел фильтр\n    throw new Error(\"No element matches the filter criteria\");\n  }\n\n  return candidate;\n}\n\ntype FilterCallback<T> = (el: T) => boolean;\n\nexport const getRandomArrayElement = <T>(array: T[]): T => array[Math.floor(Math.random() * array.length)];\n","export function shuffleArrayBySort<T>(arr: T[]): T[] {\n  return arr.sort(() => Math.random() - 0.5);\n}\n\nexport function shuffleArray<T>(array: T[]): T[] {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n","export function repeatArray<T>(arr: T[], length: number): T[] {\n  if (length <= 0) return [];\n\n  const result: T[] = [];\n  let index = 0;\n\n  while (result.length < length) {\n    result.push(arr[index]);\n    index = (index + 1) % arr.length;\n  }\n\n  return result;\n}\n","import { CellCallback, CellMapObject, CellObjectsHashMapCallback, ColumnRowKey, Id, IPlace } from \"./interfaces\";\n\nimport { isCollide } from \"./isCollide\";\n\ninterface IProps {\n  cellSize: number;\n}\n\n/**\n * Класс CellMapCollider используется для оптимизации\n * столкновений объектов в двумерном пространстве.\n *\n * Он подобен GridCollider и также условно делит пространство на сетку ячеек\n * но использует Map ячеек, а не двухмерный массив\n *\n * Поэтому CellMapCollider\n * - не ограничен заранее заданными размерами мира\n * - оптимально использует память - так как хранит ячейки только с объектами,\n * а не огромное число пустых ячеек, характерных для GridCollider\n * - также он хранит инфу о предыдущем месте объекта, а не кучу ссылок на ячейки где он был\n *\n * CellMapCollider отслеживает, какие объекты находятся в каждой ячейке,\n * что позволяет эффективно обрабатывать столкновения и взаимодействия между объектами.\n *\n *\n * @example\n * // Создание экземпляра c размером ячейки 50\n * const collider = new GridCollider({ cellSize: 50 });\n *\n * // Добавление объекта в коллайдер\n * collider.add({ id: 'object1', left: 100, top: 100, width: 150, height: 150 });\n *\n * объект оканчивающийся на cellSize координате (10/10) - займет 2 ячейки\n *\n */\nexport class CellMapCollider {\n  /**\n   * 'x100y200' -> [object1, object2]\n   */\n  private cellMap: Record<ColumnRowKey, Record<Id, CellMapObject>>;\n\n  constructor(private readonly props: IProps) {\n    this.cellMap = {};\n  }\n\n  public log() {\n    const cells = Object.values(this.cellMap);\n    const objectsMap = cells.reduce(\n      (acc, objects) => ({\n        ...acc,\n        ...objects,\n      }), {}\n    )\n    const objects = Object.values(objectsMap).flat();\n    console.log(\"CellMapCollider -----------\");\n    console.log(\"cellSize\", this.props.cellSize);\n    console.log(\"cells amount\", cells.length);\n    console.log(\"cellMap\", this.cellMap);\n    console.log(\"objects amount\", objects.length);\n  }\n\n  /**\n   * критичный базовый итератор для условных ячеек для места,\n   * которое их касается или накрывает полностью\n   * Может прерывать перебор, если колбэк возвращает true\n   * коллбэк вызывается для всех условных ячеек вне зависимости от наличия там объекта\n   */\n  public forCellsInPlace(place: IPlace, callback: CellCallback): void {\n    const startColumn = this.getCellOrdinate(place.left);\n    const endColumn = this.getCellOrdinate(place.left + place.width);\n\n    const startRow = this.getCellOrdinate(place.top);\n    const endRow = this.getCellOrdinate(place.top + place.height);\n\n    for (let row = startRow; row <= endRow; row++) {\n      for (let column = startColumn; column <= endColumn; column++) {\n        if (callback(column, row)) return;\n      }\n    }\n  }\n  /**\n   * критичный базовый итератор для объектов, которые уже существуют в этом месте\n   * если коллбэк вернет true, то перебор будет прерван\n   */\n  public forObjectsInPlace(\n    place: IPlace,\n    callback: CellObjectsHashMapCallback\n  ): void {\n    this.forCellsInPlace(place, (column, row) => {\n      const cell = this.cellMap[this.getCellKey(column, row)];\n      if (!cell) return;\n      return callback(cell);\n    });\n  }\n\n  getCurrentObjectCells(\n    object: CellMapObject\n  ): Record<ColumnRowKey, Record<Id, CellMapObject>> {\n    const cells: Record<ColumnRowKey, Record<Id, any>> = {};\n    this.forObjectCoveredCells(object, (column, row) => {\n      const key = this.getCellKey(column, row);\n      const objects = this.cellMap[key];\n      if (objects) {\n        cells[key] = this.cellMap[key];\n      }\n    });\n    return cells;\n  }\n\n  getCurrentObjectCellsAsArray(\n    object: CellMapObject\n  ): Record<Id, CellMapObject>[] {\n    return Object.values(this.getCurrentObjectCells(object));\n  }\n\n  /**\n   * Добавляет объект в сетку. Объект будет помещен во все ячейки, которые он занимает.\n   */\n  public add(object: CellMapObject) {\n    this.addToCells(object);\n  }\n\n  public remove(object: CellMapObject) {\n    this.forCellsInPlace(object, (column, row) => {\n      const cellObjects = this.getCellObjects(column, row);\n      if (cellObjects == null) return;\n      delete cellObjects[object.id];\n      if (Object.values(cellObjects).length === 0)\n        delete this.cellMap[this.getCellKey(column, row)];\n    });\n  }\n\n  /**\n   * Новые координаты нужны затем, чтобы по старым определять где лежит объект\n   * и чистить их оттуда\n   * иначе, если не сохранять старые координаты, придется для очистки\n   * заводить дополнительную структуру объектов\n   */\n  public update(object: CellMapObject, newLeft: number, newTop: number) {\n    this.remove(object);\n    object.left = newLeft;\n    object.top = newTop;\n    this.add(object);\n  }\n\n  getAllObjects(place: IPlace): Record<Id, CellMapObject> {\n    const objects: Record<Id, CellMapObject> = {};\n    this.forObjectsInPlace(place, (cellObjects) => {\n      for (const id in cellObjects) {\n        objects[id] = cellObjects[id];\n      }\n    });\n    return objects;\n  }\n\n  public getFirstCollisionObject(\n    object: CellMapObject\n  ): CellMapObject | undefined {\n    let collisionObject: CellMapObject | undefined;\n\n    this.forObjectsInPlace(object, (cellObjects) => {\n      for (const key in cellObjects) {\n        const next = cellObjects[key];\n        if (next.id === object.id) continue;\n        if (isCollide(object, next)) {\n          collisionObject = next;\n          return true;\n        }\n      }\n      return false;\n    });\n    return collisionObject;\n  }\n\n  /**\n   * Выполняет колбэк для каждой ячейки, в которой находится объект сейчас\n   * Если колбэк возвращает true, перебор ячеек прекращается.\n   * @param {CellMapObject} obj - Объект, для ячеек которого нужно выполнить колбэк.\n   * @param {(cell: IArray2DCell<CellMapObjectMap>) => boolean} callback - Функция, выполняемая для каждой ячейки.\n   */\n  public forObjectCoveredCells(\n    obj: CellMapObject,\n    callback: CellCallback\n  ): void {\n    this.forCellsInPlace(obj, callback);\n  }\n\n  /**\n   * Возвращает координату ячейки по заданному значению X или Y.\n   * @param {number} xOrY - Значение X или Y координаты.\n   * @returns {number} Координата ячейки.\n   */\n  public getCellOrdinate(xOrY: number) {\n    return Math.floor(xOrY / this.props.cellSize);\n  }\n\n  public destroy() {\n    this.cellMap = {};\n  }\n\n  isPlaceFree(place: IPlace): boolean {\n    let isFree = true;\n    this.forObjectsInPlace(place, (cellObjects) => {\n      for (const id in cellObjects) {\n        const next = cellObjects[id];\n        if (isCollide(place, next)) {\n          isFree = false;\n          return true;\n        }\n      }\n    });\n\n    return isFree;\n  }\n\n  /***\n   * private\n   */\n  private getCellKey(column: number, row: number) {\n    return `${column}_${row}`;\n  }\n\n  /** создаст массив если его нет **/\n  private getCellObjectsAlways(\n    column: number,\n    row: number\n  ): Record<Id, CellMapObject> {\n    if (this.cellMap[this.getCellKey(column, row)] == null) {\n      this.cellMap[this.getCellKey(column, row)] = {};\n    }\n    return this.cellMap[this.getCellKey(column, row)];\n  }\n\n  private getCellObjects(\n    column: number,\n    row: number\n  ): Record<Id, CellMapObject> | undefined {\n    return this.cellMap[this.getCellKey(column, row)];\n  }\n\n  private addToCells(object: CellMapObject) {\n    this.forCellsInPlace(object, (column, row) => {\n      const mapOrNewMap = this.getCellObjectsAlways(column, row);\n      mapOrNewMap[object.id] = object;\n    });\n  }\n}\n","export function forEach2D<T>(\n  arr: T[][],\n  callback: (value: T, col: number, row: number) => boolean | void\n) {\n  const columns = arr.length;\n  if (columns == 0) return;\n  const rows = arr[0].length;\n  if (rows == 0) return;\n  for (let col = 0; col < columns; col++) {\n    for (let row = 0; row < rows; row++) {\n      if (callback(arr[col][row], col, row)) return;\n    }\n  }\n}\n","export function getColumn(x: number, cellSize: number): number {\n  return Math.floor(x / cellSize);\n}\n\nexport function getColumnCenterX(column: number, cellSize: number): number {\n  return column * cellSize + cellSize / 2;\n}\n\nexport function getRow(y: number, cellSize: number): number {\n  return Math.floor(y / cellSize);\n}\n\nexport function getRowCenterY(row: number, cellSize: number): number {\n  return row * cellSize + cellSize / 2;\n}\n\n\nexport function getColumns(width: number, cellSize: number): number {\n  return Math.ceil(width / cellSize);\n}\n\nexport function getRows(height: number, cellSize: number): number {\n  return Math.ceil(height / cellSize);\n}\n","/** сделать пустой двухмерный массив с нулями **/\nexport function makeArray2D<T>(\n  cols: number,\n  rows: number,\n  cellGenerator: (col: number, row: number) => T\n): T[][] {\n  const columns: T[][] = Array.from(new Array(cols));\n  columns.forEach((_, columnIndex) => {\n    const column =  Array.from(new Array(rows));\n    column.forEach((row, rowIndex) => {\n      column[rowIndex] = cellGenerator(columnIndex, rowIndex);\n    });\n    columns[columnIndex] = column;\n  });\n  return columns;\n}\n","import { IArray2DMarker } from \"../interfaces\";\n\ninterface IArray2DCheckerProps {\n  columns: number;\n  rows: number;\n  isValidError?: boolean;\n}\n\nconst errorMessages = {\n  invalidIndex: \"Invalid column or row index.\",\n};\n\n/**\n * Оптимизированный проверщик использованных ячеек в двухмерном массиве.\n * - Использует Set для хранения индексов.\n * - Использует только числа для индексов.\n **/\nexport class Array2DMarker implements IArray2DMarker{\n  private set = new Set<number>();\n\n  constructor(private props: IArray2DCheckerProps) {\n    if (props.columns <= 0 || props.rows <= 0) {\n      throw new Error(\"Both columns and rows must be positive numbers.\");\n    }\n  }\n\n  /** Очистить все метки */\n  clear(): void {\n    this.set.clear();\n  }\n\n  /**\n   * Пометить ячейку, возвращает true если ячейка не была помечена ранее, иначе false.\n   * @param column - Номер столбца.\n   * @param row - Номер строки.\n   **/\n  add(column: number, row: number): boolean {\n    if (!this.isValidIndexHandle(column, row)) return false;\n\n    const index = this.getArrayIndex(column, row);\n    if (this.set.has(index)) return false;\n    this.set.add(index);\n    return true;\n  }\n\n  /**\n   * Проверить, помечена ли ячейка.\n   * @param column - Номер столбца.\n   * @param row - Номер строки.\n   **/\n  has(column: number, row: number): boolean {\n    if (!this.isValidIndexHandle(column, row)) return false;\n\n    return this.set.has(this.getArrayIndex(column, row));\n  }\n\n  /**\n   * Удалить метку с ячейки.\n   * @param column - Номер столбца.\n   * @param row - Номер строки.\n   * @return true если была метка иначе false\n   **/\n  delete(column: number, row: number): boolean {\n    if (!this.isValidIndexHandle(column, row)) return false;\n\n    return this.set.delete(this.getArrayIndex(column, row));\n  }\n\n  /** Проверка допустимости индекса */\n  private isValidIndex(col: number, row: number): boolean {\n    return col >= 0 && col < this.props.columns && row >= 0 && row < this.props.rows;\n  }\n\n  private isValidIndexHandle(col: number, row: number): boolean {\n    const isValid = this.isValidIndex(col, row);\n    if (isValid) return true;\n\n    if (this.props.isValidError) throw new Error(errorMessages.invalidIndex);\n    else {\n      console.warn(errorMessages.invalidIndex);\n      return false;\n    }\n  }\n\n  /** Преобразование координат в индекс массива */\n  private getArrayIndex(col: number, row: number): number {\n    return row * this.props.columns + col;\n  }\n}\n","import { getColumn, getRow } from \"../SimpleArray2D\";\n\nexport function getHexTileStepX(width: number): number {\n  return 0.75 * width;\n}\n\nexport function getHexTileStepY(width: number): number {\n  return (Math.sqrt(3) * width) / 2;\n}\n\nexport function getHexColumn(x: number, width: number): number {\n  const stepX = getHexTileStepX(width);\n\n  return getColumn(x, stepX);\n}\n\nexport function getHexRow(x: number, y: number, width: number): number {\n  const stepX = getHexTileStepX(width);\n  const stepY = getHexTileStepY(width);\n\n  const squareColumn = getColumn(x, stepX);\n  const isEvenCol = squareColumn % 2 === 1;\n  const colOffsetY = isEvenCol ? stepY / 2 : 0;\n\n  const row = getRow(y - colOffsetY, stepY);\n\n  return row;\n}\n","import { ColumnRow } from \"../interfaces\";\n\nexport function getHexNears(column: number, row: number): ColumnRow[] {\n  const neighbors: ColumnRow[] = [];\n  const isOddCol = column % 2 === 0;\n  // Define the possible relative positions for neighbors in a hex grid\n  const directions = isOddCol\n    ? [\n      { column: -1, row: 0 },\n      { column: -1, row: -1 },\n      { column: 0, row: -1 },\n      { column: 1, row: -1 },\n      { column: 1, row: 0 },\n      { column: 0, row: 1 },\n    ]\n    : [\n      { column: -1, row: 1 },\n      { column: -1, row: 0 },\n      { column: 0, row: -1 },\n      { column: 1, row: 0 },\n      { column: 1, row: 1 },\n      { column: 0, row: 1 },\n    ];\n\n  // Calculate the neighbor coordinates\n  for (const direction of directions) {\n    const neighborColumn = column + direction.column;\n    const neighborRow = row + direction.row;\n    neighbors.push({ column: neighborColumn, row: neighborRow });\n  }\n\n  return neighbors;\n}\n","import { ColumnRow } from \"../interfaces\";\n\n/**\n *\n * https://www.redblobgames.com/grids/hexagons/\n *\n * рецепт из нейронки\n * В гексагональной сетке можно представлять\n * каждую клетку тремя координатами (x, y, z), где сумма всех трех координат всегда равна нулю (x + y + z = 0).\n * Это позволяет использовать 3D-координаты для вычисления расстояний и соседей.\n */\n\nexport function axialToCube(column: number, row: number): { x: number; y: number; z: number } {\n  const x = column;\n  const z = row - (column - (column & 1)) / 2;\n  const y = -x - z;\n  return { x, y, z };\n}\n\n// Преобразование из 3D в 2D координаты\nexport function cubeToAxial(x: number, y: number, z: number): ColumnRow {\n  const column = x;\n  const row = z + (x - (x & 1)) / 2;\n  return { column, row };\n}\n","import { ColumnRow } from \"../interfaces\";\nimport { axialToCube, cubeToAxial } from \"./axialToCube\";\n\nexport function getHexNearsInRadius(column: number, row: number, cellRadius: number): ColumnRow[] {\n  const neighborsInRadius: ColumnRow[] = [];\n  const { x: centerX, y: centerY, z: centerZ } = axialToCube(column, row);\n\n  // Обход всех координат в пределах радиуса\n  for (let dx = -cellRadius; dx <= cellRadius; dx++) {\n    for (let dy = Math.max(-cellRadius, -dx - cellRadius); dy <= Math.min(cellRadius, -dx + cellRadius); dy++) {\n      const dz = -dx - dy;\n      const neighborX = centerX + dx;\n      const neighborY = centerY + dy;\n      const neighborZ = centerZ + dz;\n\n      if (dx !== 0 || dy !== 0 || dz !== 0) {\n        const neighbor = cubeToAxial(neighborX, neighborY, neighborZ);\n        neighborsInRadius.push(neighbor);\n      }\n    }\n  }\n\n  return neighborsInRadius;\n}\n\nexport function getSafeHexNearsInRadius(props: {\n  column: number;\n  columns: number;\n  row: number;\n  rows: number;\n  cellRadius: number;\n  includeCenter: boolean;\n}): ColumnRow[] {\n  const { column, row, cellRadius, rows, columns, includeCenter } = props;\n  const neighborsInRadius: ColumnRow[] = [];\n  const { x: centerX, y: centerY, z: centerZ } = axialToCube(column, row);\n\n  // Обход всех координат в пределах радиуса\n  for (let dx = -cellRadius; dx <= cellRadius; dx++) {\n    for (let dy = Math.max(-cellRadius, -dx - cellRadius); dy <= Math.min(cellRadius, -dx + cellRadius); dy++) {\n      const dz = -dx - dy;\n      const neighborX = centerX + dx;\n      const neighborY = centerY + dy;\n      const neighborZ = centerZ + dz;\n      const isNotCenter = dx !== 0 || dy !== 0 || dz !== 0;\n      if (includeCenter || isNotCenter) {\n        const neighbor = cubeToAxial(neighborX, neighborY, neighborZ);\n        if (isSafe(neighbor, columns, rows)) {\n          neighborsInRadius.push(neighbor);\n        }\n      }\n    }\n  }\n\n  return neighborsInRadius;\n}\n\nfunction isSafe(columnRow: ColumnRow, columns: number, rows: number): boolean {\n  const { column, row } = columnRow;\n  return column >= 0 && column < columns && row >= 0 && row < rows;\n}\n","import { getHexNears } from \"./getHexNears\";\nimport { forEach2D, makeArray2D } from \"../SimpleArray2D\";\nimport { getHexNearsInRadius } from \"./getHexNearsInRadius\";\nimport { IArray2DNearsMarker } from \"../interfaces\";\n\ninterface IProps {\n  columns: number;\n  rows: number;\n}\n\n/** маркер гексагональной сетки, создает массив размером columns * rows **/\nexport class HexGridMarker implements IArray2DNearsMarker {\n  private readonly grid: boolean[][];\n\n  constructor(private props: IProps) {\n    const { columns, rows } = this.props;\n    this.grid = makeArray2D(columns, rows, (col, row) => false);\n  }\n\n  /** Очистить все метки */\n  clear(): void {\n    forEach2D(this.grid, (value, col, row) => (this.grid[col][row] = false));\n  }\n  /**\n   * Пометить ячейку, возвращает true если ячейка не была помечена ранее, иначе false.\n   * @param column - Номер столбца.\n   * @param row - Номер строки.\n   **/\n  add(column: number, row: number): boolean {\n    if (!this.isValidPosition(column, row)) return false;\n    const isNew = !this.has(column, row);\n    this.grid[column][row] = true;\n    return isNew;\n  }\n\n  /**\n   * Проверить, помечена ли ячейка.\n   * возвращает true если помечена ИЛИ если индекс выходит за пределы сетки\n   * @param column - Номер столбца.\n   * @param row - Номер строки.\n   **/\n  has(column: number, row: number): boolean {\n    if (!this.isValidPosition(column, row)) return true;\n    return this.grid[column][row] === true;\n  }\n\n  /**\n   * Удалить метку с ячейки.\n   * @param column - Номер столбца.\n   * @param row - Номер строки.\n   * @return true если была метка иначе false\n   **/\n  delete(column: number, row: number): boolean {\n    const isMarked = this.has(column, row);\n    this.grid[column][row] = false;\n    return isMarked;\n  }\n\n  private isValidPosition(col: number, row: number): boolean {\n    const { columns, rows } = this.props;\n    if (col < 0 || col >= columns || row < 0 || row >= rows) {\n      return false;\n    }\n    return true;\n  }\n\n  /** проверка свободна ли ячейка\n   * может проверять в радиусе\n   **/\n  isFree(col: number, row: number, radius = 0): boolean {\n    if (this.has(col, row)) return false;\n    if (radius === 0) return true;\n\n    const neighbors = radius === 1 ? getHexNears(col, row) : getHexNearsInRadius(col, row, radius);\n    for (let i = 0; i < neighbors.length; i++) {\n      const { column, row } = neighbors[i];\n      if (this.has(column, row)) return false;\n    }\n\n    return true;\n  }\n}\n","import { getAbstractGridPath } from \"./getAbstractGridPath\";\nimport { getEightNearsColumnRows, getFourNearsColumnRows } from \"../SimpleArray2D\";\nimport { ColumnRow, WalkableCallback } from \"./interfaces\";\n\ninterface IProps {\n  from: ColumnRow;\n  to: ColumnRow;\n  isWalkable?: WalkableCallback;\n  columnMin?: number;\n  columnMax?: number;\n  rowMin?: number;\n  rowMax?: number;\n  maxChecks?: number;\n}\n\n/**\n * рассчитывыет путь по доске с квадратными клетками\n * - учитывает проходимость клетки\n * - правила хода - на все стороны включая по диагонали\n **/\nexport function getSquareGridPath(props: IProps): ColumnRow[] {\n  return getAbstractGridPath({\n    ...props,\n    getNears: (column, row) => getEightNearsColumnRows(column, row),\n  });\n}\n\n/**\n * рассчитывыет путь по доске с квадратными клетками\n * - учитывает проходимость клетки\n * - правила хода - только вверх или вниз\n **/\nexport function getSquareGridXYPath(props: IProps): ColumnRow[] {\n  return getAbstractGridPath({\n    ...props,\n    getNears: (column, row) => getFourNearsColumnRows(column, row),\n  });\n}\n","export type ColumnRow = { column: number; row: number };\n\n/** элемент списка по с>ути, указывает на предыдущую ячейку **/\nexport type PathNode = {\n  cell: ColumnRow;\n  cost: number;\n  previous?: PathNode;\n};\n\nexport type WalkableCallback = (column: number, row: number) => boolean;\nexport const isAllWalkable: WalkableCallback = (column: number, row: number) => true;\n\nexport interface IGetPathArray2DProps {\n  from: ColumnRow;\n  to: ColumnRow;\n  isWalkable?: WalkableCallback;\n  columnMin?: number;\n  columnMax?: number;\n  rowMin?: number;\n  rowMax?: number;\n  maxChecks?: number;\n  getNears: (column: number, row: number) => ColumnRow[];\n}\n","/**\n *  Поиск пути между клетками на двухмерном массиве\n *  - оптимизирует поиск выбирая ближайших соседей между стартом и финишом\n *  - отбрасывает варианты за пределами доски\n *  - имеет ограничение на число проверок maxChecks\n *  - может проверять,  проходима клетко или нет!\n *  - время поиска - 0-1 ms даже для путей в сто клеток на MacBook\n *  - форма доски - гекс или квадрат - определяется в getNears\n * **/\nimport { ColumnRow, IGetPathArray2DProps, isAllWalkable, PathNode } from \"./interfaces\";\n\nexport function getAbstractGridPath({\n  from,\n  to,\n  isWalkable = isAllWalkable,\n  columnMin = 0,\n  columnMax,\n  rowMin = 0,\n  rowMax,\n  maxChecks = 10000,\n  getNears\n}: IGetPathArray2DProps): ColumnRow[] {\n  if (!isWalkable(to.column, to.row)) return [];\n\n  const openSet: PathNode[] = [];\n  const closedSet: Set<string> = new Set();\n  const startNode: PathNode = { cell: from, cost: 0 };\n  openSet.push(startNode);\n\n  let checkedCells = 0;\n\n  while (openSet.length > 0) {\n    // Сортируем список открытых ячеек по эвристическому значению (расстоянию до финишной точки)\n    openSet.sort((a, b) => heuristicDistance(a.cell, to) - heuristicDistance(b.cell, to));\n    const currentNode = openSet.shift(); // Берем первый элемент из отсортированного списка\n    if (!currentNode) break;\n    const { cell, cost } = currentNode;\n    checkedCells++;\n    if (checkedCells > maxChecks) {\n      console.warn(\"checkedCells>maxChecks in getHexPath\");\n      return [];\n    }\n\n    if (cell.column === to.column && cell.row === to.row) {\n      return getPathFromNode(currentNode);\n    }\n\n    closedSet.add(`${cell.column},${cell.row}`);\n\n    const neighbors = getNears(cell.column, cell.row);\n    for (const neighbor of neighbors) {\n      if (neighbor.column < columnMin || neighbor.row < rowMin) continue;\n      if (columnMax && neighbor.column > columnMax) continue;\n      if (rowMax && neighbor.row > rowMax) continue;\n\n      const neighborKey = `${neighbor.column},${neighbor.row}`;\n      if (!closedSet.has(neighborKey) && isWalkable(neighbor.column, neighbor.row)) {\n        const neighborNode: PathNode = { cell: neighbor, cost: cost + 1, previous: currentNode };\n        const existingNeighbor = openSet.find((n) => n.cell.column === neighbor.column && n.cell.row === neighbor.row);\n        if (!existingNeighbor || neighborNode.cost < existingNeighbor.cost) {\n          if (existingNeighbor) openSet.splice(openSet.indexOf(existingNeighbor), 1);\n          openSet.push(neighborNode);\n        }\n      }\n    }\n  }\n\n  return [];\n}\n\n/**  Восстанавливаем путь, проходя от конечного узла к начальному **/\nfunction getPathFromNode(currentNode: PathNode) {\n  const path: ColumnRow[] = [];\n  let current: PathNode | undefined = currentNode;\n\n  while (current) {\n    path.unshift(current.cell);\n    current = current.previous;\n  }\n  return path;\n}\n\n// Функция расчета эвристического значения (эвклидово расстояние) между двумя ячейками\nfunction heuristicDistance(cell: ColumnRow, target: ColumnRow): number {\n  const dx = cell.column - target.column;\n  const dy = cell.row - target.row;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n","import { getAbstractGridPath } from \"./getAbstractGridPath\";\nimport { getHexNearsInRadius } from \"../HexArray\";\nimport { ColumnRow, WalkableCallback } from \"./interfaces\";\n\ninterface IGetHexPathProps {\n  from: ColumnRow;\n  to: ColumnRow;\n  isWalkable?: WalkableCallback;\n  columnMin?: number;\n  columnMax?: number;\n  rowMin?: number;\n  rowMax?: number;\n  maxChecks?: number;\n}\n\n/**\n *  Поиск пути между клетками на гексагональной доске\n *  - оптимизирует поиск выбирая ближайших соседей между стартом и финишом\n *  - отбрасывает варианты за пределами доски\n *  - имеет ограничение на число проверок maxChecks\n *  - может проверять,  проходима клетко или нет!\n *  - время поиска - 0-1 ms даже для путей в сто клеток на MacBook\n * **/\nexport function getHexGridPath(props: IGetHexPathProps): ColumnRow[] {\n  return getAbstractGridPath({\n    ...props,\n    getNears: (column, row)=> getHexNearsInRadius(column, row, 1)\n  })\n}\n","import { IAssetsResources, IAtlasSpriteSheet } from \"./interfaces\";\n\n/**\n * AssetManager for preloading registering\n * Use assetManager.addSome to collect info in component\n * Use getAssets to boot\n */\nexport class AssetManager {\n  private resources: IAssetsResources = {\n    images: [], sounds: [], sprites: [], jsons: []\n  };\n\n  addImage(url: string | string[]) {\n    getUrlArray(url).forEach(url => this.resources.images.push(url));\n  }\n\n\n  addSound(url: string | string[]) {\n    getUrlArray(url).forEach(url => this.resources.sounds.push(url));\n  }\n\n\n  addSpriteSheet(sheet: IAtlasSpriteSheet | IAtlasSpriteSheet[]) {\n    getUrlArray(sheet).forEach(sheet => this.resources.sprites.push(sheet));\n  }\n\n  getResources(): IAssetsResources {\n    return this.resources;\n  }\n}\n\n\nfunction getUrlArray<T>(url: T | T[]): T[] {\n  return Array.isArray(url) ? url : [url];\n}\n\nexport const assetManager = new AssetManager();\n","/**\n * Да это дубль\n * но сделано чтобы phaser-sugar\n * не цеплялся за остальные модули\n */\n\n/**\n * convert cssColor string To Phaser Int color\n * @param cssColor like #dedede, #afafaf, etc\n * @return {number} like 0xdedede, 0xafafaf, etc\n */\nexport function cssColorToInt(cssColor: string): number {\n  try {\n    return parseInt(cssColor.replace(\"#\", \"0x\"));\n  } catch (e) {\n    console.warn(\"cssColorToInt: use cssColor with # prefix \");\n    return 0xdedede;\n  }\n}\n","export interface ICanvasImageProps {\n  scene: Phaser.Scene;\n  textureKey: string;\n  width: number;\n  height: number;\n  draw: (ctx: CanvasRenderingContext2D) => void;\n}\n\nexport class CanvasImage extends Phaser.GameObjects.Image {\n  constructor(props: ICanvasImageProps) {\n    const { scene, draw, width, height, textureKey } = props;\n    const { textures } = scene;\n\n    if (!textures.exists(textureKey)) {\n      const canvasTexture = scene.textures.createCanvas(\n        textureKey,\n        width,\n        height\n      );\n      if (canvasTexture == null) {\n        console.warn(\"null scene.textures.createCanvas\");\n      } else {\n        draw(canvasTexture.getContext());\n        canvasTexture.refresh();\n      }\n    }\n    super(scene, 0, 0, textureKey);\n  }\n}\n","export const DefaultNinePatchConfig = {\n  frame: \"__BASE\", // дефолтный фрейм в текстурах\n  top: 0,\n  bottom: 0,\n  width: 128,\n  height: 128,\n  left: 0,\n  right: 0,\n  zoom: 1,\n};\n","import { Column, INinePatchConfig, INinePatchProps, PhaserTextureExtended, Row } from \"./interfaces\";\nimport { DefaultNinePatchConfig } from \"./config\";\n\n/**\n *   NinePatch - пропорционально растягивающаяся картинка под разные размеры\n *   идеально для кнопок\n *   нарезает и растягивает 1 картинку под почти любые размеры\n */\nexport class NinePatch extends Phaser.GameObjects.RenderTexture {\n  private readonly config: INinePatchConfig;\n  private cols: Column[] = [];\n  private rows: Row[] = [];\n  private srcTexture: PhaserTextureExtended | undefined;\n  private srcFrame: Phaser.Textures.Frame | undefined;\n\n  constructor(props: INinePatchProps) {\n    super(\n      props.scene,\n      0,\n      0,\n      Math.ceil(props.width * props.zoom),\n      Math.ceil(props.height * props.zoom)\n    );\n    this.config = {\n      ...DefaultNinePatchConfig,\n      ...props,\n    };\n    this.ceilSizes();\n    this.updateTexture();\n  }\n\n  /**\n   * Если не округлять числа, могут возникать полоски в WebGL\n   * @private\n   */\n  private ceilSizes() {\n    const { config } = this;\n    const { zoom } = config;\n    config.width = Math.ceil(config.width * zoom);\n    config.height = Math.ceil(config.height * zoom);\n    config.top = Math.ceil(config.top * zoom);\n    config.left = Math.ceil(config.left * zoom);\n    config.right = Math.ceil(config.right * zoom);\n    config.bottom = Math.ceil(config.bottom * zoom);\n  }\n\n  resize(width: number, height: number): this {\n    if (this.width === width && this.height === height) {\n      return this;\n    }\n    super.resize(width, height);\n    if (this.config != null) {\n      this.updateTexture();\n    }\n    return this;\n  }\n\n  public updateTexture() {\n    this.setupSourceTexture();\n    this.drawCells();\n  }\n\n  private setupSourceTexture() {\n    const { scene, config } = this;\n    this.srcTexture = scene.textures.get(\n      config.texture\n    ) as PhaserTextureExtended;\n    this.srcFrame = this.srcTexture.get(config.frame);\n    this.setupFrameSizes();\n    this.makeFrames();\n    this.restoreFirstFrame();\n  }\n\n  private setupFrameSizes() {\n    this.setColumns();\n    this.setRows();\n  }\n\n  private setColumns() {\n    const { width: destCommonWidth, srcFrame } = this;\n    if (srcFrame == null) return;\n    const { width: srcCommonWidth } = srcFrame;\n    const { left, right } = this.config;\n    this.cols = [];\n\n    this.cols[0] = {\n      srcWidth: left,\n      destWidth: left,\n    };\n\n    this.cols[1] = {\n      // src texture must have width > 0\n      srcWidth: Math.max(srcCommonWidth - left - right, 1),\n      // dest texture must have width >= 0\n      destWidth: Math.max(destCommonWidth - left - right, 0),\n    };\n\n    this.cols[2] = {\n      srcWidth: right,\n      destWidth: right,\n    };\n  }\n\n  private setRows() {\n    const { height: destCommonHeight, srcFrame } = this;\n    if (srcFrame == null) return;\n    const { height: srcCommonHeight } = srcFrame;\n    const { top, bottom } = this.config;\n    this.rows = [];\n\n    this.rows[0] = {\n      srcHeight: top,\n      destHeight: top,\n    };\n\n    this.rows[1] = {\n      // src texture must have height > 0\n      srcHeight: Math.max(srcCommonHeight - top - bottom, 1),\n      // dest texture must have height >= 0\n      destHeight: Math.max(destCommonHeight - top - bottom, 0),\n    };\n\n    this.rows[2] = {\n      srcHeight: bottom,\n      destHeight: bottom,\n    };\n  }\n\n  private makeFrames() {\n    const { rows, cols, srcTexture, srcFrame } = this;\n    if (srcFrame == null || srcTexture == null) return;\n    let offsetY = srcFrame.cutY;\n    for (let row = 0; row < rows.length; row++) {\n      const { srcHeight: rowHeight } = rows[row];\n      if (rowHeight == 0) continue;\n      let offsetX = srcFrame.cutX;\n      for (let col = 0; col < cols.length; col++) {\n        const { srcWidth: colWidth } = cols[col];\n        if (colWidth == 0) continue;\n        const frameName = this.getFrameName(col, row);\n        srcTexture.add(frameName, 0, offsetX, offsetY, colWidth, rowHeight);\n\n        offsetX = offsetX + colWidth;\n      }\n      offsetY = offsetY + rowHeight;\n    }\n  }\n\n  /**\n   *  Если не указывать frame (а по дефолту мы не указываем)\n   *  то для картинки берется firstFrame\n   *  после нарезки им становится первый frame из add\n   *  это надо восстановить, чтобы все, кто использует текстуру как обычно целиком\n   *  не получили неверный фрейм, не получили кусочек вместо целого\n   */\n  private restoreFirstFrame() {\n    if (this.srcTexture == null) return;\n    this.srcTexture.firstFrame = this.config.frame;\n  }\n\n  private getFrameName(col: number, row: number): string {\n    return `${this.config.frame}_${col}_${row}`;\n  }\n\n  /**\n   * рисуем слайсы картинками\n   * где надо растянуть - растягиваем масштабом\n   *\n   *  - TileSprite глючит в FireFox\n   *  - TileSprite также в разы медленнее\n   *\n   *  @magic! отрисовка drawFrames глючит на MacOS если сцена запускается через start\n   */\n  private drawCells() {\n    const { rows, cols, srcTexture, config } = this;\n    if (srcTexture == null) return;\n\n    let offsetY = 0;\n    for (let row = 0; row < rows.length; row++) {\n      const { destHeight: rowHeight } = rows[row];\n      if (rowHeight == 0) continue;\n      let offsetX = 0;\n      for (let col = 0; col < cols.length; col++) {\n        const { destWidth: colWidth } = cols[col];\n        if (colWidth == 0) continue;\n        const isTiled = (col === 1 || row === 1) && config.isTiled;\n        const nextImage = isTiled\n          ? this.drawTile(col, row, colWidth, rowHeight)\n          : this.drawImage(col, row, colWidth, rowHeight);\n        this.draw(nextImage, offsetX, offsetY);\n        nextImage.destroy();\n\n        offsetX = Math.ceil(offsetX + colWidth);\n      }\n      offsetY = Math.ceil(offsetY + rowHeight);\n    }\n  }\n\n  private drawImage(\n    col: number,\n    row: number,\n    colWidth: number,\n    rowHeight: number\n  ) {\n    const { config, scene, srcTexture } = this;\n    const { texture } = config;\n    const frameName = this.getFrameName(col, row);\n    const frame: Phaser.Textures.Frame = srcTexture!.frames[frameName];\n\n    const scaleX = colWidth / frame.width;\n    const scaleY = rowHeight / frame.height;\n\n    const nextImage = scene.make.image({\n      key: texture,\n      frame: frameName,\n      x: 0,\n      y: 0,\n    });\n\n    nextImage.setScale(scaleX, scaleY).setOrigin(0, 0);\n    return nextImage;\n  }\n\n  private drawTile(\n    col: number,\n    row: number,\n    colWidth: number,\n    rowHeight: number\n  ) {\n    const { config, scene } = this;\n    const { texture } = config;\n    const frameName = this.getFrameName(col, row);\n\n    const nextImage = scene.make.tileSprite({\n      key: texture,\n      frame: frameName,\n      x: 0,\n      y: 0,\n      width: colWidth,\n      height: rowHeight,\n    });\n\n    nextImage.setOrigin(0, 0);\n    return nextImage;\n  }\n}\n","export interface ITextFloaterProps {\n  scene: Phaser.Scene,\n  text: string;\n  textStyle: Partial<Phaser.GameObjects.TextStyle>;\n  x: number;\n  y: number;\n  velocityX: number; // pixels / s\n  velocityY: number; // pixels / s\n  origin: number;\n  duration: number;\n}\n\nexport interface ITextFloaterConstructorArgs extends Partial<ITextFloaterProps>{\n  scene: Phaser.Scene,\n}\n\nexport const DefaultTextFloaterProps: Omit<ITextFloaterProps, 'scene'> = {\n  duration: 1200,\n  origin: 0.5,\n  textStyle: {\n    fontSize: '36px',\n    color: 'white',\n    fontFamily: 'Open Sans',\n    align: 'center',\n    strokeThickness: 4,\n    stroke: '#000000'\n  },\n  velocityX: 0,\n  velocityY: -100,\n  text: 'Hello',\n  x: 200,\n  y: 200\n}","/**\n * Всплывающий и тающий текст\n * для бонусов и очков к примеру\n */\nimport { DefaultTextFloaterProps, ITextFloaterConstructorArgs, ITextFloaterProps } from \"./props\";\n\nexport class TextFloater {\n  private readonly props: ITextFloaterProps;\n  private readonly textNode: Phaser.GameObjects.Text;\n\n  constructor(props: ITextFloaterConstructorArgs) {\n    this.props = {\n      ...DefaultTextFloaterProps,\n      ...props,\n    };\n\n    const { scene, text, textStyle = {}, x, y, origin = 0.5 } = this.props;\n    this.textNode = new Phaser.GameObjects.Text(scene, x, y, text, textStyle)\n      .setOrigin(origin)\n      .setVisible(false);\n  }\n\n  /**\n   * Запустить анимацию\n   * если аргументы не заданы - использовать предыдущие\n   */\n  runAnimation(text = this.props.text, x = this.props.x, y = this.props.y) {\n    const { textNode, props } = this;\n    const { scene } = props;\n\n    props.x = x;\n    props.y = y;\n    props.text = text;\n\n    textNode.setText(text);\n    scene.tweens.add(this.buildConfig(props));\n  }\n\n  private buildConfig(props: ITextFloaterProps): Phaser.Types.Tweens.TweenBuilderConfig {\n    const { textNode } = this;\n    const { scene, duration, velocityX, velocityY, x, y } = props;\n\n    const config: Phaser.Types.Tweens.TweenBuilderConfig = {\n      targets: textNode,\n      props: {\n        alpha: 0,\n        x: x + duration * velocityX / 1000,\n        y: y + duration * velocityY / 1000,\n      },\n      duration,\n      onStart: () => {\n        textNode.x = x;\n        textNode.y = y;\n        scene.add.existing(textNode)\n        textNode.setVisible(true);\n        textNode.alpha = 1;\n      },\n      onComplete: () => textNode.setVisible(false),\n    };\n    return config;\n\n  }\n\n}\n","export type AlignObject =\n  | Phaser.GameObjects.Container\n  | Phaser.GameObjects.Image\n  | Phaser.GameObjects.Text\n  | Phaser.GameObjects.RenderTexture\n  | Phaser.GameObjects.Shape\n  | Phaser.GameObjects.TileSprite;\n\n// for origin == 0\n// all offsets move to right && down by default\n// chainable methods\nexport class Align {\n  private anchorItem: ISizeable | undefined;\n  private static errorSetAnchorMessage = 'set anchor in Align first';\n\n  constructor(anchorItem?: ISizeable) {\n    if (anchorItem) this.anchorItem = anchorItem;\n  }\n\n  /**\n   * объект относительно которого надо выравнивать\n   * @param item\n   */\n  anchor(item: ISizeable): this {\n    this.anchorItem = item;\n    return this;\n  }\n\n  /**\n   * Для выравнивания относительно экрана\n   * создается легкий делегат с нулевыми координатами\n   * @param width\n   * @param height\n   */\n  anchorScreen(width: number, height: number): this {\n    return this.anchor({\n      getBounds: () => new Phaser.Geom.Rectangle(0, 0, width, height),\n    });\n  }\n\n  anchorSceneScreen(scene: Phaser.Scene): this {\n    const { width, height } = scene.cameras.main;\n    return this.anchorScreen(width, height);\n  }\n\n  center(item: AlignObject, oX = 0, oY = 0): this {\n    return this.applyFormula(item, oX, oY, ({ aB, iB }) => ({\n      x: aB.x + (aB.width - iB.width) / 2,\n      y: aB.y + (aB.height - iB.height) / 2,\n    }));\n  }\n\n  centerX(item: AlignObject, oX = 0): this {\n    return this.applyFormula(item, oX, 0, ({ aB, iB }) => ({\n      x: aB.x + (aB.width - iB.width) / 2,\n      y: iB.y,\n    }));\n  }\n\n  centerY(item: AlignObject, oY = 0): this {\n    return this.applyFormula(item, 0, oY, ({ aB, iB }) => ({\n      x: iB.x,\n      y: aB.y + (aB.height - iB.height) / 2,\n    }));\n  }\n\n  bottomIn(item: AlignObject, oY = 0): this {\n    return this.applyFormula(item, 0, oY, ({ aB, iB }) => ({\n      x: iB.x,\n      y: aB.y + (aB.height - iB.height),\n    }));\n  }\n\n  bottomTo(item: AlignObject, oY = 0): this {\n    return this.applyFormula(item, 0, oY, ({ aB, iB }) => ({\n      x: iB.x,\n      y: aB.y + aB.height,\n    }));\n  }\n\n  topIn(item: AlignObject, oY = 0): this {\n    return this.applyFormula(item, 0, oY, ({ aB, iB }) => ({\n      x: iB.x,\n      y: aB.y,\n    }));\n  }\n\n  topTo(item: AlignObject, oY = 0): this {\n    return this.applyFormula(item, 0, oY, ({ aB, iB }) => ({\n      x: iB.x,\n      y: aB.y - iB.height,\n    }));\n  }\n\n  rightIn(item: AlignObject, oX = 0): this {\n    return this.applyFormula(item, oX, 0, ({ aB, iB }) => ({\n      x: aB.x + (aB.width - iB.width),\n      y: iB.y,\n    }));\n  }\n\n  rightTo(item: AlignObject, oX = 0): this {\n    return this.applyFormula(item, oX, 0, ({ aB, iB }) => ({\n      x: aB.x + aB.width,\n      y: iB.y,\n    }));\n  }\n\n  leftIn(item: AlignObject, oX = 0): this {\n    return this.applyFormula(item, oX, 0, ({ aB, iB }) => ({\n      x: aB.x,\n      y: iB.y,\n    }));\n  }\n\n  leftTo(item: AlignObject, oX = 0): this {\n    return this.applyFormula(item, oX, 0, ({ aB, iB }) => ({\n      x: aB.x - iB.width,\n      y: iB.y,\n    }));\n  }\n\n  /**\n   * @method setPosition - размещает объект с любым Origin\n   * для использования в цепочках с выравниванием по анкору\n   * @param item\n   * @param left\n   * @param top\n   */\n  setPosition(item: AlignObject, left: number, top: number): this {\n    Align.setLeftTop(item, left, top);\n    return this;\n  }\n\n  /**\n   * @method setLeftTop - размещает объект с любым Origin\n   * для использования без создания Align\n   * когда нужно просто разместить объект\n   * @param item\n   * @param left\n   * @param top\n   */\n  static setLeftTop(item: AlignObject, left: number, top: number) {\n    // bounds - реальное положение объекта вне зависимости  от origin\n    const iB = item.getBounds();\n    // находим разницу между  границами сейчас и что надо\n    const dX = left - iB.left;\n    const dY = top - iB.top;\n    // вычисляем перемещение по осям\n    const x = item.x + dX;\n    const y = item.y + dY;\n    // применяем перемещение\n    item.setPosition(x, y);\n  }\n\n  // выстроить объекты в ряд с расстоянием dX, друг за другом\n  row(items: AlignObject[], dX: number): this {\n    this.anchor(items[0]);\n    for (let i = 1; i < items.length; i++) {\n      const next = items[i];\n      this.rightTo(next, dX);\n      this.anchor(next);\n    }\n    return this;\n  }\n\n  // выстроить объекты в колонку с расстоянием dY, друг за другом\n  column(items: AlignObject[], dY: number): this {\n    this.anchor(items[0]);\n    for (let i = 1; i < items.length; i++) {\n      const next = items[i];\n      this.bottomTo(next, dY);\n      this.anchor(next);\n    }\n    return this;\n  }\n\n  private applyFormula(item: AlignObject, oX: number, oY: number, formula: IAlignFormula): this {\n    const { anchorItem } = this;\n    if (anchorItem == null) {\n      console.warn(Align.errorSetAnchorMessage);\n      return this;\n    }\n    if (item == null) {\n      console.warn(Align.errorSetAnchorMessage);\n      return this;\n    }\n\n    const { x, y } = formula(this.getBounds(item, anchorItem));\n    this.setPosition(item, x + oX, y + oY);\n\n    return this;\n  }\n\n  private getBounds(item: ISizeable, anchor: ISizeable): IBoundsPair {\n    return {\n      aB: anchor?.getBounds(),\n      iB: item?.getBounds(),\n    };\n  }\n}\n\ninterface ISizeable {\n  getBounds(): Phaser.Geom.Rectangle;\n}\n\ninterface IBoundsPair {\n  aB: Phaser.Geom.Rectangle;\n  iB: Phaser.Geom.Rectangle;\n}\n\ninterface IPosition {\n  x: number;\n  y: number;\n}\n\ninterface IAlignFormula {\n  (bounds: IBoundsPair): IPosition;\n}\n","import { cssColorToInt } from \"../../color\";\nimport { Align } from \"../../layout\";\n\ninterface ITextRectangleComponentProps {\n  scene: Phaser.Scene;\n  text: string;\n  fontSize?: number;\n  width?: number;\n  height?: number;\n  textPaddingX?: number;\n  textPaddingY?: number;\n}\n\nconst defaultSettings = {\n  textPaddingX: 48,\n  textPaddingY: 48,\n  fontSize: 42,\n};\n\nexport class TextRectangleComponent extends Phaser.GameObjects.Container {\n  protected bg: Phaser.GameObjects.Rectangle;\n  protected textNode: Phaser.GameObjects.Text;\n\n  constructor(private props: ITextRectangleComponentProps) {\n    super(props.scene, 0, 0);\n\n    const { scene, text, fontSize = defaultSettings.fontSize } = props;\n\n    const style: Phaser.Types.GameObjects.Text.TextStyle = {\n      fontFamily: \"Open Sans\",\n      fontSize: `${fontSize}px`,\n      color: \"#ffffff\",\n    };\n    const textNode = new Phaser.GameObjects.Text(scene, 0, 0, text, style);\n\n    const {\n      textPaddingX = defaultSettings.textPaddingX,\n      textPaddingY = defaultSettings.textPaddingY,\n    } = props;\n    const textBounds = textNode.getBounds();\n\n    const {\n      width = textBounds.width + textPaddingX * 2,\n      height = textBounds.height + textPaddingY * 2,\n    } = props;\n\n    const rectFillColor = cssColorToInt(\"#000000\");\n    const rectStrokeColor = cssColorToInt(\"#c0bebe\");\n    const rectangle = new Phaser.GameObjects.Rectangle(\n      scene,\n      0,\n      0,\n      width,\n      height\n    );\n    rectangle.setFillStyle(rectFillColor, 0.75);\n    rectangle.setStrokeStyle(2, rectStrokeColor);\n\n    new Align(rectangle).center(textNode);\n    this.add(rectangle);\n    this.add(textNode);\n\n    this.bg = rectangle;\n    this.textNode = textNode;\n  }\n\n  setText(text: string) {\n    this.textNode.setText(text);\n    new Align(this.bg).center(this.textNode);\n  }\n\n  get inputZone() {\n    return this.bg;\n  }\n}\n","import { cssColorToInt } from \"../color\";\n\n/** @type : Phaser.Types.GameObjects.Graphics.Options **/\nexport const defaultPhaserDrawStyle = {\n  lineStyle: { width: 2, color: cssColorToInt(\"#00ff00\"), alpha: 1 },\n  fillStyle: { color: cssColorToInt(\"#00ff00\"), alpha: 1 },\n};\n","import { ILineStyle, IPoint, IPointStyle } from \"./interfaces\";\nimport { defaultPhaserDrawStyle } from \"./constants\";\n\nexport class PhaserDraw {\n  private graphics: Phaser.GameObjects.Graphics;\n\n  constructor(private readonly scene: Phaser.Scene) {\n    this.scene = scene;\n    this.graphics = this.scene.add.graphics({ ...defaultPhaserDrawStyle });\n  }\n\n  resetFillStyle() {\n    this.graphics.fillStyle(\n      defaultPhaserDrawStyle.fillStyle.color,\n      defaultPhaserDrawStyle.fillStyle.alpha\n    );\n  }\n\n  resetLineStyle() {\n    this.graphics.lineStyle(\n      defaultPhaserDrawStyle.lineStyle.width,\n      defaultPhaserDrawStyle.lineStyle.color\n    );\n  }\n\n  destroy() {\n    this.graphics.destroy(true);\n  }\n\n  clear() {\n    this.graphics.clear(); // Очистка предыдущих рисунков\n  }\n\n  line(points: IPoint[], style?: ILineStyle): void {\n    if (points.length < 2) {\n      console.warn(\"PhaserDraw : need 2 points for line\");\n      return;\n    }\n\n    const { graphics } = this;\n    if (style) graphics.lineStyle(style.width, style.color, style.alpha);\n    else this.resetLineStyle();\n\n    graphics.beginPath(); // Начало нового пути\n\n    // Перемещаем \"перо\" в начальную точку\n    graphics.moveTo(points[0].x, points[0].y);\n\n    // Рисуем линии к каждой следующей точке\n    for (let i = 1; i < points.length; i++) {\n      graphics.lineTo(points[i].x, points[i].y);\n    }\n\n    graphics.strokePath(); // Применяем стиль и рисуем линию\n  }\n\n  points(points: IPoint[], style?: IPointStyle): void {\n    if (style) {\n      this.graphics.fillStyle(style.color, style.alpha);\n    } else {\n      this.resetFillStyle();\n    }\n    const radius = style?.radius ?? 5;\n    points.forEach((point) => {\n      this.graphics.fillCircle(point.x, point.y, radius); // Рисуем круглые точки радиусом 5 пикселей\n    });\n  }\n}\n","export function copyDeep<T>(obj: T): T {\n    return JSON.parse(JSON.stringify(obj)) as T;\n}\n","export type IPhaserConfig = Phaser.Types.Core.GameConfig;\nexport type PhaserScene = Phaser.Scene & Partial<{ create?: () => void, init?: () => void, preload?: () => void }>;\nexport type TextStyle = Phaser.Types.GameObjects.Text.TextStyle;\nexport type Callback = () => void | Promise<void>;\nexport const {KeyCodes} = Phaser.Input.Keyboard;\n\nexport interface IMoveKeys {\n    left: number[];\n    right: number[];\n    up: number[];\n    down: number[];\n}\n\nexport type GameObject =\n    | Phaser.GameObjects.Container\n    | Phaser.GameObjects.Image\n    | Phaser.GameObjects.Text\n    | Phaser.GameObjects.RenderTexture\n    | Phaser.GameObjects.Shape\n    | Phaser.GameObjects.TileSprite;\n","import { IMoveKeys, IPhaserConfig, KeyCodes, TextStyle } from \"./interfaces\";\n\nconst defaultPhaserScaleConfig: Phaser.Types.Core.ScaleConfig = {\n  mode: Phaser.Scale.FIT,\n  autoCenter: Phaser.Scale.CENTER_BOTH,\n  parent: \"game\",\n  width: 960,\n  height: 640,\n};\n\nexport const defaultPhaserConfig: IPhaserConfig = {\n  type: Phaser.AUTO,\n  backgroundColor: 0x222222,\n  transparent: true,\n  scale: defaultPhaserScaleConfig,\n  scene: [],\n};\n\nexport const defaulTextStyle: TextStyle = {\n  fontSize: \"24px\",\n  color: \"#dedede\",\n};\n\nexport const defaultMoveKeys: IMoveKeys = {\n  left: [KeyCodes.LEFT, KeyCodes.A],\n  right: [KeyCodes.RIGHT, KeyCodes.D],\n  up: [KeyCodes.UP, KeyCodes.W],\n  down: [KeyCodes.DOWN, KeyCodes.S],\n};\n","import { TextStyle } from \"./interfaces\";\nimport { defaulTextStyle, defaultPhaserConfig } from \"./defaults\";\n\nenum Scenes {\n  GAME = \"GAME\",\n  UI = \"UI\",\n}\n\nconst PhaserSugarInternal: IPhaserSugarInternal = {\n  config: { ...defaultPhaserConfig },\n  textStyle: { ...defaulTextStyle },\n};\n\nconst VarSceneCurrentKey = \"sceneCurrent\";\n\ninterface IPhaserSugarInternal {\n  config: Phaser.Types.Core.GameConfig;\n  [VarSceneCurrentKey]?: Phaser.Scene;\n  worldScene?: Phaser.Scene;\n  uiScene?: Phaser.Scene;\n  game?: Phaser.Game;\n  textStyle: TextStyle;\n}\n\ntype Key = keyof IPhaserSugarInternal;\n\nfunction useVar<T>(propName: Key, value?: T): T | undefined {\n  if (value != null) setVar(propName, value);\n  return (PhaserSugarInternal as any)[propName];\n}\n\nfunction setVar<T>(propName: Key, value: T): void {\n  (PhaserSugarInternal as any)[propName] = value;\n}\n\nfunction getVar<T>(propName: Key): T {\n  return (PhaserSugarInternal as any)[propName];\n}\n\nfunction resetVar<T>(propName: Key): void {\n  delete (PhaserSugarInternal as any)[propName];\n}\n\n\nexport function useScene(\n  scene?: Phaser.Scene,\n  propName: Key = VarSceneCurrentKey\n): Phaser.Scene {\n  if (scene) setCurrentScene(scene);\n  scene = useVar<Phaser.Scene>(propName);\n  if (scene == null) {\n    console.log(\"PhaserSugarInternal\", PhaserSugarInternal);\n    throw \"useScene null error\";\n  } else {\n    return scene;\n  }\n}\n\nexport function getCurrentScene(): Phaser.Scene {\n  return getVar(VarSceneCurrentKey);\n}\n\nfunction setCurrentScene(scene: Phaser.Scene) {\n  setVar(VarSceneCurrentKey, scene);\n}\n\nfunction resetCurrentScene() {\n  resetVar(VarSceneCurrentKey);\n}\n\nexport function withScene<T>(scene: Phaser.Scene, callback: () => T): T {\n  setCurrentScene(scene);\n  const result = callback();\n  resetCurrentScene();\n  return result;\n}\n\nexport function useWorldScene(scene?: Phaser.Scene): Phaser.Scene {\n  return useScene(scene, \"worldScene\");\n}\n\nexport function useUiScene(scene?: Phaser.Scene): Phaser.Scene {\n  return useScene(scene, \"uiScene\");\n}\n\nexport function useCamera(): Phaser.Cameras.Scene2D.Camera {\n  const scene = useScene();\n  if (scene == null) {\n    throw \"useScene null error\";\n  } else {\n    return scene.cameras.main;\n  }\n}\n\nexport function useTextStyle(textStyle?: TextStyle): TextStyle {\n  textStyle = { ...PhaserSugarInternal.textStyle, ...textStyle };\n  return useVar(\"textStyle\", textStyle) as TextStyle;\n}\n\nexport function useGame(game?: Phaser.Game): Phaser.Game {\n  return useVar(\"game\", game) as Phaser.Game;\n}\n","type PhaserTextStyle = Phaser.Types.GameObjects.Text.TextStyle;\n\nexport interface INiceTextStyle extends Partial<PhaserTextStyle> {\n  color?: string;\n  fontSizePx?: number;\n  // относительно текущего fontSize\n  lineHeight?: number;\n  wrapWidth?: number;\n}\n\nexport function addNiceTextStyle(\n  obj: Phaser.GameObjects.Text,\n  style: INiceTextStyle\n): Phaser.GameObjects.Text {\n  const phaserStyle: PhaserTextStyle = {\n    ...style,\n  };\n\n  if (style.fontSizePx) {\n    phaserStyle.fontSize = `${style.fontSizePx}px`;\n  }\n\n  if (style.wrapWidth) {\n    phaserStyle.wordWrap = { width: style.wrapWidth };\n  }\n\n  obj.setStyle(phaserStyle);\n  if (style.lineHeight && style.fontSizePx) {\n    const addPx = (style.lineHeight - 1) * style.fontSizePx;\n    obj.setLineSpacing(addPx);\n  }\n  return obj;\n}\n","import { getCurrentScene, useScene, useTextStyle } from \"./internals\";\nimport { GameObject } from \"./interfaces\";\nimport { cssColorToInt } from \"../color\";\nimport { addNiceTextStyle, INiceTextStyle } from \"./text\";\n\nfunction add<T extends GameObject>(obj: T): T {\n  const scene = useScene();\n  scene.add.existing(obj);\n  return obj;\n}\n\nexport function textObject(\n  text: string,\n  niceStyle?: INiceTextStyle\n): Phaser.GameObjects.Text {\n  const scene = useScene();\n  const style = useTextStyle();\n  const obj = new Phaser.GameObjects.Text(scene, 0, 0, text, style);\n  if (niceStyle) {\n    addNiceTextStyle(obj, niceStyle);\n  }\n  return add(obj);\n}\n\nexport function image(\n  textureKey: string,\n  frameName?: string\n): Phaser.GameObjects.Image {\n  const scene = useScene();\n  return add(new Phaser.GameObjects.Image(scene, 0, 0, textureKey, frameName));\n}\n\nexport function sprite(\n  textureKey: string,\n  frameName?: string\n): Phaser.GameObjects.Sprite {\n  const scene = useScene();\n  return add(new Phaser.GameObjects.Sprite(scene, 0, 0, textureKey, frameName));\n}\n\nexport function tileSprite(\n  width: number,\n  height: number,\n  textureKey: string,\n  frameName?: string\n): Phaser.GameObjects.TileSprite {\n  const scene = useScene();\n  return add(\n    new Phaser.GameObjects.TileSprite(\n      scene,\n      0,\n      0,\n      width,\n      height,\n      textureKey,\n      frameName\n    )\n  );\n}\n\ninterface IRectProps {\n  width: number;\n  height: number;\n  fillColor: string;\n  fillAlpha: number;\n  strokeColor?: string;\n  strokeAlpha: number;\n  strokeWidth: number;\n}\n\nexport function rect(\n  options: Partial<IRectProps> = {}\n): Phaser.GameObjects.Rectangle {\n  const scene = useScene();\n  const props: IRectProps = {\n    fillAlpha: 1,\n    fillColor: \"#5aa867\",\n    height: 128,\n    width: 64,\n    strokeAlpha: 1,\n    strokeWidth: 2,\n    ...options,\n  };\n  const rect = add(\n    new Phaser.GameObjects.Rectangle(\n      scene,\n      0,\n      0,\n      props.width,\n      props.height,\n      cssColorToInt(props.fillColor),\n      props.fillAlpha\n    )\n  );\n\n  if (props.strokeColor) {\n    rect.setStrokeStyle(\n      props.strokeWidth,\n      cssColorToInt(props.strokeColor),\n      props.strokeAlpha\n    );\n  }\n\n  return rect;\n}\n\ninterface ICircleProps {\n  radius: number;\n  fillColor: string;\n  fillAlpha: number;\n  strokeColor?: string;\n  strokeAlpha: number;\n  strokeWidth: number;\n}\n\nexport function circle(\n  options: Partial<ICircleProps> = {}\n): Phaser.GameObjects.Rectangle {\n  const scene = useScene();\n  const props: ICircleProps = {\n    fillAlpha: 1,\n    fillColor: \"#5aa867\",\n    radius: 64,\n    strokeAlpha: 1,\n    strokeWidth: 2,\n    ...options,\n  };\n  const rect = add(\n    new Phaser.GameObjects.Ellipse(\n      scene,\n      0,\n      0,\n      props.radius * 2,\n      props.radius * 2,\n      cssColorToInt(props.fillColor),\n      props.fillAlpha\n    )\n  );\n\n  if (props.strokeColor) {\n    rect.setStrokeStyle(\n      props.strokeWidth,\n      cssColorToInt(props.strokeColor),\n      props.strokeAlpha\n    );\n  }\n\n  return rect;\n}\n\nexport function container(\n  objects?: GameObject[]\n): Phaser.GameObjects.Container {\n  const scene = getCurrentScene();\n  return new Phaser.GameObjects.Container(scene, 0, 0, objects);\n}\n","import { useCamera } from \"./internals\";\n\ntype Rect = Phaser.Geom.Rectangle;\n\nexport interface IBoundable {\n  getBounds: () => Rect;\n}\n\ninterface IPosition {\n  x: number;\n  y: number;\n}\n\ninterface IPositionSettable {\n  setPosition: (x: number, y: number) => any;\n}\n\ninterface AlignObject extends IBoundable, IPosition, IPositionSettable {\n  getBounds: () => Rect;\n  x: number;\n  y: number;\n  setPosition: (x: number, y: number) => AlignObject;\n}\n\nlet currentAnchor: Phaser.Geom.Rectangle | undefined = undefined;\n\nfunction getAnchorBounds(): Phaser.Geom.Rectangle {\n  if (currentAnchor == undefined) {\n    const { width, height } = useCamera();\n    currentAnchor = new Phaser.Geom.Rectangle(0, 0, width, height);\n    return currentAnchor;\n  } else {\n    return currentAnchor;\n  }\n}\n\n/**\n * set layout anchor\n */\nexport function anchor(obj: IBoundable) {\n  currentAnchor = obj.getBounds();\n}\n\nexport function anchorBounds(bounds:Phaser.Geom.Rectangle){\n  currentAnchor = bounds;\n}\n\nlet IPointRectangle = new Phaser.Geom.Rectangle(0, 0, 0, 0);\n\nexport function anchorPoint(x: number, y: number) {\n  IPointRectangle.x = x;\n  IPointRectangle.y = y;\n  currentAnchor = IPointRectangle;\n}\n\n/**\n * align helper\n * inside fn:\n * 1. set anchor object OR will be used camera/screen\n * 2. use any other functions to move any object relative to anchor object\n *\n * внутри fn\n * 1. установите anchor на объект, относительно которого будет использоваться выравнивание\n * 1.1 или будет использоваться камера игры\n * 2. используйте другие функции для перемещения других объектов относительно анкора\n * перемещение происходит моментально, до обновления, поэтому сколько бы не было вызвано функций,\n * на следующий тик таймера все объекты займут последнее вычисленное место\n *\n * @param fn\n */\nexport function layout(fn: () => void) {\n  fn();\n  currentAnchor = undefined;\n}\n\nexport function center(item: AlignObject, oX = 0, oY = 0): AlignObject {\n  const iB = item.getBounds();\n  const aB = getAnchorBounds();\n  const x = aB.x + (aB.width - iB.width) / 2;\n  const y = aB.y + (aB.height - iB.height) / 2;\n  setLeftTop(item, x + oX, y + oY);\n  return item;\n}\n\nexport function centerX(item: AlignObject, oX = 0): AlignObject {\n  const iB = item.getBounds();\n  const aB = getAnchorBounds();\n  const x = aB.x + (aB.width - iB.width) / 2;\n  const y = iB.y;\n  setLeftTop(item, x + oX, y);\n  return item;\n}\n\nexport function centerY(item: AlignObject, oY = 0): AlignObject {\n  const iB = item.getBounds();\n  const aB = getAnchorBounds();\n  const x = iB.x;\n  const y = aB.y + (aB.height - iB.height) / 2;\n  setLeftTop(item, x, y + oY);\n  return item;\n}\n\nexport function bottomIn(item: AlignObject, oY = 0): AlignObject {\n  const iB = item.getBounds();\n  const aB = getAnchorBounds();\n  const x = iB.x;\n  const y = aB.y + (aB.height - iB.height);\n  setLeftTop(item, x, y + oY);\n  return item;\n}\n\nexport function bottomTo(item: AlignObject, oY = 0): AlignObject {\n  const iB = item.getBounds();\n  const aB = getAnchorBounds();\n  const x = iB.x;\n  const y = aB.y + aB.height;\n  setLeftTop(item, x, y + oY);\n  return item;\n}\n\nexport function topIn(item: AlignObject, oY = 0): AlignObject {\n  const iB = item.getBounds();\n  const aB = getAnchorBounds();\n  const x = iB.x;\n  const y = aB.y;\n  setLeftTop(item, x, y + oY);\n  return item;\n}\n\nexport function topTo(item: AlignObject, oY = 0): AlignObject {\n  const iB = item.getBounds();\n  const aB = getAnchorBounds();\n  const x = iB.x;\n  const y = aB.y - iB.height;\n  setLeftTop(item, x, y + oY);\n  return item;\n}\n\nexport function rightIn(item: AlignObject, oX = 0): AlignObject {\n  const iB = item.getBounds();\n  const aB = getAnchorBounds();\n  const x = aB.x + (aB.width - iB.width);\n  const y = iB.y;\n  setLeftTop(item, x + oX, y);\n  return item;\n}\n\nexport function rightTo(item: AlignObject, oX = 0): AlignObject {\n  const iB = item.getBounds();\n  const aB = getAnchorBounds();\n  const x = aB.x + aB.width;\n  const y = iB.y;\n  setLeftTop(item, x + oX, y);\n  return item;\n}\n\nexport function leftIn(item: AlignObject, oX = 0): AlignObject {\n  const iB = item.getBounds();\n  const aB = getAnchorBounds();\n  const x = aB.x;\n  const y = iB.y;\n  setLeftTop(item, x + oX, y);\n  return item;\n}\n\nexport function leftTo(item: AlignObject, oX = 0): AlignObject {\n  const iB = item.getBounds();\n  const aB = getAnchorBounds();\n  const x = aB.x - iB.width;\n  const y = iB.y;\n  setLeftTop(item, x + oX, y);\n  return item;\n}\n\n/**\n * @method setLeftTop - размещает объект с любым Origin\n * для использования без создания Align\n * когда нужно просто разместить объект\n */\nexport function setLeftTop(\n  item: AlignObject,\n  left: number,\n  top: number\n): AlignObject {\n  // bounds - реальное положение объекта вне зависимости  от origin\n  const iB = item.getBounds();\n  // находим разницу между  границами сейчас и что надо\n  const dX = left - iB.left;\n  const dY = top - iB.top;\n  // вычисляем перемещение по осям\n  item.setPosition(item.x + dX, item.y + dY);\n  return item;\n}\n","import { useScene } from \"./internals\";\nimport { center, layout } from \"./layout\";\nimport { GameObject } from \"./interfaces\";\n\nexport function layoutInSceneCenter(scene: Phaser.Scene, obj: GameObject) {\n  layout(() => {\n    useScene(scene);\n    center(obj);\n  });\n}\n\nexport function addToSceneCenter(scene: Phaser.Scene, obj: GameObject) {\n    layout(() => {\n        useScene(scene);\n        center(obj);\n    });\n    scene.add.existing(obj);\n}\n","import { getWorldPosition, IWorldPosition } from \"./getWorldPosition\";\n\nexport interface IScreenObject extends Phaser.GameObjects.Components.Transform {\n  scene: Phaser.Scene;\n}\n\nexport function getScreenPosition(object: IScreenObject): IWorldPosition {\n  const worldPosition = getWorldPosition(object);\n  const cameraPosition = object.scene.cameras.main.getBounds();\n\n  return {\n    ...worldPosition,\n    x: worldPosition.x - cameraPosition.x,\n    y: worldPosition.y - cameraPosition.y,\n  };\n}\n","import { IMoveKeys, KeyCodes } from \"../interfaces\";\n\nexport const defaultMoveKeys: IMoveKeys = {\n  left: [KeyCodes.LEFT, KeyCodes.A],\n  right: [KeyCodes.RIGHT, KeyCodes.D],\n  up: [KeyCodes.UP, KeyCodes.W],\n  down: [KeyCodes.DOWN, KeyCodes.S],\n};\n\ninterface IProps {\n  scene: Phaser.Scene;\n  keys?: IMoveKeys;\n  onLeft: () => void;\n  onRight: () => void;\n  onUp: () => void;\n  onDown: () => void;\n  onRelease: () => void;\n}\n\ntype Direction = keyof IMoveKeys;\ntype Keys = Record<Direction, Phaser.Input.Keyboard.Key[]>;\n\nexport function addWasdKeys({\n  keys = defaultMoveKeys,\n  onLeft,\n  onUp,\n  onDown,\n  onRight,\n  onRelease,\n  scene,\n}: IProps) {\n  const { keyboard } = scene.input;\n  if (keyboard == null) {\n    console.warn(\"input==null\");\n    return;\n  }\n  keyboard.addKeys(defaultMoveKeys);\n\n  const keyObjects: Keys = {\n    left: keys.left.map((key) => keyboard.addKey(key)),\n    right: keys.right.map((key) => keyboard.addKey(key)),\n    up: keys.up.map((key) => keyboard.addKey(key)),\n    down: keys.down.map((key) => keyboard.addKey(key)),\n  };\n\n  keyObjects.left.forEach((key) => {\n    key.on(\"up\", onRelease);\n    key.on(\"down\", onLeft);\n  });\n\n  keyObjects.right.forEach((key) => {\n    key.on(\"up\", onRelease);\n    key.on(\"down\", onRight);\n  });\n\n  keyObjects.up.forEach((key) => {\n    key.on(\"up\", onRelease);\n    key.on(\"down\", onUp);\n  });\n\n  keyObjects.down.forEach((key) => {\n    key.on(\"up\", onRelease);\n    key.on(\"down\", onDown);\n  });\n}\n","import { GameObject } from \"../interfaces\";\nimport Pointer = Phaser.Input.Pointer;\n\n/** объект должен быть интерактивным  AND setOrigin = 0 **/\nexport function addCameraDraggingToObject(obj: GameObject, width: number, height: number) {\n  const { scene } = obj;\n  const camera = obj.scene.cameras.main;\n  const worldWidth = width;\n  const worldHeight = height;\n\n  const prevX = camera.scrollX;\n  const prevY = camera.scrollY;\n\n  scene.input.dragDistanceThreshold = 16;\n  scene.input.dragTimeThreshold = 100;\n  obj.on(Phaser.Input.Events.GAMEOBJECT_DRAG, (pointer: Pointer, dragX: number, dragY: number) => {\n    camera.scrollX = Phaser.Math.Clamp(camera.scrollX - dragX, 0, worldWidth - camera.width);\n    camera.scrollY = Phaser.Math.Clamp(camera.scrollY - dragY, 0, worldHeight - camera.height);\n  });\n\n  return () => {\n    camera.scrollX = prevX;\n    camera.scrollY = prevY;\n  };\n}\n","import { onPause, onUpdate } from \"../scenes\";\nimport { IMoveKeys } from \"../interfaces\";\nimport { defaultMoveKeys } from \"../defaults\";\nimport { addWasdKeys } from \"../keyboard\";\n\nexport interface IScrollingCameraSettings {\n  /**\n   * клавиши для скролла\n   */\n  keys: IMoveKeys;\n  /**\n   *  размеры камеры - по сути размеры показываемого мира\n   *  она просто двигается в этих пределах\n   *  даже если там пустота\n   */\n  width: number;\n  height: number;\n  /**\n   * Расстояние курсора до краев экрана\n   * при котором активируется драггинг карты\n   */\n  draggingMapMouseThreshold: {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n  };\n  draggingMapVelocityMin: number;\n  draggingMapVelocityMax: number;\n  /**\n   * если надо быстро отключить\n   */\n  isNotScrolling?: boolean;\n}\n\nexport const defaultScrollingCameraSettings: IScrollingCameraSettings = {\n  isNotScrolling: false,\n  width: 2400,\n  height: 1200,\n  keys: defaultMoveKeys,\n  draggingMapMouseThreshold: {\n    left: 120,\n    right: 120,\n    top: 120,\n    bottom: 120,\n  },\n  draggingMapVelocityMin: 150,\n  draggingMapVelocityMax: 300,\n};\n\ninterface IProps extends Partial<IScrollingCameraSettings> {\n  scene: Phaser.Scene;\n  width: number;\n  height: number;\n  camera?: Phaser.Cameras.Scene2D.Camera;\n}\n\nexport function useScrollingCamera(customProps: IProps) {\n  const props = { ...defaultScrollingCameraSettings, ...customProps };\n  const { scene } = props;\n  const camera = props.camera ?? scene.cameras.main;\n  if (props.isNotScrolling) return () => {};\n\n  const oldBounds = camera.getBounds();\n  camera.setBounds(0, 0, props.width, props.height);\n  let cameraVelocityX = 0;\n  let cameraVelocityY = 0;\n\n  addWasdKeys({\n    scene,\n    keys: props.keys,\n    onLeft: () => (cameraVelocityX = -props.draggingMapVelocityMax),\n    onRight: () => (cameraVelocityX = props.draggingMapVelocityMax),\n    onUp: () => (cameraVelocityY = -props.draggingMapVelocityMax),\n    onDown: () => (cameraVelocityY = props.draggingMapVelocityMax),\n    onRelease: () => {\n      cameraVelocityX = 0;\n      cameraVelocityY = 0;\n    },\n  });\n\n  function lockVelocity() {\n    cameraVelocityX = 0;\n    cameraVelocityY = 0;\n  }\n\n  const onProximityCallback = (x: number, y: number) => {\n    cameraVelocityX =\n      x != 0\n        ? Math.sign(x) * props.draggingMapVelocityMin +\n          x * props.draggingMapVelocityMax\n        : 0;\n    cameraVelocityY =\n      y != 0\n        ? Math.sign(y) * props.draggingMapVelocityMin +\n          y * props.draggingMapVelocityMax\n        : 0;\n  };\n\n  scene.input.on(\n    Phaser.Input.Events.POINTER_MOVE,\n    (pointer: Phaser.Input.Pointer) => {\n      const scrollFactorX = getScrollFactorOrdinate(\n        pointer.x,\n        camera.getBounds().left,\n        camera.width,\n        props.draggingMapMouseThreshold.left,\n        props.draggingMapMouseThreshold.right\n      );\n      const scrollFactorY = getScrollFactorOrdinate(\n        pointer.y,\n        camera.getBounds().top,\n        camera.height,\n        props.draggingMapMouseThreshold.top,\n        props.draggingMapMouseThreshold.bottom\n      );\n      onProximityCallback(scrollFactorX, scrollFactorY);\n    }\n  );\n\n  onPause(scene, lockVelocity);\n  const updateUnSub = onUpdate(scene, (time, dT) => {\n    camera.scrollY += (cameraVelocityY * dT) / 1000;\n    camera.scrollX += (cameraVelocityX * dT) / 1000;\n  });\n\n  return () => {\n    updateUnSub();\n    camera.scrollY = 0;\n    camera.scrollX = 0;\n    camera.setBounds(\n      oldBounds.x,\n      oldBounds.y,\n      oldBounds.width,\n      oldBounds.height\n    );\n  };\n}\n\n/** возвращает число от 0 до 1, где 1 - приближение к границе камеры изнутрри\n *  при выходе за нее - 0\n *  это позволяет скроллить камеру изнутри\n * **/\nfunction getScrollFactorOrdinate(\n  cursorOrdinate: number,\n  cameraOrdinate: number,\n  cameraSize: number,\n  threshold1: number,\n  threshold2: number\n): number {\n  const d1 = cursorOrdinate - cameraOrdinate;\n  const d2 = cameraOrdinate + cameraSize - cursorOrdinate;\n  if (d1 <= 0 || d2 <= 0) return 0;\n  if (d1 <= threshold1) return d1 / threshold1 - 1;\n  if (d2 <= threshold2) return 1 - d2 / threshold2;\n  return 0;\n}\n","/**\n *  State and event\n *  - emit for fire\n *  - on for subscribe\n *    - on return off (unsubscribe callback)\n *  - unsubscribeAll\n *  - getState for previous value\n *  - no async  - ожидание завершения обработчика на самом деле сложно и не тривиально\n *              - проще повесить action для обратной связи\n *\n *  - multiple subscribers\n */\nexport class StateEvent<TState> {\n  public subscribers = new Set<StateObserver<TState>>();\n\n  constructor(protected state?: TState) {}\n\n  getState(): TState | undefined {\n    return this.state;\n  }\n\n  on(callback: StateObserver<TState>): UnSubscriber {\n    this.subscribers.add(callback);\n    return () => {\n      this.subscribers.delete(callback);\n    };\n  }\n\n  once(callback: StateObserver<TState>): UnSubscriber {\n    const autoUnSub: StateObserver<TState> = (state) => {\n      callback(state);\n      this.subscribers.delete(autoUnSub);\n    };\n    this.subscribers.add(autoUnSub);\n    return () => {\n      this.subscribers.delete(autoUnSub);\n    };\n  }\n\n  async await(): Promise<TState> {\n    return new Promise<TState>((resolve) => this.once(resolve));\n  }\n\n  setState(state: TState) {\n    this.subscribers.forEach((fn) => {\n      fn(state);\n    });\n    this.state = state;\n  }\n\n  //Syntax sugar for Event case\n  emit(data: TState) {\n    this.setState(data);\n  }\n\n  unSubScribeAll() {\n    this.subscribers.clear();\n  }\n}\n\n/**\n * Всегда имеет значение по дефолту\n */\nexport class State<T> extends StateEvent<T> {\n  constructor(protected state: T) {\n    super(state);\n  }\n\n  getState(): T {\n    return this.state;\n  }\n}\n\nexport type UnSubscriber = () => void;\nexport type StateObserver<TState> = (state: TState) => void;\n","import { IPathBuilder, IPoint } from \"../interfaces\";\nimport { cssColorToInt, GameObject } from \"../../../common\";\nimport { Point } from \"../interfaces\";\n\ninterface IProps {\n  scene: Phaser.Scene;\n  cellSize: number;\n  pathColor?: string;\n}\n\nexport class SimplePathBuilder implements IPathBuilder {\n  private elements: GameObject[] = [];\n  private points: Point[] = [];\n\n  constructor(private props: IProps) {}\n\n  draw(points: IPoint[]): GameObject[] {\n    const elements = points.map((current, index) => {\n      const prev = points[index - 1];\n      const next = points[index + 1];\n      return this.drawElement(current, prev, next);\n    });\n    return elements;\n  }\n\n  clear() {\n    this.elements.forEach((el) => el.destroy());\n    this.elements = [];\n  }\n\n  drawElement(current: IPoint, prev: IPoint | undefined, next: IPoint | undefined): GameObject {\n    const { scene, cellSize, pathColor = \"#007028\" } = this.props;\n    const radius = 0.25 * cellSize;\n    const circle = new Phaser.GameObjects.Ellipse(\n      scene,\n      current.x,\n      current.y,\n      radius,\n      radius,\n      cssColorToInt(pathColor)\n    );\n    scene.add.existing(circle);\n    this.elements.push(circle);\n    return circle;\n  }\n\n  get pathPoints() {\n    return this.points;\n  }\n\n  get startPoint():IPoint|undefined {\n    return this.points[0];\n  }\n\n  get targetPoint():IPoint|undefined {\n    return this.points[this.points.length - 1];\n  }\n\n  get hasPath() {\n    return this.elements.length > 0;\n  }\n}\n","import { GameObject, getHexGridPath } from \"../../../common\";\nimport { IPathBuilder, ISimpleGridPathMaker, ISpriteGridCell } from \"../interfaces\";\nimport { SimplePathBuilder } from \"./SimplePathBuilder\";\n\ninterface IProps {\n  scene: Phaser.Scene;\n  cells2D: ISpriteGridCell[][];\n  pathColor?: string;\n  cellMoveDurationMs?: number;\n  columnMin?: number;\n  columnMax: number;\n  rowMin?: number;\n  rowMax: number;\n  maxChecks?: number;\n}\n\nconst defaultConfig = {\n  cellMoveDurationMs: 250\n};\n\nexport class SimpleGridPathMaker implements ISimpleGridPathMaker {\n  public startCell: ISpriteGridCell | undefined;\n  public finishCell: ISpriteGridCell | undefined;\n  public pathCells: ISpriteGridCell[];\n  public isMovingAnimation = false;\n  private readonly markersParent: Phaser.GameObjects.Container;\n  private readonly markersMap: Map<ISpriteGridCell, GameObject> = new Map<ISpriteGridCell, GameObject>();\n  private pathBuilder: IPathBuilder;\n  private workingTweenChain: Phaser.Tweens.TweenChain | undefined;\n\n  get hasPath(): boolean {\n    return false;\n  }\n\n  constructor(private props: IProps) {\n    const { scene, pathColor } = props;\n    this.markersParent = new Phaser.GameObjects.Container(scene);\n    this.pathBuilder = new SimplePathBuilder({ scene, cellSize: 64, pathColor });\n    this.pathCells = [];\n    scene.add.existing(this.markersParent);\n  }\n\n  destroy(): void {\n    this.clearPath();\n    this.markersParent.destroy();\n    this.workingTweenChain?.destroy();\n  }\n\n  clearPath(): void {\n    this.markersParent.each((obj: GameObject) => {\n      this.markersMap.clear();\n      this.markersParent.remove(obj);\n      obj.destroy();\n    });\n  }\n\n  drawPath(isCellPathElement?: (column: number, row: number) => boolean, stopBeforeFinish?: boolean): void {\n    const { startCell, finishCell, props } = this;\n    const { cells2D } = props;\n    if (startCell == null) {\n      console.warn(\"startCell==null\");\n      return;\n    }\n    if (finishCell == null) {\n      console.warn(\"finishCell==null\");\n      return;\n    }\n\n    const isDefaultWalkable = (column: number, row: number) => cells2D[column]?.[row]?.isPathBlock === false;\n    const isWalkable = isCellPathElement ?? isDefaultWalkable;\n    this.pathCells = this.getPathCells(startCell, finishCell, cells2D, isWalkable);\n\n    if (stopBeforeFinish) {\n      this.pathCells.pop();\n    }\n    this.drawPathElements();\n  }\n\n  setStart(cell: ISpriteGridCell) {\n    if (cell.figures.length == 0) {\n      console.warn(\"cell.figures.length==0\");\n      return;\n    }\n    this.clearPath();\n    this.startCell = cell;\n  }\n\n  setFinish(cell: ISpriteGridCell) {\n    this.finishCell = cell;\n  }\n\n  moveFigures(onComplete?: () => void): void {\n    const { startCell, finishCell } = this;\n    if (startCell == null || finishCell == null) {\n      console.warn(\"moveFigures:: startCell==null || finishCell==null\");\n      return;\n    }\n\n    const cellMoveDurationMs = this.props.cellMoveDurationMs ?? defaultConfig.cellMoveDurationMs;\n\n    this.isMovingAnimation = true;\n\n    const onAnimationComplete = () => {\n      this.isMovingAnimation = false;\n      this.startCell = undefined;\n      this.finishCell = undefined;\n      onComplete?.();\n    };\n\n    const pathCells = this.pathCells;\n    const movableFigures = startCell.figures.filter((figure) => figure.isMovableWhenSelected);\n    const targets = movableFigures.map((figure) => figure.gameObject);\n\n    let currentCell = pathCells[0];\n\n    if (startCell === finishCell || pathCells.length === 0 || currentCell == null) {\n      onAnimationComplete();\n      return;\n    }\n\n    this.workingTweenChain = this.props.scene.tweens.chain({\n      targets,\n      onComplete: onAnimationComplete,\n      tweens: pathCells.map((cell) => {\n        return {\n          props: {\n            x: cell.gameObject.x,\n            y: cell.gameObject.y\n          },\n          duration: cellMoveDurationMs,\n          onComplete: () => {\n            this.eatMarker(cell);\n            movableFigures.forEach((fig) => {\n              currentCell.removeFigure(fig);\n              cell.placeFigure(fig);\n            });\n            currentCell = cell;\n          }\n        };\n      })\n    });\n  }\n\n  /********\n   * PRIVATE\n   *********/\n\n  private getPathCells(\n    from: ISpriteGridCell,\n    to: ISpriteGridCell,\n    cells2D: ISpriteGridCell[][],\n    isWalkable: (col: number, row: number) => boolean\n  ): ISpriteGridCell[] {\n    const pathColumnRows = getHexGridPath({\n      ...this.props,\n      isWalkable,\n      from,\n      to\n    });\n\n    return pathColumnRows\n      .map(({ column, row }) => cells2D[column]?.[row])\n      .filter((cell) => cell != null) as ISpriteGridCell[];\n  }\n\n  private drawPathElements() {\n    const centers = this.pathCells.map((cell) => {\n      const { centerX, centerY } = cell.gameObject.getBounds();\n      return { x: centerX, y: centerY };\n    });\n    const pathGameObjects = this.pathBuilder.draw(centers);\n    pathGameObjects.forEach((markerGameObject, cellIndex) => {\n      const cell = this.pathCells[cellIndex];\n      if (cell == null) {\n        console.warn(\"null cell\");\n        return;\n      }\n      this.markersMap.set(cell, markerGameObject);\n      this.markersParent.add(markerGameObject);\n    });\n  }\n\n  private eatMarker(cell: ISpriteGridCell) {\n    const markerObject = this.markersMap.get(cell);\n    if (markerObject == null) {\n      console.warn(\"markerObject==null for cell\", cell);\n      return;\n    }\n\n    this.markersParent.remove(markerObject);\n    markerObject.destroy();\n  }\n}\n","import { Align, cssColorToInt, GameObject } from \"../../../../common\";\nimport { ISpriteGridSelector } from \"../../interfaces\";\n\nexport interface ISpriteGridHexSelectorProps {\n  scene: Phaser.Scene;\n  cellSize: number;\n  selectorColor?: string;\n}\n\nconst STROKE_WIDTH = 8;\nconst STROKE_COLOR = \"#4ce001\";\nconst SIDES = 6;\n\nexport class SpriteGridHexSelector extends Phaser.GameObjects.Ellipse implements ISpriteGridSelector {\n  public readonly gameObject: GameObject;\n\n  constructor({ scene, cellSize, selectorColor = STROKE_COLOR }: ISpriteGridHexSelectorProps) {\n    super(scene, 0, 0, cellSize, cellSize);\n    this.setStrokeStyle(STROKE_WIDTH, cssColorToInt(selectorColor), 1);\n\n    this.setSmoothness(SIDES);\n    this.gameObject = this;\n    this.hide();\n  }\n\n  show(cellGameObject: GameObject) {\n    new Align(cellGameObject).center(this);\n    this.setVisible(true);\n  }\n\n  hide() {\n    this.setVisible(false);\n  }\n}\n","import { ISimpleGridSelector, ISpriteGridCell } from \"../interfaces\";\nimport { SpriteGridHexSelector } from \"./SpriteGridHexSelector\";\n\ninterface IProps {\n  scene: Phaser.Scene;\n  cellSize: number;\n  selectorColor?: string;\n}\n\nexport class SimpleHexSelector implements ISimpleGridSelector {\n  private readonly selector: SpriteGridHexSelector;\n  private selectedCell: ISpriteGridCell | undefined;\n\n  constructor(private props: IProps) {\n    const { scene, cellSize, selectorColor } = props;\n    this.selector = new SpriteGridHexSelector({ scene, cellSize, selectorColor });\n    scene.add.existing(this.selector);\n  }\n\n  getSelectedCell(): ISpriteGridCell | undefined {\n    return this.selectedCell;\n  }\n\n  hide(): void {\n    this.selectedCell = undefined;\n    this.selector.hide();\n  }\n\n  show(cell: ISpriteGridCell): void {\n    this.selectedCell = cell;\n    this.selector.show(this.selectedCell.gameObject);\n  }\n\n  switch(cell: ISpriteGridCell) {\n    if (cell === this.selectedCell) {\n      this.hide();\n    } else {\n      this.show(cell);\n    }\n  }\n\n  destroy() {\n    this.selector.destroy();\n    this.selectedCell = undefined;\n  }\n}\n","import { cssColorToInt, GameObject } from \"../../../../../common\";\nimport { FigureType, ICombos, IGameFigure, IMonsterCard, IPlayerCard, ITreasureCard } from \"../../../interfaces\";\n\ninterface IProps {\n  scene: Phaser.Scene;\n  cellSize: number;\n  playerCard: IPlayerCard;\n  treasureCards: ITreasureCard[];\n}\n\nexport class PlayerFigure implements IGameFigure {\n  private originalSize = 128;\n  gameObject: GameObject;\n  isMovableWhenSelected = true;\n  readonly type = \"player\" as FigureType;\n\n  combos: ICombos;\n\n  private get playerCombo() {\n    return this.combos.playerCombo!;\n  }\n\n  constructor(private props: IProps) {\n    this.combos = {\n      playerCombo: {\n        playerCard: props.playerCard,\n        treasureCards: props.treasureCards,\n        monstersWin: [],\n        diedByMonster: undefined,\n      },\n    };\n    this.gameObject = this.createObject();\n    this.restoreScale();\n  }\n\n  public addTreasure(treasureCard: ITreasureCard) {\n    this.playerCombo.treasureCards.push(treasureCard);\n  }\n\n  public addMonsterAfterFight(monsterCard: IMonsterCard, isPlayerWin: boolean) {\n    if (isPlayerWin) {\n      this.playerCombo.monstersWin.push(monsterCard);\n    } else {\n      this.playerCombo.diedByMonster = monsterCard;\n    }\n  }\n\n  private createObject(): GameObject {\n    const { scene, cellSize } = this.props;\n    const object = new Phaser.GameObjects.Ellipse(\n      scene,\n      0,\n      0,\n      this.originalSize,\n      this.originalSize,\n      cssColorToInt(\"#d109e0\")\n    );\n    object.setStrokeStyle(2, cssColorToInt(\"#00480a\"));\n    return object;\n  }\n\n  public restoreScale(gameObject: GameObject = this.gameObject) {\n    const { cellSize } = this.props;\n    const { width, height } = gameObject.getBounds();\n    const maxSize = Math.max(width, height);\n    const scale = (cellSize / maxSize) * 0.75;\n    gameObject.setScale(scale);\n  }\n}\n","import { Align, cssColorToInt, GameObject } from \"../../../../../common\";\nimport { ICombos, IGameFigure, ITreasureCombo } from \"../../../interfaces\";\n\ninterface IProps {\n  scene: Phaser.Scene;\n  cellSize: number;\n  treasureCombo: ITreasureCombo;\n}\n\nexport class TreasureFigure implements IGameFigure {\n  private originalSize = 128;\n  gameObject: GameObject;\n  isMovableWhenSelected = false;\n  combos: ICombos;\n\n  constructor(private props: IProps) {\n    this.combos = {\n      treasureCombo: props.treasureCombo,\n    };\n    this.gameObject = this.createObject();\n    this.restoreScale();\n  }\n\n  private createObject(): GameObject {\n    const { scene } = this.props;\n    const container = new Phaser.GameObjects.Container(scene);\n    const object = new Phaser.GameObjects.Ellipse(\n      scene,\n      0,\n      0,\n      this.originalSize,\n      this.originalSize,\n      cssColorToInt(\"#989324\")\n    );\n    object.setStrokeStyle(2, cssColorToInt(\"#00480a\"));\n\n    const text = new Phaser.GameObjects.Text(scene, 0, 0, \"$\", {\n      fontSize: \"72px\",\n    });\n    new Align(object).center(text);\n\n    container.add([object, text]);\n    return container;\n  }\n\n  public restoreScale() {\n    const { gameObject } = this;\n    const { cellSize } = this.props;\n    const { width, height } = gameObject.getBounds();\n    const maxSize = Math.max(width, height);\n    const scale = (cellSize / maxSize) * 0.75;\n    gameObject.setScale(scale);\n  }\n}\n","import { Align, cssColorToInt, GameObject } from \"../../../../../common\";\nimport { ICombos, IGameFigure, IMonsterCombo } from \"../../../interfaces\";\n\ninterface IProps {\n  scene: Phaser.Scene;\n  cellSize: number;\n  monsterCombo: IMonsterCombo;\n}\n\nexport class MonsterFigure implements IGameFigure {\n  private originalSize = 128;\n\n  gameObject: GameObject;\n  isMovableWhenSelected = false;\n\n  combos: ICombos;\n\n  constructor(private props: IProps) {\n    this.gameObject = this.createObject();\n    this.combos = {\n      monsterCombo: props.monsterCombo,\n    };\n    this.restoreScale();\n  }\n\n  private createObject(): GameObject {\n    const { scene } = this.props;\n    const container = new Phaser.GameObjects.Container(scene);\n    const object = new Phaser.GameObjects.Ellipse(\n      scene,\n      0,\n      0,\n      this.originalSize,\n      this.originalSize,\n      cssColorToInt(\"#7c0014\")\n    );\n    object.setStrokeStyle(2, cssColorToInt(\"#00480a\"));\n\n    const text = new Phaser.GameObjects.Text(scene, 0, 0, \"M\", {\n      fontSize: \"72px\",\n    });\n    new Align(object).center(text);\n    container.add(object);\n    container.add(text);\n    return container;\n  }\n\n  public restoreScale(gameObject = this.gameObject) {\n    const { cellSize } = this.props;\n    const { width, height } = gameObject.getBounds();\n    const maxSize = Math.max(width, height);\n    const scale = (cellSize / maxSize) * 0.75;\n    gameObject.setScale(scale);\n  }\n}\n","import { ITerrainCell, ITerrainGenerator, ITerrainRule, TerrainType } from \"../../../../interfaces\";\nimport { makeArray2D } from \"../../../../../../common\";\n\ninterface IProps {\n  columns: number;\n  rows: number;\n  terrainType?: TerrainType;\n}\n\nexport class MonoTerrainGenerator {\n  constructor(private props: IProps) {}\n\n  generateCells(): ITerrainCell[][] {\n    const { columns, rows, terrainType = \"grass\" } = this.props;\n\n    // Initialize the map with random terrains\n    const terrainCells: ITerrainCell[][] = makeArray2D(columns, rows, (col, row) => {\n      return {\n        terrainType,\n      };\n    });\n\n    console.log(\"terrainCells\", terrainCells);\n\n    return terrainCells;\n  }\n}\n","import {\n  getEightNearsColumnRows,\n  getHexNears,\n  getRandomArrayElement,\n  isSafeArr2Place,\n  makeArray2D,\n  shuffleArray,\n} from \"../../../../../../common\";\nimport {\n  IComboPlace,\n  IMapGenerator,\n  IMapGeneratorResult,\n  IMonsterCard,\n  IMonsterCombo,\n  IPlayerCard,\n  ITerrainGenerator,\n  ITerrainRule,\n  ITreasureCard,\n  ITreasureCombo,\n  StartCells,\n  StartCombos,\n} from \"../../../../interfaces\";\nimport { FirstTerrainGenerator } from \"../../terrains\";\nimport { getTerrainRulesMap } from \"../../../../adapters\";\n\ninterface IProps {\n  columns: number;\n  rows: number;\n  playerCard: IPlayerCard;\n  monsterCards: IMonsterCard[];\n  treasureCards: ITreasureCard[];\n  terrainRules: ITerrainRule[];\n  /** вероятность открытого сокровища от 0 до 1**/\n  openedTreasuresProbability: number;\n  /** вероятность открытого монстра от 0 до 1**/\n  openedMonsterProbability: number;\n  hexOrSquare?: \"hex\" | \"square\";\n}\n\nexport class FirstMapGenerator implements IMapGenerator {\n  constructor(private props: IProps) {}\n\n  run(): IMapGeneratorResult {\n    const {\n      columns,\n      rows,\n      terrainRules,\n      treasureCards,\n      monsterCards,\n      openedMonsterProbability,\n      openedTreasuresProbability,\n      playerCard,\n      hexOrSquare = 'hex',\n    } = this.props;\n\n    const terrainGenerator: ITerrainGenerator = new FirstTerrainGenerator({\n      columns,\n      rows,\n      terrainRules,\n    });\n\n    const terrainCells = terrainGenerator.generateCells();\n\n    const startCells: StartCells = makeArray2D(columns, rows, (column, row) => {\n      return {\n        terrainType: terrainCells[row][column].terrainType,\n      };\n    });\n\n    const startCombos: StartCombos = [];\n\n    /**\n     * Игрок помещается в левый верхний угол\n     * около него в радиусе 3 все ячейки получают тип 'grass'\n     **/\n    startCombos.push({\n      column: 0,\n      row: 0,\n      playerCombo: {\n        playerCard,\n        treasureCards: [],\n        monstersWin: [],\n      },\n    });\n    /**\n     * около игрока в радиусе 3 все ячейки получают тип 'grass'\n     **/\n    for (let r = 0; r < Math.min(3, rows); r++) {\n      for (let c = 0; c < Math.min(3, columns); c++) {\n        startCells[r][c].terrainType = \"grass\";\n      }\n    }\n\n    /** тасуем карты монстров и сокровищ **/\n    const shuffledMonsters = shuffleArray(monsterCards);\n    const shuffledTreasures = shuffleArray(treasureCards);\n\n    /** собираем комбинации **/\n    const monsterCombos: IMonsterCombo[] = shuffledMonsters.map((monsterCard) => {\n      const combo: IMonsterCombo = {\n        monsterCard,\n        treasureCards: [],\n        isOpened: Math.random() < openedMonsterProbability,\n      };\n      const treasureCard = shuffledTreasures.pop();\n      if (treasureCard) combo.treasureCards.push(treasureCard);\n      else console.warn(\"no treasure for monster\");\n\n      return combo;\n    });\n\n    const treasureCombos: ITreasureCombo[] = shuffledTreasures.map((treasureCard) => {\n      return {\n        treasureCards: [treasureCard],\n        isOpened: Math.random() < openedTreasuresProbability,\n      };\n    });\n\n    /**\n     * по всему массиву равномерно и случайно распределяются карты монстров и сокровищ\n     * по правилам\n     * - размещение возможно только на terrain со скоростью speedK > 0 (проходимость должна быть)\n     * - на каждую карту монстра кладется в ту же ячейку еще 1 карта сокровища\n     * - карт сокровищ намного больше, поэтому часто в ячейку кладется просто 1 карта сокровища\n     * - все монстры получают isCardOpened = true с вероятностью openedTreasuresProbability\n     * - одиночные сокровища получают isCardOpened = true с вероятностью openedTreasuresProbability\n     * - если не выпадает, isCardOpened не ставится\n     * **/\n    const terrainRuleMap = getTerrainRulesMap(terrainRules);\n    console.log(\"terrainRuleMap\", terrainRuleMap);\n\n    const isWalkable = (column: number, row: number) => {\n      if (!isSafeArr2Place(column, row, columns, rows)) return false;\n\n      const cell = startCells[column][row];\n      const terrainRule = terrainRuleMap[cell.terrainType];\n      const isWalkableTerrain = terrainRule.speedK > 0;\n      console.log(\"isWalkable\", terrainRule.type, terrainRule.speedK, isWalkableTerrain);\n      if (!isWalkableTerrain) return false;\n\n      return true;\n    };\n\n    const getCellNears = hexOrSquare === \"hex\" ? getHexNears : getEightNearsColumnRows;\n\n    /** безопасно распределить так - задаем фикс степ и затем смещаем на +- 1 в случайном направлении **/\n\n    /** TODO поменять чистый фикс степ на степ с рандомным смещением **/\n    const colStep = 4;\n    const rowStep = 4;\n\n    CYCLE: for (let column = 2; column < columns; column += colStep) {\n      for (let row = 2; row < rows; row += rowStep) {\n        if (monsterCombos.length == 0 && treasureCombos.length == 0) break CYCLE;\n\n        let walkableColumn = column;\n        let walkableRow = row;\n        /** если не проходимая или занятая ячейка **/\n        while (!isWalkable(walkableColumn, walkableRow)) {\n          /** берем соседей **/\n          const nears = getCellNears(walkableColumn, walkableRow).filter(({ column, row }) =>\n            isSafeArr2Place(column, row, columns, rows)\n          );\n          const randomNear = getRandomArrayElement(nears);\n          walkableColumn = randomNear.column;\n          walkableRow = randomNear.row;\n        }\n\n        const startCombo: IComboPlace = {\n          column: walkableColumn,\n          row: walkableRow,\n        };\n        const isMonster = monsterCombos.length > 0 && Math.random() - 0.5;\n        if (isMonster) {\n          startCombo.monsterCombo = monsterCombos.pop();\n        } else {\n          startCombo.treasureCombo = treasureCombos.pop();\n        }\n        startCombos.push(startCombo);\n      }\n    }\n\n    return {\n      startCells,\n      startCombos,\n    };\n  }\n}\n","import {\n  forEach2D,\n  getSafeHexNearsInRadius,\n  makeArray2D,\n  repeatArray,\n  shuffleArray\n} from \"../../../../../../common\";\nimport {\n  IComboPlace,\n  IConfig,\n  IMapStartCell,\n  IMonsterCard,\n  ITerrainCell,\n  ITreasureCard,\n  TerrainType\n} from \"../../../../interfaces\";\nimport { MonoTerrainGenerator } from \"../../terrains\";\n\ninterface IProps extends IConfig {}\n\n/** Генератор для гексагональной карты **/\nexport class SimpleMonoHexMapGenerator {\n  private readonly terrainGenerator: MonoTerrainGenerator;\n  private readonly grid: IMapStartCell[][];\n  private readonly props: IProps;\n  constructor(props: IProps) {\n    this.props = props;\n    const { columns, rows } = this.props;\n    this.grid = makeArray2D(columns, rows, (col, row) => ({\n      terrainType: \"grass\",\n    }));\n\n    // this.usedCellsMarker = new HexGridMarker({ columns, rows });\n    this.terrainGenerator = new MonoTerrainGenerator({\n      columns,\n      rows,\n    });\n  }\n\n  /** размещает монстров в порядке их расположения в колоде **/\n  run(): IMapStartCell[][] {\n    const { columns, rows, positions, treasureCards, monsterCards, gamePlay, playerCard } =\n      this.props;\n\n    const { openedTreasuresProbability, openedMonsterProbability, treasuresTotal, monstersTotal } = gamePlay;\n    const monsterCardsInGame = repeatArray(shuffleArray(monsterCards), monstersTotal);\n    const treasuresCardsInGame = repeatArray(shuffleArray(treasureCards), treasuresTotal);\n    console.log('monsterCardsInGame', monsterCardsInGame.length);\n    console.log('columns', columns);\n\n    const terrainCells: ITerrainCell[][] = this.terrainGenerator.generateCells();\n    forEach2D(terrainCells, (terrainCell, col, row) => {\n      this.grid[col][row].terrainType = terrainCell.terrainType;\n    });\n\n    /** Игрока **/\n    const playerColumn = positions.player.column;\n    const playerRow = positions.player.row;\n    this.grid[playerColumn][playerRow].playerCombo = {\n      playerCard,\n      treasureCards: [],\n      monstersWin: [],\n    };\n    const playerFreeRadius = 2;\n    this.setGrassAroundPlayer({\n      column: playerColumn,\n      row: playerRow,\n      radius: playerFreeRadius,\n      terrainType: \"ground\",\n    });\n\n    /** шагаем по сетке и размещаем карты и сокровища **/\n    const colStep = 3;\n    const rowStep = 3;\n    const freeRadius = 1;\n    let monsterCounter = 0;\n    let treasureCounter = 0;\n    for (let column = 0; column < columns; column += colStep) {\n      for (let row = 1; row < rows; row += rowStep) {\n        const nears = getSafeHexNearsInRadius({\n          columns,\n          rows,\n          row,\n          column,\n          includeCenter: true,\n          cellRadius: freeRadius,\n        });\n        const isFree = nears\n          .map((near) => this.isPlaceFree(near.column, near.row) && this.isTerrainCardPlaceable(near.column, near.row))\n          .reduce((previousValue, currentValue) => previousValue && currentValue, true);\n        if (!isFree) continue;\n\n        const isMonstersQueue = monsterCounter < monsterCardsInGame.length;\n        const isTreasureQueue = treasureCounter < treasuresCardsInGame.length;\n        const isMonster = isTreasureQueue && isMonstersQueue && Math.random() - 0.5 > 0;\n        const isTreasure = isTreasureQueue && !isMonster;\n        if (isMonster) {\n          const monster = monsterCardsInGame[monsterCounter];\n          console.log(`place monster ${monster.title} at ${column} ${row}`);\n          this.grid[column][row].monsterCombo = {\n            monsterCard: monster,\n            treasureCards: [treasuresCardsInGame[treasureCounter]],\n            isOpened: openedMonsterProbability > Math.random()\n          };\n          monsterCounter++;\n          treasureCounter++;\n          continue;\n        }\n\n        if (isTreasure) {\n          this.grid[column][row].treasureCombo = {\n            treasureCards: [treasuresCardsInGame[treasureCounter]],\n            isOpened: openedTreasuresProbability > Math.random()\n          };\n          treasureCounter++;\n          continue;\n        }\n      }\n    }\n\n    return this.grid;\n  }\n\n  private isSafeColumnRow(column: number, row: number): boolean {\n    return column >= 0 && column < this.props.columns && row >= 0 && row < this.props.rows;\n  }\n\n  private isPlaceFree(column: number, row: number): boolean {\n    if (!this.isSafeColumnRow(column, row)) return false;\n    const { monsterCombo, treasureCombo, playerCombo } = this.grid[column][row];\n    return monsterCombo == null && treasureCombo == null && playerCombo == null;\n  }\n\n  private isTerrainCardPlaceable(column: number, row: number): boolean {\n    if (!this.isSafeColumnRow(column, row)) return false;\n    const { terrainType } = this.grid[column][row];\n    const placeableTerrains: TerrainType[] = [\"ground\", \"grass\", \"forest\", \"sand\"];\n    return placeableTerrains.find((type) => type === terrainType) != null;\n  }\n\n  /** вернуть доступные для размещения свободные места на карте **/\n  private getFreeStartPlaces(grid: IMapStartCell[][], amount: number): IComboPlace[] {\n    const { columns, rows } = this.props;\n    const freePlaces: IComboPlace[] = [];\n\n    const step = 2;\n    let column = step;\n    let row = step;\n\n    for (let i = 0; i < amount; i++) {\n      const isFreeCell = grid[column][row];\n    }\n\n    freePlaces.push({\n      column: 2,\n      row: 2,\n    });\n\n    freePlaces.push({\n      column: 4,\n      row: 4,\n    });\n\n    return freePlaces;\n  }\n\n  private placeMonstersTreasures(props: {\n    places: IComboPlace[];\n    cards: {\n      monsters: IMonsterCard[];\n      treasures: ITreasureCard[];\n    };\n  }): IComboPlace[] {\n    const { places, cards } = props;\n    const { monsters, treasures } = cards;\n\n    let monsterCounter = 0;\n    let treasureCounter = 0;\n    places.forEach((place) => {\n      const isMonster = Math.random() - 0.5 > 0;\n      const isTreasure = !isMonster;\n      if (isMonster) {\n        place.monsterCombo = {\n          monsterCard: monsters[monsterCounter],\n          treasureCards: [treasures[treasureCounter]],\n        };\n        monsterCounter++;\n        treasureCounter++;\n        return;\n      }\n\n      if (isTreasure) {\n        place.treasureCombo = {\n          treasureCards: [treasures[treasureCounter]],\n        };\n        treasureCounter++;\n        return;\n      }\n    });\n\n    return places;\n  }\n\n  /**\n   * около игрока в радиусе 3 все ячейки получают тип 'grass'\n   **/\n  private setGrassAroundPlayer(props: { column: number; row: number; terrainType: TerrainType; radius: number }) {\n    const { grid } = this;\n    const { columns, rows } = this.props;\n    const { column, row, terrainType, radius } = props;\n\n    const getNears = getSafeHexNearsInRadius({ column, row, cellRadius: radius, rows, columns, includeCenter: true });\n    getNears.forEach(({ column, row }) => {\n      grid[column][row].terrainType = terrainType;\n    });\n  }\n}\n","import { IGameCell, IGameCellFigures } from \"../../interfaces\";\n\nexport function getCellFigures(cell: IGameCell): IGameCellFigures {\n  const figures: IGameCellFigures = {};\n  cell.figures.forEach((figure) => {\n    if (figure.combos.playerCombo) {\n      figures.playerFigure = figure;\n      return;\n    }\n\n    if (figure.combos.monsterCombo) {\n      figures.monsterFigure = figure;\n      return;\n    }\n\n    if (figure.combos.treasureCombo) {\n      figures.treasureFigure = figure;\n      return;\n    }\n  });\n\n  return figures;\n}\n","import { IGameCell, TerrainType } from \"../../interfaces\";\n\n/** в будущем это может быть не константой а проверкой на способности **/\nconst blockableTerrains = new Set<TerrainType>([\"mountain\", \"water\"]);\n\nexport const isCellBadTerrain = (cell: IGameCell) => blockableTerrains.has(cell.terrainRule.type);\nexport const isCellHasFigures = (cell: IGameCell) => cell.figures.length > 0;\nexport const isCellSingleFigure = (cell: IGameCell) => cell.figures.length === 1;\n\n/** в текущей игре считаем что число фигур на 1 клетке - ограничено 1 **/\nexport const isCellTooMuchFigures = (cell: IGameCell) => cell.figures.length > 1;\n\n/** функция для расчета маршрута - огибаем непроходимые участки и другие фигуры **/\nexport function isCellPathBlock(cell: IGameCell): boolean {\n  return isCellBadTerrain(cell) || isCellHasFigures(cell);\n}\n","import { IGameCell, IGameFigure, ITerrainRule } from \"../../../interfaces\";\nimport { cssColorToInt, GameObject } from \"../../../../../common\";\nimport { isCellPathBlock } from \"../../../logic\";\n\nexport interface ISpriteGridColorHexCellData {\n  cssColor: string;\n}\ntype CellData = ISpriteGridColorHexCellData;\n\ninterface IProps {\n  scene: Phaser.Scene;\n  column: number;\n  row: number;\n  color: string;\n  strokeCssColor?: string;\n  strokeWidth?: number;\n  cellSize: number;\n  terrainRule: ITerrainRule;\n}\n\nexport class GameCell extends Phaser.GameObjects.Ellipse implements IGameCell {\n  public readonly column: number;\n  public readonly row: number;\n  public metaData: CellData;\n  public gameObject: GameObject;\n  private figureSet = new Set<IGameFigure>();\n\n  get isPathBlock(): boolean {\n    return isCellPathBlock(this);\n  }\n\n  get terrainRule() {\n    return this.props.terrainRule;\n  }\n\n  constructor(private props: IProps) {\n    super(props.scene, 0, 0, props.cellSize, props.cellSize, cssColorToInt(props.color));\n    const { column, color, row } = props;\n    const strokeCssColor = props.strokeCssColor ?? \"#2a2f2a\";\n    const strokeWidth = props.strokeWidth ?? 2;\n    this.setStrokeStyle(strokeWidth, cssColorToInt(strokeCssColor));\n    this.setSmoothness(6);\n    this.column = column;\n    this.row = row;\n    this.metaData = {\n      cssColor: color,\n    };\n\n    this.gameObject = this;\n  }\n\n  placeFigure(obj: IGameFigure) {\n    this.figureSet.add(obj);\n    const { centerX, centerY } = this.gameObject.getBounds();\n    obj.gameObject.setPosition(centerX, centerY);\n  }\n\n  removeFigure(obj: IGameFigure) {\n    this.figureSet.delete(obj);\n  }\n\n  get figures(): IGameFigure[] {\n    return Array.from(this.figureSet);\n  }\n\n  set figures(figures: IGameFigure[]) {\n    this.figureSet = new Set<IGameFigure>(figures);\n  }\n}\n","import { ColumnRow, ISpriteGridCellStrategy, PathProps, Point } from \"../interfaces\";\nimport {\n  getHexColumn,\n  getHexGridPath,\n  getHexNearsInRadius,\n  getHexRow,\n  getHexTileStepX,\n  getHexTileStepY\n} from \"../../../common/\";\n\ninterface IProps {\n  cellSize: number;\n}\n\nexport class HexStrategy implements ISpriteGridCellStrategy {\n  constructor(private props: IProps) {}\n\n  getColumnRow(x: number, y: number): ColumnRow {\n    const { cellSize: width } = this.props;\n\n    return {\n      column: getHexColumn(x, width),\n      row: getHexRow(x, y, width),\n    };\n  }\n\n  getCenterXY(column: number, row: number): Point {\n    const { cellSize: width } = this.props;\n    const stepX = getHexTileStepX(width);\n    const stepY = getHexTileStepY(width);\n    const isEvenCol = column % 2 === 1;\n    const colOffsetY = isEvenCol ? stepY / 2 : 0;\n\n    const left = column * stepX;\n    const top = colOffsetY + row * stepY;\n\n    return {\n      x: left + width / 2,\n      y: top + stepY / 2,\n    };\n  }\n\n  getNears(column: number, row: number, cellRadius: number = 1): ColumnRow[] {\n    return getHexNearsInRadius(column, row, cellRadius);\n  }\n\n  getPath(props: PathProps): ColumnRow[] {\n    return getHexGridPath(props);\n  }\n}\n","import { ColumnRow, ISpriteGridCellStrategy, PathProps, Point } from \"../interfaces\";\nimport { getColumn, getNearsColumnRows, getRow } from \"../../../common/Array2D\";\nimport { getSquareGridXYPath } from \"../../../common/Array2D/Path/getSquareGridPath\";\n\ninterface IProps {\n  cellSize: number;\n}\n\nexport class SquareStrategy implements ISpriteGridCellStrategy {\n  constructor(private props: IProps) {}\n\n  getColumnRow(x: number, y: number): ColumnRow {\n    const { cellSize: width } = this.props;\n    const height = width;\n    return {\n      column: getColumn(x, width),\n      row: getRow(y, height),\n    };\n  }\n\n  getCenterXY(column: number, row: number): Point {\n    const { cellSize } = this.props;\n\n    return {\n      x: column * cellSize + cellSize / 2,\n      y: row * cellSize + cellSize / 2,\n    };\n  }\n\n  getNears(column: number, row: number, cellRadius: number): ColumnRow[] {\n    return getNearsColumnRows(column, row, cellRadius);\n  }\n\n  getPath(props: PathProps): ColumnRow[] {\n    // проход включая диагонали\n    // return getSquareGridPath(props);\n    // проход только по вертикали или горизонтали\n    return getSquareGridXYPath(props);\n  }\n}\n","/** ghj**/\nimport { ISpriteGridCell, IFigure } from \"../interfaces\";\nimport { cssColorToInt, GameObject } from \"../../../common\";\n\nexport interface ISpriteGridColorCellData {\n  cssColor: string;\n}\n\ninterface IProps {\n  scene: Phaser.Scene;\n  column: number;\n  row: number;\n  color: string;\n  cellSize: number;\n  isPathBlock: boolean;\n}\nexport class SpriteGridColorCell extends Phaser.GameObjects.Rectangle implements ISpriteGridCell {\n  public readonly column: number;\n  public readonly row: number;\n  public metaData: ISpriteGridColorCellData;\n  private figureSet = new Set<IFigure>();\n  public gameObject: GameObject;\n  public readonly isPathBlock: boolean;\n\n  constructor({ scene, column, color, row, cellSize, isPathBlock }: IProps) {\n    super(scene, 0, 0, cellSize, cellSize, cssColorToInt(color));\n    this.setStrokeStyle(2, cssColorToInt(\"#5f675f\"));\n    this.column = column;\n    this.row = row;\n    this.metaData = {\n      cssColor: color,\n    };\n    this.gameObject = this;\n    this.isPathBlock = isPathBlock;\n  }\n\n  placeFigure(obj: IFigure) {\n    this.figureSet.add(obj);\n\n    const { centerX, centerY } = this.gameObject.getBounds();\n    obj.gameObject.setPosition(centerX, centerY);\n  }\n\n  removeFigure(obj: IFigure) {\n    this.figureSet.delete(obj);\n  }\n\n  get figures(): IFigure[] {\n    return Array.from(this.figureSet);\n  }\n\n  set figures(figures: IFigure[]) {\n    this.figureSet = new Set<IFigure>(figures);\n  }\n}\n","/** ghj**/\nimport { ISpriteGridCell, IFigure } from \"../interfaces\";\nimport { cssColorToInt, GameObject } from \"../../../common\";\n\nexport interface ISpriteGridColorHexCellData {\n  cssColor: string;\n}\ntype CellData = ISpriteGridColorHexCellData;\n\ninterface IProps {\n  scene: Phaser.Scene;\n  column: number;\n  row: number;\n  color: string;\n  cellSize: number;\n  isPathBlock: boolean;\n}\nexport class SpriteGridColorHexCell extends Phaser.GameObjects.Ellipse implements ISpriteGridCell {\n  public readonly column: number;\n  public readonly row: number;\n  public metaData: CellData;\n  public gameObject: GameObject;\n  private figureSet = new Set<IFigure>();\n\n  public readonly isPathBlock: boolean;\n\n  constructor({ scene, column, color, row, cellSize, isPathBlock }: IProps) {\n    super(scene, 0, 0, cellSize, cellSize, cssColorToInt(color));\n    this.setStrokeStyle(2, cssColorToInt(\"#5f675f\"));\n    this.setSmoothness(6);\n    this.column = column;\n    this.row = row;\n    this.isPathBlock = isPathBlock;\n    this.metaData = {\n      cssColor: color,\n    };\n\n    this.gameObject = this;\n  }\n\n  placeFigure(obj: IFigure) {\n    this.figureSet.add(obj);\n    const { centerX, centerY } = this.gameObject.getBounds();\n    obj.gameObject.setPosition(centerX, centerY);\n  }\n\n  removeFigure(obj: IFigure) {\n    this.figureSet.delete(obj);\n  }\n\n  get figures(): IFigure[] {\n    return Array.from(this.figureSet);\n  }\n\n\n  set figures(figures: IFigure[]) {\n    this.figureSet = new Set<IFigure>(figures);\n  }\n}\n","import Pointer = Phaser.Input.Pointer;\nimport { IDestroyable, ISimpleSpriteGrid, ISpriteGridCell, ISpriteGridCellStrategy, Point } from \"./interfaces\";\nimport {\n  addCameraDraggingToObject,\n  forEach2D,\n  GameObject,\n  getHexNears,\n  getRandomArrayElementWithFilter,\n  makeArray2D,\n  setLeftTop\n} from \"../../common\";\nimport { HexStrategy } from \"./strategies\";\nimport { SpriteGridColorHexCell } from \"./cells\";\n\nexport interface ISimpleSpriteGridProps {\n  scene: Phaser.Scene;\n  columns: number;\n  rows: number;\n  cellSize: number;\n  onClick: (cell: ISpriteGridCell) => void;\n}\n\nconst CLICK_EVENT = Phaser.Input.Events.GAMEOBJECT_POINTER_UP;\nconst DRAG_TIME_BEFORE_CLICK = 500;\n\n/**\n * Сетка\n * - квадратных/hex клеток фона которые могут менять цвет и отрисовку\n * - объектов по клеткам, которые могут двигаться поверх плавно\n * - условий видимости, тупо спрайты тумана для игрока\n */\nexport class SimpleHexSpriteGrid implements ISimpleSpriteGrid {\n  private destroyables: IDestroyable[] = [];\n  /** обработчик кликов и драггинга камеры **/\n  private readonly inputRect: Phaser.GameObjects.Rectangle;\n  /** клетки сетки  **/\n  private readonly cells: ISpriteGridCell[][];\n\n  private gridStrategy: ISpriteGridCellStrategy;\n\n  /** todo выносим во внешку = todo объекты на клетках **/\n  // private readonly objects: ISpriteGridFigure[];\n  /** todo видимость - туман войны **/\n\n  private isInputDragging = false;\n\n  private resetCamera: (() => void) | undefined;\n\n  /** todo выносим во внешку - логику выделения\n   * то что выделяется в данный момент - актуальный клик **/\n  // private selectedCell: ISpriteGridCell | undefined;\n\n  /** todo выносим во внешку - логику выделения\n   * выделенная ячейка с фигурами - сохраняется для построения маршрута **/\n  // private selectedFiguresCell: ISpriteGridCell | undefined;\n\n  /** todo выносим во внешку - логику маршрутов\n   * последняя клетка пути - если на ней кликают повторно запускает движение **/\n  // private selectedFiguresTargetCell: ISpriteGridCell | undefined;\n  // private isMoveAnimation: boolean = false;\n\n  getCell(column: number, row: number): ISpriteGridCell | undefined {\n    return this.cells[column]?.[row];\n  }\n\n  get columnsAmount() {\n    return this.props.columns;\n  }\n\n  get rowsAmount() {\n    return this.props.rows;\n  }\n\n  get cellSize() {\n    return this.props.cellSize;\n  }\n\n  get cells2D(){\n    return this.cells;\n  }\n\n  constructor(protected props: ISimpleSpriteGridProps) {\n    this.gridStrategy = new HexStrategy({ cellSize: props.cellSize });\n    this.inputRect = this.createInputRect();\n    this.cells = this.createCells();\n    this.bindEvents();\n\n    this.destroyables = [this.inputRect];\n    forEach2D(this.cells, (cell) => {\n      if (cell) this.destroyables.push(cell);\n    });\n  }\n\n  destroy(): void {\n    this.destroyables.forEach((d) => d.destroy());\n    this.destroyables = [];\n    this.resetCamera?.();\n  }\n\n\n  getCellCenterXY(cell: ISpriteGridCell): Point {\n    return { x: cell.gameObject.x, y: cell.gameObject.y };\n  }\n\n  getCellByXY(x: number, y: number): ISpriteGridCell | undefined {\n    /** тут могут быть ошибки на гранях, поэтому берем ячейки и ищем по близости к их центру **/\n    const badColumnRow = this.gridStrategy.getColumnRow(x, y);\n\n    const cell = this.getCell(badColumnRow.column, badColumnRow.row);\n    const cellNearsColumnRows = getHexNears(badColumnRow.column, badColumnRow.row);\n    const nears = cellNearsColumnRows.map(({ column, row }) => this.getCell(column, row));\n    const cells = [cell, ...nears];\n\n    /** Ищем ячейку чей центр ближе к точке **/\n    let bestCell = cell;\n    let bestDistance = Infinity;\n    cells.forEach((cell) => {\n      if (cell == null) return;\n      const { centerY, centerX } = cell.gameObject.getBounds();\n      const distance = (centerX - x) ** 2 + (centerY - y) ** 2; // вычитать корень не имеет смысла, идет сравнение\n      if (distance < bestDistance) {\n        bestDistance = distance;\n        bestCell = cell;\n      }\n    });\n\n    return bestCell;\n  }\n\n  /**\n   * создаем прямоугольник для перетаскивания\n   **/\n  private createInputRect(): Phaser.GameObjects.Rectangle {\n    const { scene, columns, rows, cellSize } = this.props;\n    const width = columns * cellSize;\n    const height = rows * cellSize;\n    const rect = new Phaser.GameObjects.Rectangle(scene, 0, 0, width, height).setOrigin(0);\n    setLeftTop(rect, 0, 0);\n    scene.add.existing(rect);\n\n    return rect;\n  }\n\n  /**\n   * ячейки фона, могут иметь разный цвет и размер\n   * детектят клики на себе\n   **/\n  private createCells(): ISpriteGridCell[][] {\n    const { props, gridStrategy } = this;\n    const { scene, columns, rows, cellSize } = props;\n    const cells = makeArray2D(columns, rows, (col, row) => {\n      const cell = this.createCell(col, row, cellSize);\n      const centerPoint = gridStrategy.getCenterXY(col, row);\n      setLeftTop(cell.gameObject, centerPoint.x - cellSize / 2, centerPoint.y - cellSize / 2);\n      scene.add.existing(cell.gameObject);\n      return cell;\n    });\n    return cells;\n  }\n\n  protected createCell(column: number, row: number, cellSize: number): ISpriteGridCell {\n    const { scene } = this.props;\n\n    const color = getRandomArrayElementWithFilter([\"#b47c00\", \"#4d725c\", \"#fff6d6\", \"#8c8cb6\", \"#dedede\", \"#af0000\"]);\n    const isPathBlock = color === \"#af0000\";\n\n    return new SpriteGridColorHexCell({\n      scene,\n      column,\n      row,\n      cellSize,\n      isPathBlock,\n      color,\n    });\n  }\n\n  private bindEvents() {\n    this.inputRect.setInteractive({\n      useHandCursor: true,\n      draggable: true,\n    });\n\n    this.bindClick();\n    this.bindDraggingCamera();\n    this.bindDisableClicksWhenDragging();\n  }\n\n  private bindClick() {\n    /** Я выбираю такой способ привязки эвентов\n     * чтобы не перегружать код обычных тайлов\n     * и иметь возможность разруливать настройку драггинга и кликов в одном месте\n     **/\n    this.inputRect.on(CLICK_EVENT, (pointer: Pointer, obj: GameObject) => {\n      const { worldX: x, worldY: y } = pointer;\n      if (this.isInputDragging) {\n        return;\n      }\n      const cell = this.getCellByXY(x, y);\n\n      if (cell == null) {\n        console.warn(\"critical error: cell undefined!\");\n        console.warn(`x ${x} y ${y}`);\n        return;\n      } else {\n        this.props.onClick(cell);\n      }\n    });\n  }\n\n\n\n\n  private bindDraggingCamera() {\n    const rect = this.inputRect;\n    const { width, height } = rect.getBounds();\n\n    this.resetCamera = addCameraDraggingToObject(rect, width, height);\n  }\n\n  private bindDisableClicksWhenDragging() {\n    this.inputRect.on(Phaser.Input.Events.GAMEOBJECT_DRAG_START, () => {\n      this.isInputDragging = true;\n    });\n\n    this.inputRect.on(Phaser.Input.Events.GAMEOBJECT_DRAG_END, () => {\n      this.inputRect.scene.time.addEvent({\n        delay: DRAG_TIME_BEFORE_CLICK,\n        callback: () => {\n          this.isInputDragging = false;\n        },\n      });\n    });\n  }\n}\n","import { ISimpleSpriteGridProps, SimpleHexSpriteGrid } from \"../../../SpriteGrid/SimpleHexSpriteGrid\";\nimport { ISpriteGridCell } from \"../../../SpriteGrid/interfaces\";\nimport { ITerrainCell, ITerrainRulesMap, TerrainColors, TerrainType } from \"../../interfaces\";\nimport { GameCell } from \"../cells\";\n\nexport interface IGameGridProps extends ISimpleSpriteGridProps {\n  scene: Phaser.Scene;\n  columns: number;\n  rows: number;\n  cellSize: number;\n  onClick: (cell: ISpriteGridCell) => void;\n  terrains: ITerrainCell[][];\n  terrainRulesMap: ITerrainRulesMap;\n  terrainColors: TerrainColors;\n}\n\nexport class GameGrid extends SimpleHexSpriteGrid {\n  constructor(protected props: IGameGridProps) {\n    super(props);\n  }\n\n  protected createCell(column: number, row: number, cellSize: number) {\n    const { scene, terrainRulesMap, terrains, terrainColors } = this.props;\n\n    if (terrains[column][row]) {\n      const { terrainType } = terrains[column][row];\n      const terrainRule = terrainRulesMap[terrainType];\n      const terrainColor = terrainColors[terrainType];\n\n      return new GameCell({\n        scene,\n        column,\n        row,\n        cellSize,\n        color: terrainColor,\n        terrainRule,\n      }) as unknown as ISpriteGridCell;\n    } else {\n      console.warn(\"UNDEFINED CELL in terrains\", column, row);\n\n      const terrainType: TerrainType = \"grass\";\n      const terrainRule = terrainRulesMap[terrainType];\n      const color = terrainColors[terrainType];\n\n      return new GameCell({\n        scene,\n        column,\n        row,\n        cellSize,\n        color,\n        terrainRule,\n      }) as unknown as ISpriteGridCell;\n    }\n  }\n}\n","/**\n * Преобразование карты правил в массив правил\n */\nimport { CardType, FigureType, ITerrainRule, ITerrainRulesMap } from \"./interfaces\";\n\nexport function getTerrainRulesArray(terrainRulesMap: ITerrainRulesMap): ITerrainRule[] {\n  return Object.values(terrainRulesMap);\n}\n\n/**\n * Преобразование массива правил в карту правил\n */\nexport function getTerrainRulesMap(terrainRules: ITerrainRule[]): ITerrainRulesMap {\n  return terrainRules.reduce((map, rule) => {\n    map[rule.type] = rule;\n    return map;\n  }, {} as ITerrainRulesMap);\n}\n\nexport function sortByCardTypes<T extends { type: CardType }>(sortables: T[]): Record<CardType, T[]> {\n  const result: Record<CardType, T[]> = {\n    player: [],\n    monster: [],\n    treasure: [],\n  };\n\n  sortables.forEach((object) => {\n    result[object.type].push(object);\n  });\n\n  return result;\n}\n","import { Align, cssColorToInt, GameObject } from \"../../../../../common\";\nimport { ICombos, IGameFigure, IMonsterCombo, ITreasureCombo } from \"../../../interfaces\";\n\ninterface IProps {\n  scene: Phaser.Scene;\n  cellSize: number;\n  monsterCombo?: IMonsterCombo;\n  treasureCombo?: ITreasureCombo;\n}\n\n/** Скрытая до поры до времени карта  **/\nexport class DungeonFigure implements IGameFigure {\n  private originalSize = 128;\n  gameObject: GameObject;\n  isMovableWhenSelected = false;\n  combos: ICombos;\n\n  constructor(private props: IProps) {\n    const { monsterCombo, treasureCombo } = props;\n    this.combos = {};\n    if (monsterCombo) {\n      this.combos.monsterCombo = monsterCombo;\n    } else {\n      this.combos.treasureCombo = treasureCombo;\n    }\n    this.gameObject = this.createObject();\n    this.restoreScale();\n  }\n\n  private createObject(): GameObject {\n    const { scene } = this.props;\n    const container = new Phaser.GameObjects.Container(scene);\n    const object = new Phaser.GameObjects.Ellipse(\n      scene,\n      0,\n      0,\n      this.originalSize,\n      this.originalSize,\n      cssColorToInt(\"#2e282f\")\n    );\n\n    const text = new Phaser.GameObjects.Text(scene, 0, 0, \"?\", {\n      fontSize: \"72px\",\n    });\n    new Align(object).center(text);\n\n    container.add([object, text]);\n    return container;\n  }\n\n  public restoreScale(gameObject: GameObject = this.gameObject) {\n    const { cellSize } = this.props;\n    const { width, height } = gameObject.getBounds();\n    const maxSize = Math.max(width, height);\n    const scale = (cellSize / maxSize) * 0.75;\n    gameObject.setScale(scale);\n  }\n}\n","import { IGameState } from \"../../interfaces\";\n\nexport const defaultGameState: IGameState = {\n  finishMapPortal: {\n    isOpened: false,\n    column: 0,\n    row: 0,\n    price: Infinity\n  },\n  treasures: {},\n  monsters: {},\n  player: {\n    column: 0, row: 0,\n    health: 3,\n    playerCard: {\n      type: \"player\",\n      id: -1,\n      title: \"Daniel Default\",\n      description: \"Default Hero\",\n      quote: \"Nobody know my, everybody uses\",\n      attack: 1,\n      health: 3\n    },\n    inventory: [],\n    statistics: {\n      monsters: {\n        killed: [],\n        killedByMonster: undefined\n      },\n      treasures: {\n        grabbed: []\n      }\n    }\n  },\n  cells: []\n};\n","import { IGameState, IMonsterCard, IMonsterState, ITreasureCard, ITreasureState } from \"../../../interfaces\";\n\nexport const getTreasuresWithoutMonsters = (state: IGameState): ITreasureState[] => Object.values(state.treasures);\nexport const getMonsters = (state: IGameState): IMonsterState[] => Object.values(state.monsters);\nexport const getCollectedMonsters = (state: IGameState): number => state.player.inventory.length;\n\n\n/** Экран результата показывает 3 звездочки\n - одна за то что прошел в портал (то есть собрал portalTreasurePrice )\n - две за то что собрал\n portalTreasurePrice + (treasuresTotal-portalTreasurePrice)/2 сокровищ\n - три за то что собрал treasuresTotal сокровищ\n - заодно и за то что убил всех чудовищ\n **/\nexport const getRewardStarAmount = (state: IGameState): number => {\n  const collectedTreasures = getCollectedMonsters(state);\n  const totalTreasures = getTreasuresWithoutMonsters(state).length;\n  const portalPrice = state.finishMapPortal.price;\n  if (collectedTreasures === totalTreasures) return 3;\n  if (collectedTreasures >= portalPrice + (totalTreasures - portalPrice) / 2) return 2;\n  if (collectedTreasures === portalPrice) return 1;\n  return 0;\n};\n\n\nexport const isEndMapPortalCanBeOpened = (state: IGameState): boolean => {\n  const collectedTreasures = getCollectedMonsters(state);\n  const portalPrice = state.finishMapPortal.price;\n  return collectedTreasures >= portalPrice;\n};\n\n\n/** при сборе любого сокровища, мутирует стейт **/\nexport const collectTreasure = (treasureCard: ITreasureCard, state: IGameState) => {\n  const treasureState = state.treasures[treasureCard.id];\n  if (treasureState == null) {\n    console.warn(\"no state for card\", treasureCard);\n    return;\n  }\n  const playerState = state.player;\n\n  treasureState.isCollected = true;\n\n  playerState.inventory.push(treasureCard);\n  playerState.statistics.treasures.grabbed.push(treasureCard);\n};\n\n/** атака игрока вычисляется как сумма атак артефактов **/\nexport const getPlayerAttack = (state: IGameState): number => {\n  return state.player.inventory\n    .reduce((acc, card) => card.bonuses.attack != null ? acc + card.bonuses.attack : 0, 0);\n};\n\nexport const getPlayerHealth = (state: IGameState): number => {\n  return state.player.inventory\n    .reduce((acc, card) => card.bonuses.health != null ? acc + card.bonuses.health : 0, 0);\n};\n\n/** проверка боя, у кого атака сильнее тот и выигрывает **/\nexport const isPlayerWin = (monsterCard: IMonsterCard, state: IGameState): boolean => {\n  const monsterState = state.monsters[monsterCard.id];\n  if (monsterState == null) {\n    console.warn(\"no state for card\", monsterCard);\n    return false;\n  }\n\n  return getPlayerAttack(state) > monsterState.card.attack;\n};\n\n/** при победе над монстром, мутирует стейт **/\nexport const killMonster = (monsterCard: IMonsterCard, state: IGameState) => {\n  const monsterState = state.monsters[monsterCard.id];\n  if (monsterState == null) {\n    console.warn(\"no state for card\", monsterCard);\n    return;\n  }\n  const playerState = state.player;\n\n  monsterState.isAlive = false;\n\n  playerState.statistics.monsters.killed.push(monsterCard);\n\n  monsterState.treasures.forEach(treasureCard => collectTreasure(treasureCard, state));\n};\n\n/** при проигрыше над монстром, мутирует стейт **/\nexport const loseToMonster = (monsterCard: IMonsterCard, state: IGameState) => {\n  const monsterState = state.monsters[monsterCard.id];\n  if (monsterState == null) {\n    console.warn(\"no state for card\", monsterCard);\n    return;\n  }\n\n  state.player.health--;\n};\n\n/** проверка геймувера смерти **/\nexport const isPlayerDead = (state: IGameState): boolean => {\n  return state.player.health <= 0;\n};\n","import { copyDeep, forEach2D } from \"../../../../../common\";\nimport { CardId, IConfig, IGameState, IMonsterState, ITreasureState } from \"../../../interfaces\";\nimport { defaultGameState } from \"../defaultState\";\nimport { SimpleMonoHexMapGenerator } from \"../../mapGenerators\";\n\nexport const initGameState = (gameConfig: IConfig): IGameState => {\n  const { playerCard, positions } = gameConfig;\n\n  const treasures: Record<CardId, ITreasureState> = {};\n  const monsters: Record<CardId, IMonsterState> = {};\n\n  const cells = new SimpleMonoHexMapGenerator(gameConfig).run();\n\n  forEach2D(cells, (cell, column, row) => {\n    const { treasureCombo, monsterCombo } = cell;\n\n    if (treasureCombo) {\n      treasureCombo.treasureCards.forEach(card => {\n        treasures[card.id] = {\n          card,\n          column,\n          row,\n          isCollected: false,\n          isOpened: treasureCombo.isOpened === true\n        };\n      });\n    }\n\n    if (monsterCombo) {\n      monsters[monsterCombo.monsterCard.id] = {\n        card: monsterCombo.monsterCard,\n        treasures: monsterCombo.treasureCards,\n        column, row,\n        isOpened: monsterCombo.isOpened === true,\n        isAlive: true\n      };\n    }\n  });\n\n  const state: IGameState = {\n    player: {\n      ...defaultGameState.player,\n      playerCard,\n      column: positions.player.column,\n      row: positions.player.row\n    },\n    treasures,\n    monsters,\n    cells,\n    finishMapPortal: defaultGameState.finishMapPortal\n  };\n\n  return copyDeep(state);\n};\n","import {\n  CellChecker,\n  ISafeComponent,\n  ISimpleGridPathMaker,\n  ISimpleGridSelector,\n  ISpriteGridCell\n} from \"../SpriteGrid/interfaces\";\nimport { treasuresAndMonstersConfig } from \"./config\";\nimport { Locale } from \"./data\";\nimport { SimpleGridPathMaker } from \"../SpriteGrid/path\";\nimport { SimpleHexSelector } from \"../SpriteGrid/selectors\";\nimport { GameCell, GameGrid, MonsterFigure, PlayerFigure, TreasureFigure } from \"./components\";\nimport { getCellFigures, isCellBadTerrain, isCellHasFigures, SimpleMonoHexMapGenerator } from \"./logic\";\nimport {\n  IConfig,\n  IGameCell,\n  IGameFigure,\n  IGameState,\n  IMapStartCell,\n  IMonsterCombo,\n  IPlayerCardCombo,\n  ITerrainRulesMap, ITreasureCard,\n  ITreasureCombo, IUiCard, IUiCardPositioned\n} from \"./interfaces\";\nimport { getTerrainRulesMap } from \"./adapters\";\nimport { copyDeep, forEach2D } from \"../../common\";\nimport { DungeonFigure } from \"./components/figures/DungeonFigure\";\nimport {\n  collectTreasure, getPlayerAttack,\n  initGameState,\n  isEndMapPortalCanBeOpened,\n  isPlayerDead,\n  isPlayerWin,\n  killMonster,\n  loseToMonster\n} from \"./logic/state\";\n\ninterface IProps {\n  scene: Phaser.Scene;\n}\n\nexport class TreasuresAndMonsters implements ISafeComponent {\n  private readonly config: IConfig;\n  private readonly grid: GameGrid;\n  private readonly figures: IGameFigure[];\n  private readonly selector: ISimpleGridSelector;\n  private readonly pathMaker: ISimpleGridPathMaker;\n  private readonly terrainRulesMap: ITerrainRulesMap;\n\n  private gameState: IGameState;\n\n  constructor(private props: IProps) {\n    this.config = copyDeep(treasuresAndMonstersConfig);\n    const { treasureCards, monsterCards, playerCard, cellSize, columns, rows, positions } = this.config;\n    /** idea T&M2 -   выбор игрока в начале игры? **/\n\n    this.gameState = initGameState(this.config);\n\n    // this.mapGenerator = new SimpleMonoHexMapGenerator(this.config);\n    this.terrainRulesMap = getTerrainRulesMap(this.config.terrainRules);\n    console.log(`Start of ${Locale.text(\"game.name\")} game!`);\n    console.log(\"cardsOfTreasures\", treasureCards.length);\n    console.log(\"cardsOfMonsters\", monsterCards.length);\n\n    // const startCells = this.mapGenerator.run();\n\n    const { scene } = this.props;\n\n    this.grid = new GameGrid({\n      scene,\n      columns,\n      rows,\n      cellSize,\n      onClick: (cell) => this.onCellClick(cell as unknown as IGameCell),\n      terrains: this.gameState.cells,\n      terrainRulesMap: this.terrainRulesMap,\n      terrainColors: this.config.terrainColors\n    });\n\n    this.pathMaker = new SimpleGridPathMaker({\n      scene,\n      cellMoveDurationMs: 75,\n      pathColor: this.config.path.pathColor,\n      cells2D: this.grid.cells2D,\n      columnMax: this.grid.columnsAmount - 1,\n      rowMax: this.grid.rowsAmount - 1\n    });\n\n    const cardFigures = this.addFigures(this.gameState.cells);\n    console.log(\"cardFigures\", cardFigures.length);\n    console.log(\"cardFigures\", cardFigures);\n    console.log(\"cardFigures monsters\", cardFigures.filter((c) => c.combos.monsterCombo).length);\n    console.log(\"cardFigures treasures\", cardFigures.filter((c) => c.combos.treasureCombo).length);\n\n    this.figures = [...cardFigures];\n\n    this.selector = new SimpleHexSelector({\n      scene,\n      cellSize,\n      selectorColor: this.config.selector.selectorColor\n    });\n\n    this.initLogic();\n  }\n\n  destroy(): void {\n    this.grid.destroy();\n    this.figures.forEach((d) => d.gameObject.destroy());\n    this.selector.destroy();\n    this.pathMaker.destroy();\n  }\n\n  private initLogic() {\n    this.setPlayerCellAsRouteStart();\n  }\n\n  private addFigures(startCells: IMapStartCell[][]): IGameFigure[] {\n    const figures: IGameFigure[] = [];\n    const { scene } = this.props;\n\n    forEach2D(startCells, (startCell, column, row) => {\n      if (startCell.playerCombo == null && startCell.treasureCombo == null && startCell.monsterCombo == null) {\n        return;\n      }\n\n      const { playerCombo, monsterCombo, treasureCombo } = startCell;\n      const figure = this.createFigureForCombo(playerCombo, monsterCombo, treasureCombo);\n      if (figure == null) return;\n      const cell = this.grid.getCell(column, row);\n      if (cell == null) return;\n      cell.placeFigure(figure);\n      scene.add.existing(figure.gameObject);\n      figures.push(figure);\n    });\n\n    return figures;\n  }\n\n  onCellClick(cell: IGameCell) {\n    this.selector.switch(cell as unknown as ISpriteGridCell);\n\n    if (this.pathMaker.isMovingAnimation) {\n      console.warn(\"input blocked by pathMaker isMoveAnimation\");\n      return;\n    }\n    const { figures } = cell;\n    // this.showCellInfo(cell);\n    this.buildPathOrGo(cell);\n\n    /** на 1 клетке - 1 фигура пока поэтому просто выбираем **/\n    const { player, monster, treasure, isVoid } = sortFigures(figures);\n    if (isVoid) {\n      this.onVoidCellClick(cell);\n      return;\n    }\n\n    if (player) {\n      const [figure, combo] = player;\n      this.onPlayerClick(cell, figure, combo);\n      return;\n    }\n\n    if (monster) {\n      const [figure, combo] = monster;\n      this.onMonsterClick(cell, figure, combo);\n      return;\n    }\n\n    if (treasure) {\n      const [figure, combo] = treasure;\n      this.onTreasureClick(cell, figure, combo);\n      return;\n    }\n  }\n\n  /** клик на игроке\n   * - должен показать инфо - это ты\n   * - ставить стартов\n   **/\n  private onPlayerClick(cell: IGameCell, figure: IGameFigure, combo: IPlayerCardCombo) {\n    /** клик на игроке - перезаряжает путь **/\n    this.pathMaker.setStart(cell as unknown as ISpriteGridCell);\n\n    console.log(\"onPlayerClick\", cell, combo, figure);\n  }\n\n  /** клик на пустой клетке\n   * - просто делаем путь\n   **/\n  private onVoidCellClick(cell: IGameCell) {\n    const { terrainRule } = cell;\n    const { type, speedK } = terrainRule;\n    this.showCardInfo({\n      title: `${type}`,\n      description: `Просто пустой кусок пространства, заполенный ${type}`\n    });\n    this.showPlayerCard();\n  }\n\n  /** клик на клетке с монстром\n   * - делаем путь до монстра\n   * - показать инфо\n   *    - монстр?\n   *    - подземелье?\n   **/\n  private onMonsterClick(cell: IGameCell, figure: IGameFigure, combo: IMonsterCombo) {\n\n    const { isOpened, monsterCard } = combo;\n    if (isOpened) {\n      const about = isPlayerWin(monsterCard, this.gameState) ? \"Вы сильнее монстра\" : \"Монстр сильнее вас\";\n      this.showCardInfo({\n        title: `Монстр ${monsterCard.title}`,\n        description: `Атака ${monsterCard.attack} - ${about}`\n      });\n    } else {\n      this.showDungeonInfo();\n    }\n\n    this.showPlayerCard();\n\n    /** todo info **/\n  }\n\n  /** клик на клетке с сокровищем\n   * - делаем путь до сокровища\n   * - показать инфо\n   *    - сокровище?\n   *    - подземелье?\n   **/\n  private onTreasureClick(cell: IGameCell, figure: IGameFigure, combo: ITreasureCombo) {\n\n    const { isOpened, treasureCards } = combo;\n    console.log(\"onTreasureClick\", cell, combo, figure);\n    const card = treasureCards[0];\n    if (isOpened) {\n      this.showCardInfo({\n        title: `Сокровище ${card.title}`,\n        description: `Бонус к атаке ${card.bonuses.attack ?? 0}, бонус к здоровью ${card.bonuses.health ?? 0}`\n      });\n    } else {\n      this.showDungeonInfo();\n    }\n    this.showPlayerCard();\n  }\n\n  private buildPathOrGo(cellFinishCandidate: IGameCell) {\n    console.log(\"buildPathOrGo \", cellFinishCandidate);\n\n    /** далее все было сделано без учета фигур - надо переделать **/\n    const startCell = this.pathMaker.startCell as unknown as GameCell;\n    const finishCell = this.pathMaker.finishCell as unknown as GameCell;\n\n    /** есть клетка с выделенными фигурами\n     * клик на пустой клетке строит путь от фигур до этой клетки\n     * если она проходима\n     * если в клетке финиша есть фигура - все равно строим до этой фигуры\n     **/\n    const isCanBeTarget = !isCellBadTerrain(cellFinishCandidate);\n    if (startCell && isCanBeTarget) {\n      console.log(\"run draw path\");\n      const finishCell = cellFinishCandidate;\n\n\n      const hasMonster = getCellFigures(finishCell).monsterFigure != null;\n      const cellChecker: CellChecker = (column, row) => {\n        const cell = this.grid.getCell(column, row) as unknown as IGameCell;\n        if (cell == null) return false;\n\n        const isTarget = cell === finishCell;\n        const isBadTerrain = isCellBadTerrain(cell);\n        const isCellFigures = isCellHasFigures(cell);\n        /**\n         * на плохую территорию не можем ходить\n         * если не таргет - то огибаем монстров и другие фигуры\n         * **/\n        return !isBadTerrain && (isTarget || !isCellFigures);\n      };\n\n      this.pathMaker.setFinish(finishCell as unknown as ISpriteGridCell);\n      this.pathMaker.clearPath();\n      this.pathMaker.drawPath(cellChecker, hasMonster);\n    }\n\n    /** клик на клетке, которая уже была выделена\n     * как последняя точка пути\n     * запускает движение\n     * блокирует ввод\n     **/\n    if (startCell && finishCell && cellFinishCandidate === finishCell) {\n      console.log(\"run move animation!\");\n      const gameFigure = finishCell.figures[0];\n      const onComplete = () => {\n        console.log(\"move complete in game\");\n\n        this.gameState.player.column = finishCell.column;\n        this.gameState.player.row = finishCell.row;\n        this.setPlayerCellAsRouteStart();\n\n        if (gameFigure) {\n          const { monsterCombo, treasureCombo } = gameFigure.combos;\n          if (monsterCombo) this.onMonsterFight(monsterCombo);\n          if (treasureCombo) {\n            this.onTreasureGrab(treasureCombo, gameFigure)\n              .catch(console.warn);\n          }\n        }\n\n      };\n\n      this.pathMaker.moveFigures(onComplete);\n      return;\n    }\n  }\n\n  // todo для игрока надо поставить на него стартовую точку (pathMaker)\n  private createFigureForCombo(\n    playerCombo: IPlayerCardCombo | undefined,\n    monsterCombo: IMonsterCombo | undefined,\n    treasureCombo: ITreasureCombo | undefined\n  ) {\n    const { scene } = this.props;\n    const { cellSize } = this.config;\n\n    /** todo TM - 2\n\n     Данжен-компонент первичный\n     - показывает монстра или сокровища не вскрытого\n\n     **/\n\n    if (playerCombo) {\n      const { playerCard, treasureCards } = playerCombo;\n      return new PlayerFigure({\n        scene,\n        cellSize,\n        playerCard,\n        treasureCards\n      });\n    }\n\n    if (monsterCombo) {\n      if (monsterCombo.isOpened) {\n        return new MonsterFigure({\n          scene,\n          cellSize,\n          monsterCombo\n        });\n      }\n\n      return new DungeonFigure({\n        scene,\n        cellSize,\n        monsterCombo\n      });\n    }\n\n    if (treasureCombo) {\n      if (treasureCombo.isOpened) {\n        return new TreasureFigure({\n          scene,\n          cellSize,\n          treasureCombo\n        });\n      }\n      return new DungeonFigure({\n        scene,\n        cellSize,\n        treasureCombo\n      });\n    }\n  }\n\n  private onMonsterFight(monsterCombo: IMonsterCombo) {\n    const { monsterCard } = monsterCombo;\n    const { gameState } = this;\n    console.log(\"TO DO FIGHT WITH \", monsterCombo.monsterCard.title);\n    if (isPlayerWin(monsterCard, gameState)) {\n      killMonster(monsterCard, gameState);\n      console.log(\"You win!\");\n    } else {\n      loseToMonster(monsterCard, gameState);\n      console.log(\"You loose!\");\n      if (isPlayerDead(gameState)) {\n        console.log(\"GAME OVER - YOU ARE DEAD\");\n      }\n    }\n  }\n\n  private async onTreasureGrab(treasureCombo: ITreasureCombo, gameFigure: IGameFigure) {\n    console.log(\"TO DO grab TREASURE WITH \", treasureCombo.treasureCards);\n    const { treasureCards } = treasureCombo;\n    const { gameState } = this;\n    treasureCards.forEach(card => collectTreasure(card, gameState));\n    await this.showTreasureGrabAnimation(treasureCards);\n\n    console.log(\"TO DO  КАК СИНХРОНИЗИРОВАТЬ СОСТОЯНИЕ?\");\n    console.log(\"TO DO  1. добывать данные о фигурах из gameState через column, row\");\n    console.log(\"TO DO  1.1 убрать инфу о фигурах из cell\");\n    gameFigure.gameObject?.destroy();\n\n    this.showPlayerCard();\n    if (isEndMapPortalCanBeOpened(gameState)) {\n      console.log(\"TO DO - OPEN END MAP PORTAL\");\n    }\n  }\n\n  /** только ячейку ставит **/\n  private setPlayerCellAsRouteStart() {\n    const { column, row } = this.gameState.player;\n    const cell = this.grid.getCell(column, row);\n\n    // todo keep Player State in GameState\n    this.pathMaker.setStart(cell as unknown as ISpriteGridCell);\n  }\n\n  private showDungeonInfo() {\n    this.showCardInfo({\n      title: `Подземелье`,\n      description: `В нем точно есть сокровища и могут прятаться монстры`\n    });\n  }\n\n  private showCellInfo(cell: IGameCell) {\n    const { row, column, terrainRule, figures } = cell;\n    console.log(\"cell terrain \", terrainRule.type, { ...terrainRule });\n    console.log(\"cell figures\", figures);\n    console.log(\"click on cell\", column, row, cell);\n  }\n\n  private showPlayerCard() {\n    const { playerCard, health, inventory } = this.gameState.player;\n    const attack = getPlayerAttack(this.gameState);\n    this.showCardInfo({\n      title: `Вы ${playerCard.title}`,\n      description: `Здоровье ${health}, Атака ${attack} `\n    });\n  }\n\n\n  private showCardInfo({ title, description, imageKey, quote }: IUiCardPositioned) {\n    console.log(\"================\");\n    console.log(title);\n    console.log(description);\n    if (quote) console.log(quote);\n    console.log(\"================\");\n  }\n\n\n  /*********\n   * анимации\n   */\n  private async showTreasureGrabAnimation(treasureCards: ITreasureCard[]) {\n    console.log(\"You collect treasures \", ...treasureCards);\n  }\n}\n\nfunction sortFigures(figures: IGameFigure[]) {\n  let player: [IGameFigure, IPlayerCardCombo] | undefined;\n  let monster: [IGameFigure, IMonsterCombo] | undefined;\n  let treasure: [IGameFigure, ITreasureCombo] | undefined;\n  let isVoid = true;\n\n  figures.forEach((figure) => {\n    const { playerCombo, monsterCombo, treasureCombo } = figure.combos;\n\n    if (playerCombo) {\n      player = [figure, playerCombo];\n      isVoid = false;\n      return;\n    }\n\n    if (monsterCombo) {\n      monster = [figure, monsterCombo];\n      isVoid = false;\n      return;\n    }\n\n    if (treasureCombo) {\n      treasure = [figure, treasureCombo];\n      isVoid = false;\n      return;\n    }\n  });\n\n  return {\n    player,\n    monster,\n    treasure,\n    isVoid\n  };\n}\n","import { IStory } from \"../../../storybook/interfaces\";\nimport { TreasuresAndMonsters } from \"./TreasuresAndMonsters\";\n\nexport const treasuresAndMonstersStory: IStory = {\n  title: \"Treasures And Monsters\",\n  run: async (scene) => {\n\n    const game = new TreasuresAndMonsters({\n      scene\n    });\n    console.log('TreasuresAndMonsters created');\n    return () => {\n      game.destroy();\n      console.log('TreasuresAndMonsters destroyed');\n    };\n  }\n};\n","import { IStoryListItem, storyTitle } from \"./interfaces\";\nimport { testButtonStory, testButtonStory2 } from \"../src/components/Test/TestButton.story\";\nimport { treasuresAndMonstersStory } from \"../src/components/TreasuresAndMonsters/TreasuresAndMonsters.story\";\n\nexport const stories: IStoryListItem[] = Array.from(\n  new Set<IStoryListItem>([\n    storyTitle(\"Simple Games\"),\n    treasuresAndMonstersStory,\n    storyTitle(\"Test Components\"),\n    testButtonStory,\n    testButtonStory2\n  ])\n);\n","export class MainScene extends Phaser.Scene {\n  constructor() {\n    super(MainScene.name);\n  }\n\n  preload() {\n    this.load.image(\"sky\", \"./assets/images/space3.png\");\n    this.load.image(\"logo\", \"./assets/images/phaser3-logo.png\");\n    this.load.image(\"red\", \"./assets/images/red.png\");\n  }\n\n  create() {\n    this.add.image(400, 300, \"sky\");\n\n    const particles = this.add.particles(0, 0, \"red\", {\n      speed: 100,\n      scale: { start: 1, end: 0 },\n      blendMode: \"ADD\"\n    });\n\n    const logo = this.physics.add.image(400, 100, \"logo\");\n\n    logo.setVelocity(100, 200);\n    logo.setBounce(1, 1);\n    logo.setCollideWorldBounds(true);\n\n    particles.startFollow(logo);\n\n    console.log('Game started');\n  }\n}\n","import { MainScene } from \"./scenes/MainScene\";\n\nconst scaleConfig: Phaser.Types.Core.ScaleConfig = {\n  mode: Phaser.Scale.FIT,\n  autoCenter: Phaser.Scale.CENTER_BOTH,\n  parent: \"game\",\n  width: 960,\n  height: 640\n};\n\nexport interface IPhaserConfig extends Phaser.Types.Core.GameConfig {\n  scale: Phaser.Types.Core.ScaleConfig;\n}\n\nexport const phaserGameConfig: IPhaserConfig = {\n  width: 800,\n  height: 600,\n  physics: {\n    default: \"arcade\",\n    arcade: {\n      gravity: { x: 0, y: 200 }\n    }\n  },\n  type: Phaser.AUTO,\n  backgroundColor: \"#4488aa\",\n  transparent: true,\n  scale: scaleConfig,\n  scene: [MainScene]\n};\n","import { StoryScene } from \"./StoryScene\";\nimport { stories } from \"./stories\";\nimport { IStory, IStoryListItem } from \"./interfaces\";\nimport { IPhaserConfig, phaserGameConfig } from \"../src/config\";\n\n\nconst config: IPhaserConfig = {\n  ...phaserGameConfig,\n  scale: {\n    ...phaserGameConfig.scale,\n    mode: Phaser.Scale.NONE,\n    autoCenter: Phaser.Scale.NONE,\n  },\n  scene: [new StoryScene(StoryScene.name)],\n};\n\nconst game = new Phaser.Game(config);\n\nconst storiesEl = document.getElementById(\"stories\");\nif (storiesEl == null) throw \"no sidebar\";\nconst titleEl = document.getElementById(\"gameTitle\");\n\nlet prevStoryClose: () => void | undefined;\nconst runInGame = async (story: IStory, game: Phaser.Game) => {\n  prevStoryClose?.();\n  titleEl!.innerHTML = story.title;\n  const scene = game.scene.getScene(StoryScene.name);\n  prevStoryClose = await story.run(scene);\n};\n\nlet storiesIndex = 0;\nstories.forEach((story) => {\n  if (story.run != null) {\n    addStory(story as IStory, storiesEl, storiesIndex == 0);\n    storiesIndex++;\n  } else if (story.template === \"titleDelimiter\") {\n    addStoryDelimiter(story, storiesEl);\n  }\n});\n\nfunction addStory(story: IStory, storiesEl: HTMLElement, isStart: boolean) {\n  const el = addElement({\n    storyTag: \"button\",\n    innerHtml: `${story.title}`,\n    className: \"story\",\n    parent: storiesEl,\n  });\n  el.addEventListener(\"click\", () => runInGame(story, game).catch(console.warn));\n\n  if (isStart) {\n    setTimeout(() => {\n      el.focus();\n      runInGame(story, game).catch(console.warn);\n    }, 500);\n  }\n}\n\nfunction addStoryDelimiter(story: IStoryListItem, storiesEl: HTMLElement) {\n  return addElement({\n    storyTag: \"div\",\n    innerHtml: `${story.title}`,\n    className: \"storyDelimiter\",\n    parent: storiesEl,\n  });\n}\n\ninterface IAddProps {\n  storyTag: string;\n  innerHtml: string;\n  className: string;\n  parent: HTMLElement;\n}\nfunction addElement({ storyTag, className, innerHtml, parent }: IAddProps) {\n  const el = document.createElement(storyTag);\n  el.innerHTML = innerHtml;\n  el.classList.add(className);\n  parent.append(el);\n  return el;\n}\n"],"names":["delay","ms","resolve","loader","props","fileConfig","e","svgSrc","svg","width","height","scale","resize","xml","svgXML","viewBox","hasViewBox","svgWidth","svgHeight","viewBoxParts","blob","_this","retry","isInlineBitmap","altUrl","tmpImage","InlineSvgImageFile","SuperSvgXHRLoaderFabric","file","globalXHRSettings","responseType","config","MergeXHRSettings","xhr","key","global","local","output","setting","ContentDetector","isSvg","contentType","isPng","isJpeg","isContent","typeMarker","xhrLoader","response","registerSuperSvgLoader","url","svgConfig","xhrSettings","i","task","event","scene","PreloadTask","PreloadTaskPlugin","pluginManager","asyncPhaserLoad","onProgress","isLogging","load","progressCallback","progress","phaserLoad","zoom","images","fonts","sounds","sprites","promises","jsons","textures","sound","cache","frameConfig","WebFont","fontLoad","aa","a","b","c","ba","d","p","q","ca","da","t","u","v","w","f","g","y","ea","z","m","A","B","C","D","E","F","G","fa","H","I","J","ga","ha","ia","K","L","ja","ka","M","N","O","P","Q","R","S","T","U","la","V","ma","W","X","na","oa","pa","qa","h","l","k","n","r","x","xa","ra","sa","ta","ua","va","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Y","Z","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","getter","exports","definition","obj","prop","StoryScene","storyTitle","title","TestButton","text","textObject","testButtonStory","container","testButtonStory2","type","playerCards","card","typecheck","monsterCards","treasureCards","GameTexts","Locale","basicConfig","treasuresAndMonstersConfig","getRandomArrayElementWithFilter","arr","filter","candidate","count","array","shuffleArrayBySort","j","repeatArray","length","result","index","CellMapCollider","cells","objectsMap","acc","objects","place","callback","startColumn","endColumn","startRow","endRow","row","column","cell","object","cellObjects","newLeft","newTop","id","collisionObject","next","xOrY","isFree","mapOrNewMap","columns","rows","col","cellSize","getColumnCenterX","getRowCenterY","getColumns","getRows","cols","cellGenerator","_","columnIndex","rowIndex","errorMessages","Array2DMarker","getHexTileStepX","getHexTileStepY","getHexColumn","stepX","getHexRow","stepY","colOffsetY","neighbors","directions","direction","neighborColumn","neighborRow","axialToCube","cubeToAxial","cellRadius","neighborsInRadius","centerX","centerY","centerZ","dx","dy","dz","neighborX","neighborY","neighborZ","neighbor","getSafeHexNearsInRadius","includeCenter","isSafe","columnRow","HexGridMarker","value","isNew","isMarked","radius","getSquareGridPath","isAllWalkable","from","to","isWalkable","columnMin","columnMax","rowMin","rowMax","maxChecks","getNears","openSet","closedSet","startNode","checkedCells","heuristicDistance","currentNode","cost","getPathFromNode","neighborKey","neighborNode","existingNeighbor","path","current","target","getHexGridPath","AssetManager","getUrlArray","sheet","assetManager","cssColor","CanvasImage","draw","textureKey","canvasTexture","DefaultNinePatchConfig","NinePatch","destCommonWidth","srcFrame","srcCommonWidth","left","right","destCommonHeight","srcCommonHeight","top","bottom","srcTexture","offsetY","rowHeight","offsetX","colWidth","frameName","nextImage","texture","frame","scaleX","scaleY","TextFloater","textStyle","origin","textNode","duration","velocityX","velocityY","anchorItem","item","oX","oY","aB","iB","dX","dY","items","formula","anchor","Align","defaultSettings","TextRectangleComponent","fontSize","style","textPaddingX","textPaddingY","textBounds","rectFillColor","rectStrokeColor","rectangle","PhaserDraw","points","graphics","point","copyDeep","KeyCodes","defaultPhaserScaleConfig","defaultPhaserConfig","defaulTextStyle","defaultMoveKeys","Scenes","PhaserSugarInternal","VarSceneCurrentKey","useVar","propName","setVar","getVar","resetVar","setCurrentScene","resetCurrentScene","withScene","useWorldScene","useUiScene","useGame","game","phaserStyle","addPx","add","niceStyle","sprite","tileSprite","rect","options","circle","currentAnchor","getAnchorBounds","anchorBounds","bounds","IPointRectangle","anchorPoint","fn","setLeftTop","bottomIn","bottomTo","topIn","topTo","rightIn","rightTo","leftIn","leftTo","layoutInSceneCenter","addToSceneCenter","getScreenPosition","worldPosition","cameraPosition","keys","onLeft","onUp","onDown","onRight","onRelease","keyboard","keyObjects","addCameraDraggingToObject","camera","worldWidth","worldHeight","prevX","prevY","pointer","dragX","dragY","defaultScrollingCameraSettings","useScrollingCamera","customProps","oldBounds","cameraVelocityX","cameraVelocityY","lockVelocity","onProximityCallback","scrollFactorX","getScrollFactorOrdinate","scrollFactorY","updateUnSub","time","dT","cursorOrdinate","cameraOrdinate","cameraSize","threshold1","threshold2","d1","d2","StateEvent","state","autoUnSub","data","State","SimplePathBuilder","prev","el","pathColor","defaultConfig","SimpleGridPathMaker","isCellPathElement","stopBeforeFinish","startCell","finishCell","cells2D","isDefaultWalkable","onComplete","cellMoveDurationMs","onAnimationComplete","pathCells","movableFigures","figure","targets","currentCell","fig","centers","markerGameObject","cellIndex","markerObject","STROKE_WIDTH","STROKE_COLOR","SIDES","SpriteGridHexSelector","selectorColor","cellGameObject","SimpleHexSelector","PlayerFigure","treasureCard","monsterCard","isPlayerWin","gameObject","maxSize","TreasureFigure","MonsterFigure","MonoTerrainGenerator","terrainType","terrainCells","FirstMapGenerator","terrainRules","openedMonsterProbability","openedTreasuresProbability","playerCard","hexOrSquare","startCells","startCombos","shuffledMonsters","shuffledTreasures","monsterCombos","combo","treasureCombos","terrainRuleMap","terrainRule","isWalkableTerrain","getCellNears","colStep","rowStep","CYCLE","walkableColumn","walkableRow","nears","randomNear","startCombo","SimpleMonoHexMapGenerator","positions","gamePlay","treasuresTotal","monstersTotal","monsterCardsInGame","treasuresCardsInGame","terrainCell","playerColumn","playerRow","freeRadius","monsterCounter","treasureCounter","near","previousValue","currentValue","isMonstersQueue","isTreasureQueue","isMonster","isTreasure","monster","monsterCombo","treasureCombo","playerCombo","grid","amount","freePlaces","step","isFreeCell","places","cards","monsters","treasures","getCellFigures","figures","blockableTerrains","isCellBadTerrain","isCellHasFigures","isCellSingleFigure","isCellTooMuchFigures","isCellPathBlock","GameCell","color","strokeCssColor","strokeWidth","HexStrategy","SquareStrategy","SpriteGridColorCell","isPathBlock","SpriteGridColorHexCell","CLICK_EVENT","DRAG_TIME_BEFORE_CLICK","SimpleHexSpriteGrid","badColumnRow","bestCell","bestDistance","distance","gridStrategy","centerPoint","GameGrid","terrainRulesMap","terrains","terrainColors","terrainColor","getTerrainRulesArray","map","rule","sortByCardTypes","sortables","DungeonFigure","defaultGameState","getTreasuresWithoutMonsters","getMonsters","getCollectedMonsters","getRewardStarAmount","collectedTreasures","totalTreasures","portalPrice","isEndMapPortalCanBeOpened","collectTreasure","treasureState","playerState","getPlayerAttack","getPlayerHealth","monsterState","killMonster","loseToMonster","isPlayerDead","initGameState","gameConfig","TreasuresAndMonsters","cardFigures","player","treasure","isVoid","sortFigures","speedK","isOpened","about","cellFinishCandidate","isCanBeTarget","hasMonster","cellChecker","isTarget","isBadTerrain","isCellFigures","gameFigure","gameState","health","inventory","attack","description","imageKey","quote","treasuresAndMonstersStory","stories","MainScene","particles","logo","scaleConfig","phaserGameConfig","storiesEl","titleEl","prevStoryClose","runInGame","story","storiesIndex","addStory","addStoryDelimiter","isStart","addElement","storyTag","className","innerHtml","parent"],"sourceRoot":""}